(()=>{"use strict";var __webpack_modules__={667:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(464);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(472);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.switcher{\r\n  position: fixed;\r\n  top: 12px;\r\n  right: 12px;\r\n  z-index: 9999;\r\n  display: grid;\r\n  grid-template-columns: var(--tile, 48px) var(--tile, 48px);\r\n  column-gap: var(--switcher-gap, 0px);\r\n  padding: 0 var(--switcher-extra, 0px);\r\n  --icon-active: #42B983;\r\n  --icon-inactive: #9aa3b2;\r\n}\r\n\r\n.switcher .tile{\r\n  all: unset;\r\n  cursor: pointer;\r\n  width: var(--tile, 48px);\r\n  height: var(--tile, 48px);\r\n  display: grid;\r\n  place-items: center;\r\n  position: relative;\r\n  background:\r\n    repeating-linear-gradient(0deg, #1c1e23 0 2px, #15171b 2px 4px),\r\n    repeating-linear-gradient(90deg, #14161a 0 8px, #121418 8px 16px);\r\n  box-shadow:\r\n    inset 0 0 0 1px rgba(255,255,255,.2),\r\n    inset 0 0 0 2px rgba(255,255,255,.06);\r\n}\r\n\r\n.switcher .tile.right{\r\n  box-shadow:\r\n    inset 1px 0 0 #00000090,\r\n    inset 2px 0 0 #ffffff10,\r\n    inset 0 0 0 1px rgba(255,255,255,.2),\r\n    inset 0 0 0 2px rgba(255,255,255,.06);\r\n}\r\n\r\n.switcher .tile:active{ transform: translateY(1px) }\r\n.switcher .tile[aria-selected="false"]{ filter: brightness(.78) contrast(1.05) }\r\n.switcher .tile[aria-selected="true"]{\r\n  box-shadow: inset 0 0 0 1px #e7e9ec, inset 0 0 0 2px rgba(255,255,255,.2), 0 0 0 1px #ffffff20;\r\n}\r\n\r\n.switcher svg{ width: var(--icon, 24px); height: var(--icon, 24px); display: block }\r\n.switcher .stroke{ stroke: var(--icon-inactive); stroke-width:1.8; fill:none; stroke-linecap:round; stroke-linejoin:round }\r\n.switcher .dot{ fill: var(--icon-inactive) }\r\n.switcher .tile[aria-selected="true"] .stroke{ stroke: var(--icon-active) }\r\n.switcher .tile[aria-selected="true"] .dot{ fill: var(--icon-active) }\r\n.switcher .tile:hover .stroke{ stroke: var(--icon-active) }\r\n.switcher .tile:hover .dot{ fill: var(--icon-active) }\r\n\r\n.sr-only{ position:absolute; width:1px; height:1px; margin:-1px; overflow:hidden; clip:rect(0,0,0,0); white-space:nowrap; border:0 }\r\n\r\n\r\n\r\n\r\n`, "",{"version":3,"sources":["webpack://./D:/Users/asus/Desktop/web项目/demo1/src/controllers/switcher.css"],"names":[],"mappings":"AAAA;EACE,eAAe;EACf,SAAS;EACT,WAAW;EACX,aAAa;EACb,aAAa;EACb,0DAA0D;EAC1D,oCAAoC;EACpC,qCAAqC;EACrC,sBAAsB;EACtB,wBAAwB;AAC1B;;AAEA;EACE,UAAU;EACV,eAAe;EACf,wBAAwB;EACxB,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB;;qEAEmE;EACnE;;yCAEuC;AACzC;;AAEA;EACE;;;;yCAIuC;AACzC;;AAEA,wBAAwB,2BAA2B;AACnD,wCAAwC,uCAAuC;AAC/E;EACE,8FAA8F;AAChG;;AAEA,eAAe,wBAAwB,EAAE,yBAAyB,EAAE,eAAe;AACnF,mBAAmB,4BAA4B,EAAE,gBAAgB,EAAE,SAAS,EAAE,oBAAoB,EAAE,sBAAsB;AAC1H,gBAAgB,2BAA2B;AAC3C,+CAA+C,2BAA2B;AAC1E,4CAA4C,yBAAyB;AACrE,+BAA+B,2BAA2B;AAC1D,4BAA4B,yBAAyB;;AAErD,UAAU,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,eAAe,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,SAAS","sourcesContent":[".switcher{\\r\\n  position: fixed;\\r\\n  top: 12px;\\r\\n  right: 12px;\\r\\n  z-index: 9999;\\r\\n  display: grid;\\r\\n  grid-template-columns: var(--tile, 48px) var(--tile, 48px);\\r\\n  column-gap: var(--switcher-gap, 0px);\\r\\n  padding: 0 var(--switcher-extra, 0px);\\r\\n  --icon-active: #42B983;\\r\\n  --icon-inactive: #9aa3b2;\\r\\n}\\r\\n\\r\\n.switcher .tile{\\r\\n  all: unset;\\r\\n  cursor: pointer;\\r\\n  width: var(--tile, 48px);\\r\\n  height: var(--tile, 48px);\\r\\n  display: grid;\\r\\n  place-items: center;\\r\\n  position: relative;\\r\\n  background:\\r\\n    repeating-linear-gradient(0deg, #1c1e23 0 2px, #15171b 2px 4px),\\r\\n    repeating-linear-gradient(90deg, #14161a 0 8px, #121418 8px 16px);\\r\\n  box-shadow:\\r\\n    inset 0 0 0 1px rgba(255,255,255,.2),\\r\\n    inset 0 0 0 2px rgba(255,255,255,.06);\\r\\n}\\r\\n\\r\\n.switcher .tile.right{\\r\\n  box-shadow:\\r\\n    inset 1px 0 0 #00000090,\\r\\n    inset 2px 0 0 #ffffff10,\\r\\n    inset 0 0 0 1px rgba(255,255,255,.2),\\r\\n    inset 0 0 0 2px rgba(255,255,255,.06);\\r\\n}\\r\\n\\r\\n.switcher .tile:active{ transform: translateY(1px) }\\r\\n.switcher .tile[aria-selected=\\"false\\"]{ filter: brightness(.78) contrast(1.05) }\\r\\n.switcher .tile[aria-selected=\\"true\\"]{\\r\\n  box-shadow: inset 0 0 0 1px #e7e9ec, inset 0 0 0 2px rgba(255,255,255,.2), 0 0 0 1px #ffffff20;\\r\\n}\\r\\n\\r\\n.switcher svg{ width: var(--icon, 24px); height: var(--icon, 24px); display: block }\\r\\n.switcher .stroke{ stroke: var(--icon-inactive); stroke-width:1.8; fill:none; stroke-linecap:round; stroke-linejoin:round }\\r\\n.switcher .dot{ fill: var(--icon-inactive) }\\r\\n.switcher .tile[aria-selected=\\"true\\"] .stroke{ stroke: var(--icon-active) }\\r\\n.switcher .tile[aria-selected=\\"true\\"] .dot{ fill: var(--icon-active) }\\r\\n.switcher .tile:hover .stroke{ stroke: var(--icon-active) }\\r\\n.switcher .tile:hover .dot{ fill: var(--icon-active) }\\r\\n\\r\\n.sr-only{ position:absolute; width:1px; height:1px; margin:-1px; overflow:hidden; clip:rect(0,0,0,0); white-space:nowrap; border:0 }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjY3LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXGNvbnRyb2xsZXJzXFxzd2l0Y2hlci5jc3M/NWU2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLnN3aXRjaGVye1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDEycHg7XHJcbiAgcmlnaHQ6IDEycHg7XHJcbiAgei1pbmRleDogOTk5OTtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogdmFyKC0tdGlsZSwgNDhweCkgdmFyKC0tdGlsZSwgNDhweCk7XHJcbiAgY29sdW1uLWdhcDogdmFyKC0tc3dpdGNoZXItZ2FwLCAwcHgpO1xyXG4gIHBhZGRpbmc6IDAgdmFyKC0tc3dpdGNoZXItZXh0cmEsIDBweCk7XHJcbiAgLS1pY29uLWFjdGl2ZTogIzQyQjk4MztcclxuICAtLWljb24taW5hY3RpdmU6ICM5YWEzYjI7XHJcbn1cclxuXHJcbi5zd2l0Y2hlciAudGlsZXtcclxuICBhbGw6IHVuc2V0O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB3aWR0aDogdmFyKC0tdGlsZSwgNDhweCk7XHJcbiAgaGVpZ2h0OiB2YXIoLS10aWxlLCA0OHB4KTtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJhY2tncm91bmQ6XHJcbiAgICByZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KDBkZWcsICMxYzFlMjMgMCAycHgsICMxNTE3MWIgMnB4IDRweCksXHJcbiAgICByZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMTQxNjFhIDAgOHB4LCAjMTIxNDE4IDhweCAxNnB4KTtcclxuICBib3gtc2hhZG93OlxyXG4gICAgaW5zZXQgMCAwIDAgMXB4IHJnYmEoMjU1LDI1NSwyNTUsLjIpLFxyXG4gICAgaW5zZXQgMCAwIDAgMnB4IHJnYmEoMjU1LDI1NSwyNTUsLjA2KTtcclxufVxyXG5cclxuLnN3aXRjaGVyIC50aWxlLnJpZ2h0e1xyXG4gIGJveC1zaGFkb3c6XHJcbiAgICBpbnNldCAxcHggMCAwICMwMDAwMDA5MCxcclxuICAgIGluc2V0IDJweCAwIDAgI2ZmZmZmZjEwLFxyXG4gICAgaW5zZXQgMCAwIDAgMXB4IHJnYmEoMjU1LDI1NSwyNTUsLjIpLFxyXG4gICAgaW5zZXQgMCAwIDAgMnB4IHJnYmEoMjU1LDI1NSwyNTUsLjA2KTtcclxufVxyXG5cclxuLnN3aXRjaGVyIC50aWxlOmFjdGl2ZXsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCkgfVxyXG4uc3dpdGNoZXIgLnRpbGVbYXJpYS1zZWxlY3RlZD1cImZhbHNlXCJdeyBmaWx0ZXI6IGJyaWdodG5lc3MoLjc4KSBjb250cmFzdCgxLjA1KSB9XHJcbi5zd2l0Y2hlciAudGlsZVthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXXtcclxuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAxcHggI2U3ZTllYywgaW5zZXQgMCAwIDAgMnB4IHJnYmEoMjU1LDI1NSwyNTUsLjIpLCAwIDAgMCAxcHggI2ZmZmZmZjIwO1xyXG59XHJcblxyXG4uc3dpdGNoZXIgc3ZneyB3aWR0aDogdmFyKC0taWNvbiwgMjRweCk7IGhlaWdodDogdmFyKC0taWNvbiwgMjRweCk7IGRpc3BsYXk6IGJsb2NrIH1cclxuLnN3aXRjaGVyIC5zdHJva2V7IHN0cm9rZTogdmFyKC0taWNvbi1pbmFjdGl2ZSk7IHN0cm9rZS13aWR0aDoxLjg7IGZpbGw6bm9uZTsgc3Ryb2tlLWxpbmVjYXA6cm91bmQ7IHN0cm9rZS1saW5lam9pbjpyb3VuZCB9XHJcbi5zd2l0Y2hlciAuZG90eyBmaWxsOiB2YXIoLS1pY29uLWluYWN0aXZlKSB9XHJcbi5zd2l0Y2hlciAudGlsZVthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXSAuc3Ryb2tleyBzdHJva2U6IHZhcigtLWljb24tYWN0aXZlKSB9XHJcbi5zd2l0Y2hlciAudGlsZVthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXSAuZG90eyBmaWxsOiB2YXIoLS1pY29uLWFjdGl2ZSkgfVxyXG4uc3dpdGNoZXIgLnRpbGU6aG92ZXIgLnN0cm9rZXsgc3Ryb2tlOiB2YXIoLS1pY29uLWFjdGl2ZSkgfVxyXG4uc3dpdGNoZXIgLnRpbGU6aG92ZXIgLmRvdHsgZmlsbDogdmFyKC0taWNvbi1hY3RpdmUpIH1cclxuXHJcbi5zci1vbmx5eyBwb3NpdGlvbjphYnNvbHV0ZTsgd2lkdGg6MXB4OyBoZWlnaHQ6MXB4OyBtYXJnaW46LTFweDsgb3ZlcmZsb3c6aGlkZGVuOyBjbGlwOnJlY3QoMCwwLDAsMCk7IHdoaXRlLXNwYWNlOm5vd3JhcDsgYm9yZGVyOjAgfVxyXG5cclxuXHJcblxyXG5cclxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9EOi9Vc2Vycy9hc3VzL0Rlc2t0b3Avd2Vi6aG555uuL2RlbW8xL3NyYy9jb250cm9sbGVycy9zd2l0Y2hlci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxlQUFlO0VBQ2YsU0FBUztFQUNULFdBQVc7RUFDWCxhQUFhO0VBQ2IsYUFBYTtFQUNiLDBEQUEwRDtFQUMxRCxvQ0FBb0M7RUFDcEMscUNBQXFDO0VBQ3JDLHNCQUFzQjtFQUN0Qix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsZUFBZTtFQUNmLHdCQUF3QjtFQUN4Qix5QkFBeUI7RUFDekIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEI7O3FFQUVtRTtFQUNuRTs7eUNBRXVDO0FBQ3pDOztBQUVBO0VBQ0U7Ozs7eUNBSXVDO0FBQ3pDOztBQUVBLHdCQUF3QiwyQkFBMkI7QUFDbkQsd0NBQXdDLHVDQUF1QztBQUMvRTtFQUNFLDhGQUE4RjtBQUNoRzs7QUFFQSxlQUFlLHdCQUF3QixFQUFFLHlCQUF5QixFQUFFLGVBQWU7QUFDbkYsbUJBQW1CLDRCQUE0QixFQUFFLGdCQUFnQixFQUFFLFNBQVMsRUFBRSxvQkFBb0IsRUFBRSxzQkFBc0I7QUFDMUgsZ0JBQWdCLDJCQUEyQjtBQUMzQywrQ0FBK0MsMkJBQTJCO0FBQzFFLDRDQUE0Qyx5QkFBeUI7QUFDckUsK0JBQStCLDJCQUEyQjtBQUMxRCw0QkFBNEIseUJBQXlCOztBQUVyRCxVQUFVLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGVBQWUsRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxTQUFTXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zd2l0Y2hlcntcXHJcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gIHRvcDogMTJweDtcXHJcXG4gIHJpZ2h0OiAxMnB4O1xcclxcbiAgei1pbmRleDogOTk5OTtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHZhcigtLXRpbGUsIDQ4cHgpIHZhcigtLXRpbGUsIDQ4cHgpO1xcclxcbiAgY29sdW1uLWdhcDogdmFyKC0tc3dpdGNoZXItZ2FwLCAwcHgpO1xcclxcbiAgcGFkZGluZzogMCB2YXIoLS1zd2l0Y2hlci1leHRyYSwgMHB4KTtcXHJcXG4gIC0taWNvbi1hY3RpdmU6ICM0MkI5ODM7XFxyXFxuICAtLWljb24taW5hY3RpdmU6ICM5YWEzYjI7XFxyXFxufVxcclxcblxcclxcbi5zd2l0Y2hlciAudGlsZXtcXHJcXG4gIGFsbDogdW5zZXQ7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICB3aWR0aDogdmFyKC0tdGlsZSwgNDhweCk7XFxyXFxuICBoZWlnaHQ6IHZhcigtLXRpbGUsIDQ4cHgpO1xcclxcbiAgZGlzcGxheTogZ3JpZDtcXHJcXG4gIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBiYWNrZ3JvdW5kOlxcclxcbiAgICByZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KDBkZWcsICMxYzFlMjMgMCAycHgsICMxNTE3MWIgMnB4IDRweCksXFxyXFxuICAgIHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoOTBkZWcsICMxNDE2MWEgMCA4cHgsICMxMjE0MTggOHB4IDE2cHgpO1xcclxcbiAgYm94LXNoYWRvdzpcXHJcXG4gICAgaW5zZXQgMCAwIDAgMXB4IHJnYmEoMjU1LDI1NSwyNTUsLjIpLFxcclxcbiAgICBpbnNldCAwIDAgMCAycHggcmdiYSgyNTUsMjU1LDI1NSwuMDYpO1xcclxcbn1cXHJcXG5cXHJcXG4uc3dpdGNoZXIgLnRpbGUucmlnaHR7XFxyXFxuICBib3gtc2hhZG93OlxcclxcbiAgICBpbnNldCAxcHggMCAwICMwMDAwMDA5MCxcXHJcXG4gICAgaW5zZXQgMnB4IDAgMCAjZmZmZmZmMTAsXFxyXFxuICAgIGluc2V0IDAgMCAwIDFweCByZ2JhKDI1NSwyNTUsMjU1LC4yKSxcXHJcXG4gICAgaW5zZXQgMCAwIDAgMnB4IHJnYmEoMjU1LDI1NSwyNTUsLjA2KTtcXHJcXG59XFxyXFxuXFxyXFxuLnN3aXRjaGVyIC50aWxlOmFjdGl2ZXsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCkgfVxcclxcbi5zd2l0Y2hlciAudGlsZVthcmlhLXNlbGVjdGVkPVxcXCJmYWxzZVxcXCJdeyBmaWx0ZXI6IGJyaWdodG5lc3MoLjc4KSBjb250cmFzdCgxLjA1KSB9XFxyXFxuLnN3aXRjaGVyIC50aWxlW2FyaWEtc2VsZWN0ZWQ9XFxcInRydWVcXFwiXXtcXHJcXG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDFweCAjZTdlOWVjLCBpbnNldCAwIDAgMCAycHggcmdiYSgyNTUsMjU1LDI1NSwuMiksIDAgMCAwIDFweCAjZmZmZmZmMjA7XFxyXFxufVxcclxcblxcclxcbi5zd2l0Y2hlciBzdmd7IHdpZHRoOiB2YXIoLS1pY29uLCAyNHB4KTsgaGVpZ2h0OiB2YXIoLS1pY29uLCAyNHB4KTsgZGlzcGxheTogYmxvY2sgfVxcclxcbi5zd2l0Y2hlciAuc3Ryb2tleyBzdHJva2U6IHZhcigtLWljb24taW5hY3RpdmUpOyBzdHJva2Utd2lkdGg6MS44OyBmaWxsOm5vbmU7IHN0cm9rZS1saW5lY2FwOnJvdW5kOyBzdHJva2UtbGluZWpvaW46cm91bmQgfVxcclxcbi5zd2l0Y2hlciAuZG90eyBmaWxsOiB2YXIoLS1pY29uLWluYWN0aXZlKSB9XFxyXFxuLnN3aXRjaGVyIC50aWxlW2FyaWEtc2VsZWN0ZWQ9XFxcInRydWVcXFwiXSAuc3Ryb2tleyBzdHJva2U6IHZhcigtLWljb24tYWN0aXZlKSB9XFxyXFxuLnN3aXRjaGVyIC50aWxlW2FyaWEtc2VsZWN0ZWQ9XFxcInRydWVcXFwiXSAuZG90eyBmaWxsOiB2YXIoLS1pY29uLWFjdGl2ZSkgfVxcclxcbi5zd2l0Y2hlciAudGlsZTpob3ZlciAuc3Ryb2tleyBzdHJva2U6IHZhcigtLWljb24tYWN0aXZlKSB9XFxyXFxuLnN3aXRjaGVyIC50aWxlOmhvdmVyIC5kb3R7IGZpbGw6IHZhcigtLWljb24tYWN0aXZlKSB9XFxyXFxuXFxyXFxuLnNyLW9ubHl7IHBvc2l0aW9uOmFic29sdXRlOyB3aWR0aDoxcHg7IGhlaWdodDoxcHg7IG1hcmdpbjotMXB4OyBvdmVyZmxvdzpoaWRkZW47IGNsaXA6cmVjdCgwLDAsMCwwKTsgd2hpdGUtc3BhY2U6bm93cmFwOyBib3JkZXI6MCB9XFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///667\n')},962:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  v: () => (/* binding */ tweenGroup)\n});\n\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\three\\build\\three.module.js + 1 modules\nvar D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module = __webpack_require__(68);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\three\\examples\\jsm\\controls\\OrbitControls.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_three_examples_jsm_controls_OrbitControls = __webpack_require__(863);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\@tweenjs\\tween.js\\dist\\tween.esm.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm = __webpack_require__(244);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\style-loader\\dist\\runtime\\injectStylesIntoStyleTag.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag = __webpack_require__(202);\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\style-loader\\dist\\runtime\\styleDomAPI.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_styleDomAPI = __webpack_require__(147);\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_styleDomAPI);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\style-loader\\dist\\runtime\\insertBySelector.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_insertBySelector = __webpack_require__(505);\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_insertBySelector_default = /*#__PURE__*/__webpack_require__.n(D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_insertBySelector);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\style-loader\\dist\\runtime\\setAttributesWithoutAttributes.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes = __webpack_require__(562);\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\style-loader\\dist\\runtime\\insertStyleElement.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_insertStyleElement = __webpack_require__(134);\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_insertStyleElement);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\style-loader\\dist\\runtime\\styleTagTransform.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_styleTagTransform = __webpack_require__(523);\nvar D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_styleTagTransform);\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\css-loader\\dist\\cjs.js!D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\controllers\\switcher.css\nvar D_Users_asus_Desktop_web_demo1_node_modules_css_loader_dist_cjs_js_D_Users_asus_Desktop_web_demo1_src_controllers_switcher = __webpack_require__(667);\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\controllers\\switcher.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_styleTagTransform_default());\noptions.setAttributes = (D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_default());\noptions.insert = D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_insertBySelector_default().bind(null, \"head\");\noptions.domAPI = (D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_styleDomAPI_default());\noptions.insertStyleElement = (D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_insertStyleElement_default());\n\nvar update = D_Users_asus_Desktop_web_demo1_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_default()(D_Users_asus_Desktop_web_demo1_node_modules_css_loader_dist_cjs_js_D_Users_asus_Desktop_web_demo1_src_controllers_switcher/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const D_Users_asus_Desktop_web_demo1_src_controllers_switcher = (D_Users_asus_Desktop_web_demo1_node_modules_css_loader_dist_cjs_js_D_Users_asus_Desktop_web_demo1_src_controllers_switcher/* default */.A && D_Users_asus_Desktop_web_demo1_node_modules_css_loader_dist_cjs_js_D_Users_asus_Desktop_web_demo1_src_controllers_switcher/* default */.A.locals ? D_Users_asus_Desktop_web_demo1_node_modules_css_loader_dist_cjs_js_D_Users_asus_Desktop_web_demo1_src_controllers_switcher/* default */.A.locals : undefined);\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\widgets\\switcher.js\n\r\n// 渲染右上角切换控件\r\n// current: 'external' | 'internal'\r\n// options: { tile?: string, icon?: string, gap?: string, extra?: string }\r\nfunction renderSwitcher(current, options = {}){\r\n  const nav = document.createElement('nav');\r\n  nav.className = 'switcher';\r\n  nav.setAttribute('role', 'tablist');\r\n  nav.setAttribute('aria-label', '页面切换');\r\n\r\n  // 允许通过 CSS 变量自定义尺寸/间距\r\n  if (options.tile)  nav.style.setProperty('--tile', options.tile);\r\n  if (options.icon)  nav.style.setProperty('--icon', options.icon);\r\n  if (options.gap)   nav.style.setProperty('--switcher-gap', options.gap);\r\n  if (options.extra) nav.style.setProperty('--switcher-extra', options.extra);\r\n\r\n  const external = document.createElement('a');\r\n  external.className = 'tile left';\r\n  external.id = 'tab-external';\r\n  external.setAttribute('role', 'tab');\r\n  external.setAttribute('href', 'index.html');\r\n  external.setAttribute('title', '外部（面板/示波器）');\r\n  external.setAttribute('aria-selected', String(current === 'external'));\r\n  external.innerHTML = '<span class=\"sr-only\">外部</span>'+\r\n    '<svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">'+\r\n    '  <rect class=\"stroke\" x=\"3\" y=\"4\" width=\"18\" height=\"14\" rx=\"1.5\"/>'+\r\n    '  <rect class=\"stroke\" x=\"5\" y=\"6\" width=\"10\" height=\"8\" rx=\"0.5\"/>'+\r\n    '  <circle class=\"stroke\" cx=\"18\" cy=\"9\" r=\"1.3\"/>'+\r\n    '  <circle class=\"stroke\" cx=\"18\" cy=\"13\" r=\"1.3\"/>'+\r\n    '</svg>';\r\n\r\n  const internal = document.createElement('a');\r\n  internal.className = 'tile right';\r\n  internal.id = 'tab-internal';\r\n  internal.setAttribute('role', 'tab');\r\n  internal.setAttribute('href', 'internal.html');\r\n  internal.setAttribute('title', '内部原理（波形/电路）');\r\n  internal.setAttribute('aria-selected', String(current === 'internal'));\r\n  internal.innerHTML = '<span class=\"sr-only\">内部原理</span>'+\r\n    '<svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">'+\r\n    '  <path class=\"stroke\" d=\"M2 12c2-6 4 6 6 0s4 6 6 0 4 6 6 0\"/>'+\r\n    '  <circle class=\"dot\" cx=\"19\" cy=\"6\" r=\"1.1\"/>'+\r\n    '</svg>';\r\n\r\n  nav.appendChild(external);\r\n  nav.appendChild(internal);\r\n  document.body.appendChild(nav);\r\n}\r\n\r\n// 兼容：同时挂到 window 以避免历史调用报错\r\nif (typeof window !== 'undefined') {\r\n  window.renderSwitcher = renderSwitcher;\r\n}\r\n\r\n\r\n\r\n\r\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\config.json\nconst D_Users_asus_Desktop_web_demo1_src_config_namespaceObject = /*#__PURE__*/JSON.parse('{\"CONFIG\":{\"beam\":{\"intensity\":1,\"color\":\"0x00ff00\"},\"deflection\":{\"horizontal\":{\"voltage\":0,\"maxDeflection\":3},\"vertical\":{\"voltage\":0,\"maxDeflection\":2.5}},\"waveform\":{\"type\":\"sine\",\"frequency\":1,\"amplitude\":3,\"phase\":0,\"enabled\":false},\"screen\":{\"persistence\":0.95,\"color\":\"0x0\",\"intensity\":0.6,\"gridColor\":\"0x666666\",\"gridSpacing\":0.5,\"gridOpacity\":0.3},\"dotLight\":{\"color\":\"0xffff00\"},\"shell\":{\"visible\":true,\"opacity\":0.8,\"size\":{\"width\":3.75,\"height\":3.75,\"depth\":4},\"cylinder1\":{\"visible\":false,\"radius\":1.5,\"height\":3.5,\"position\":{\"x\":0,\"y\":0,\"z\":0},\"rotation\":{\"x\":0,\"y\":0,\"z\":-3.1416},\"color\":\"0x88ccff\",\"opacity\":1},\"cylinder2\":{\"visible\":true,\"radius\":1,\"height\":1.8,\"position\":{\"x\":-4.5,\"y\":0,\"z\":0},\"rotation\":{\"x\":0,\"y\":0,\"z\":0},\"color\":\"0xF0F0F0\",\"opacity\":1},\"rotationCurveConnection\":{\"visible\":true,\"curveType\":\"G2\",\"connectionLength\":4.65,\"segments\":50,\"radialSegments\":32,\"color\":\"0xF0F0F0\",\"opacity\":1,\"position\":{\"offset\":{\"x\":3.3,\"y\":0,\"z\":0},\"description\":\"连接相对于计算中心点的位置偏移\"},\"rotation\":{\"offset\":{\"x\":0,\"y\":0,\"z\":0},\"description\":\"连接相对于计算方向的旋转偏移（弧度）\"},\"description\":\"旋转曲线连接配置 - 用于创建圆柱体之间的平滑过渡\"},\"superellipseTransition\":{\"visible\":true,\"segments\":64,\"radialSegments\":32,\"transitionLength\":5,\"startExponent\":2,\"endExponent\":40,\"g2Smoothing\":true,\"color\":\"0xF0F0F0\",\"opacity\":1,\"position\":{\"offset\":{\"x\":1.25,\"y\":0,\"z\":0},\"description\":\"形状渐变相对于计算中心点的位置偏移\"},\"rotation\":{\"offset\":{\"x\":0,\"y\":0,\"z\":0},\"description\":\"形状渐变相对于计算方向的旋转偏移（弧度）\"},\"description\":\"超椭圆形状渐变配置 - 从圆形平滑过渡到矩形（基于|x/a|^m + |y/b|^m = 1，更高的endExponent创造更接近矩形的形状）\"}},\"camera\":{\"fov\":45,\"near\":0.1,\"far\":1000,\"position\":{\"x\":9,\"y\":6,\"z\":15},\"target\":{\"x\":0,\"y\":0,\"z\":0}},\"scene\":{\"background\":\"0x20232a\",\"grid\":{\"size\":20,\"divisions\":40,\"color1\":\"0x4a4a4a\",\"color2\":\"0x2f2f2f\",\"position\":{\"x\":0,\"y\":-1.6,\"z\":0}}},\"materials\":{\"metal\":{\"color\":\"0xF0F0F0\",\"metalness\":0.6,\"roughness\":0.3,\"textures\":{\"map\":\"textures/silver_metal_background_1.jpg\"}},\"plate\":{\"color\":\"0xF0F0F0\",\"metalness\":0.6,\"roughness\":0.3,\"textures\":{\"map\":\"textures/silver_metal_background_1.jpg\"}},\"screen\":{\"color\":\"0x001a00\",\"roughness\":0.4,\"side\":\"DoubleSide\"},\"glow\":{\"opacity\":0.8,\"size\":0.02}},\"components\":{\"gun\":{\"radius\":0.15,\"height\":2,\"position\":{\"x\":-4,\"y\":0,\"z\":0}},\"gunHead\":{\"radius\":0.1,\"height\":0.4,\"position\":{\"x\":-2.9,\"y\":0,\"z\":0}},\"verticalPlates\":{\"width\":0.05,\"height\":1.5,\"depth\":1,\"positions\":[{\"x\":-1.5,\"y\":0.8,\"z\":0},{\"x\":-1.5,\"y\":-0.8,\"z\":0}]},\"horizontalPlates\":{\"width\":1.5,\"height\":0.05,\"depth\":1,\"positions\":[{\"x\":-0.2,\"y\":0,\"z\":0.55},{\"x\":-0.2,\"y\":0,\"z\":-0.55}]},\"screen\":{\"width\":4,\"height\":3,\"position\":{\"x\":6,\"y\":0,\"z\":0}}},\"electronBeam\":{\"startPoint\":{\"x\":-3,\"y\":0,\"z\":0},\"endPoint\":{\"x\":6,\"y\":0,\"z\":0},\"pathPoints\":[{\"x\":-2.7,\"y\":0,\"z\":0},{\"x\":-1.5,\"y\":0,\"z\":0},{\"x\":-0.2,\"y\":0,\"z\":0},{\"x\":3,\"y\":0,\"z\":0}],\"trace\":{\"maxPoints\":100,\"opacity\":0.3},\"parabolicSegments\":15,\"trajectorySmoothing\":0.3,\"linearSegments\":{\"gunToVerticalPlate\":3,\"betweenPlates\":3,\"plateToScreen\":5},\"voltageScalingFactor\":1,\"zFightingOffset\":0.05,\"screenOffset\":0.01,\"enableParticleEffect\":false,\"physics\":{\"electronVelocity\":1,\"electricFieldStrength\":0.8,\"platePositions\":{\"verticalPlateStart\":-1.8,\"verticalPlateEnd\":-1.2,\"horizontalPlateStart\":-0.5,\"horizontalPlateEnd\":0.5}}},\"screenEffects\":{\"maxGlowPoints\":200,\"glowPointSize\":0.02,\"fadeRate\":10,\"minOpacity\":0.05},\"explodedView\":{\"explodeFactor\":1.5,\"animationDuration\":1000,\"cameraOffset\":{\"x\":3,\"y\":2,\"z\":3}},\"demoAnimation\":{\"electronParticle\":{\"size\":0.015,\"opacity\":0.8,\"emissionRate\":8},\"cameraOffset\":{\"x\":3,\"y\":2,\"z\":3},\"animationDuration\":1500},\"ui\":{\"controlPanel\":{\"position\":{\"bottom\":\"20px\",\"right\":\"20px\"},\"backgroundColor\":\"rgba(0, 0, 0, 0.7)\",\"borderRadius\":\"8px\",\"padding\":\"10px\",\"zIndex\":100},\"demoPanel\":{\"position\":{\"top\":\"20px\",\"left\":\"20px\"},\"backgroundColor\":\"rgba(0, 0, 0, 0.7)\",\"borderRadius\":\"8px\",\"padding\":\"15px\",\"maxWidth\":\"300px\",\"zIndex\":100},\"button\":{\"backgroundColor\":\"#2196F3\",\"hoverColor\":\"#0b7dda\",\"activeColor\":\"#4CAF50\",\"warningColor\":\"#f44336\",\"padding\":\"8px 12px\",\"borderRadius\":\"4px\"}},\"labelSystem\":{\"backgroundColor\":\"rgba(0, 0, 0, 0.6)\",\"color\":\"white\",\"padding\":\"2px 6px\",\"borderRadius\":\"3px\",\"fontSize\":\"12px\",\"descriptionPanel\":{\"position\":{\"bottom\":\"20px\",\"left\":\"20px\"},\"backgroundColor\":\"rgba(0, 0, 0, 0.8)\",\"maxWidth\":\"400px\",\"zIndex\":1000}},\"descriptions\":{\"gun\":{\"name\":\"电子枪\",\"description\":\"电子枪是阴极射线管的核心部件，负责产生并加速电子束。它由加热的阴极（负极）和带正电的阳极组成，电子从阴极释放后被阳极加速，形成高速电子束。\"},\"gunHead\":{\"name\":\"电子枪出口\",\"description\":\"电子枪出口是电子束离开电子枪进入偏转系统的位置。在这里，电子束被聚焦成一个细小的光点，准备接受后续的偏转控制。\"},\"v1\":{\"name\":\"垂直偏转板（上）\",\"description\":\"垂直偏转板是一对带电平行板，用于控制电子束在垂直方向上的偏转。当上下偏转板之间施加电压时，电子束会受到垂直方向的电场力，导致在垂直方向上偏转。\"},\"v2\":{\"name\":\"垂直偏转板（下）\",\"description\":\"垂直偏转板的下板，与上板形成电场。通过调整两板之间的电压，可以控制电子束向上或向下偏转的程度。\"},\"h1\":{\"name\":\"水平偏转板（左）\",\"description\":\"水平偏转板是一对带电平行板，用于控制电子束在水平方向上的偏转。当左右偏转板之间施加电压时，电子束会受到水平方向的电场力，导致在水平方向上偏转。\"},\"h2\":{\"name\":\"水平偏转板（右）\",\"description\":\"水平偏转板的右板，与左板形成电场。通过调整两板之间的电压，可以控制电子束向左或向右偏转的程度。\"},\"screen\":{\"name\":\"荧光屏\",\"description\":\"荧光屏是涂有荧光物质的平板，当高速电子束击中荧光屏时，荧光物质会发光，形成可见的光点。通过控制电子束的偏转，可以在荧光屏上绘制各种图形和波形。\"}}},\"WAVEFORM_TYPES\":{\"sine\":\"正弦波\",\"square\":\"方波\",\"sawtooth\":\"锯齿波\",\"triangle\":\"三角波\"}}');\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\configLoader.js\n// 配置加载器 - 从JSON加载并处理配置\r\n\r\n\r\n// 递归处理对象，将字符串形式的十六进制颜色转换为数字\r\nfunction processConfig(obj) {\r\n  if (typeof obj === 'string' && obj.startsWith('0x')) {\r\n    // 转换十六进制字符串为数字\r\n    return parseInt(obj, 16);\r\n  } else if (Array.isArray(obj)) {\r\n    // 处理数组\r\n    return obj.map(processConfig);\r\n  } else if (obj && typeof obj === 'object') {\r\n    // 处理对象\r\n    const processed = {};\r\n    for (const [key, value] of Object.entries(obj)) {\r\n      processed[key] = processConfig(value);\r\n    }\r\n    return processed;\r\n  }\r\n  return obj;\r\n}\r\n\r\n// 处理配置数据\r\nconst processedConfig = processConfig(D_Users_asus_Desktop_web_demo1_src_config_namespaceObject);\r\n\r\n// 导出处理后的配置\r\nconst CONFIG = processedConfig.CONFIG;\r\nconst WAVEFORM_TYPES = processedConfig.WAVEFORM_TYPES;\r\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\examples\\ConnectionPositionDemo.js\n/**\r\n * 旋转曲线连接位置控制演示\r\n * 展示如何在代码中动态移动和旋转连接\r\n */\r\n\r\nclass ConnectionPositionDemo {\r\n  constructor(crtShell) {\r\n    this.crtShell = crtShell;\r\n    this.animationId = null;\r\n    this.isAnimating = false;\r\n    \r\n    // 原始偏移量\r\n    this.originalPositionOffset = { x: 0, y: 0, z: 0 };\r\n    this.originalRotationOffset = { x: 0, y: 0, z: 0 };\r\n    \r\n    // 动画参数\r\n    this.time = 0;\r\n    this.animationSpeed = 0.01;\r\n  }\r\n\r\n  /**\r\n   * 开始位置动画演示\r\n   */\r\n  startPositionAnimation() {\r\n    if (this.isAnimating) return;\r\n    \r\n    this.isAnimating = true;\r\n    this.time = 0;\r\n    \r\n    // 保存原始偏移量\r\n    this.originalPositionOffset = this.crtShell.getConnectionPositionOffset();\r\n    this.originalRotationOffset = this.crtShell.getConnectionRotationOffset();\r\n    \r\n    console.log('🎬 开始旋转曲线连接位置动画演示');\r\n    this.animate();\r\n  }\r\n\r\n  /**\r\n   * 停止位置动画演示\r\n   */\r\n  stopPositionAnimation() {\r\n    if (!this.isAnimating) return;\r\n    \r\n    this.isAnimating = false;\r\n    if (this.animationId) {\r\n      cancelAnimationFrame(this.animationId);\r\n      this.animationId = null;\r\n    }\r\n    \r\n    // 恢复原始偏移量\r\n    this.crtShell.setConnectionPositionOffset(\r\n      this.originalPositionOffset.x,\r\n      this.originalPositionOffset.y,\r\n      this.originalPositionOffset.z\r\n    );\r\n    this.crtShell.setConnectionRotationOffset(\r\n      this.originalRotationOffset.x,\r\n      this.originalRotationOffset.y,\r\n      this.originalRotationOffset.z\r\n    );\r\n    \r\n    console.log('⏹️ 停止旋转曲线连接位置动画演示');\r\n  }\r\n\r\n  /**\r\n   * 动画循环\r\n   */\r\n  animate() {\r\n    if (!this.isAnimating) return;\r\n    \r\n    this.time += this.animationSpeed;\r\n    \r\n    // 计算动态位置偏移\r\n    const positionOffset = {\r\n      x: this.originalPositionOffset.x + Math.sin(this.time) * 0.5,\r\n      y: this.originalPositionOffset.y + Math.cos(this.time * 0.8) * 0.3,\r\n      z: this.originalPositionOffset.z + Math.sin(this.time * 1.2) * 0.2\r\n    };\r\n    \r\n    // 计算动态旋转偏移\r\n    const rotationOffset = {\r\n      x: this.originalRotationOffset.x + Math.sin(this.time * 0.7) * 0.2,\r\n      y: this.originalRotationOffset.y + Math.cos(this.time * 0.9) * 0.15,\r\n      z: this.originalRotationOffset.z + Math.sin(this.time * 1.1) * 0.1\r\n    };\r\n    \r\n    // 应用偏移\r\n    this.crtShell.setConnectionPositionOffset(\r\n      positionOffset.x,\r\n      positionOffset.y,\r\n      positionOffset.z\r\n    );\r\n    this.crtShell.setConnectionRotationOffset(\r\n      rotationOffset.x,\r\n      rotationOffset.y,\r\n      rotationOffset.z\r\n    );\r\n    \r\n    this.animationId = requestAnimationFrame(() => this.animate());\r\n  }\r\n\r\n  /**\r\n   * 演示不同的位置预设\r\n   */\r\n  demonstratePositionPresets() {\r\n    console.log('🎯 演示旋转曲线连接位置预设');\r\n    \r\n    const presets = [\r\n      {\r\n        name: '默认位置',\r\n        position: { x: 0, y: 0, z: 0 },\r\n        rotation: { x: 0, y: 0, z: 0 }\r\n      },\r\n      {\r\n        name: '向上偏移',\r\n        position: { x: 0, y: 0.5, z: 0 },\r\n        rotation: { x: 0, y: 0, z: 0 }\r\n      },\r\n      {\r\n        name: '向右偏移',\r\n        position: { x: 0.5, y: 0, z: 0 },\r\n        rotation: { x: 0, y: 0, z: 0 }\r\n      },\r\n      {\r\n        name: '向前偏移',\r\n        position: { x: 0, y: 0, z: 0.5 },\r\n        rotation: { x: 0, y: 0, z: 0 }\r\n      },\r\n      {\r\n        name: '旋转倾斜',\r\n        position: { x: 0, y: 0, z: 0 },\r\n        rotation: { x: 0.3, y: 0.2, z: 0.1 }\r\n      },\r\n      {\r\n        name: '复合变换',\r\n        position: { x: 0.3, y: 0.2, z: 0.1 },\r\n        rotation: { x: 0.2, y: 0.3, z: 0.1 }\r\n      }\r\n    ];\r\n    \r\n    let currentIndex = 0;\r\n    \r\n    const switchPreset = () => {\r\n      if (currentIndex >= presets.length) {\r\n        console.log('✅ 位置预设演示完成');\r\n        return;\r\n      }\r\n      \r\n      const preset = presets[currentIndex];\r\n      console.log(`📍 切换到预设: ${preset.name}`);\r\n      \r\n      this.crtShell.setConnectionPositionOffset(\r\n        preset.position.x,\r\n        preset.position.y,\r\n        preset.position.z\r\n      );\r\n      this.crtShell.setConnectionRotationOffset(\r\n        preset.rotation.x,\r\n        preset.rotation.y,\r\n        preset.rotation.z\r\n      );\r\n      \r\n      currentIndex++;\r\n      setTimeout(switchPreset, 2000); // 每2秒切换一个预设\r\n    };\r\n    \r\n    switchPreset();\r\n  }\r\n\r\n  /**\r\n   * 手动设置连接位置\r\n   */\r\n  setConnectionPosition(x, y, z) {\r\n    console.log(`🎯 手动设置连接位置: (${x}, ${y}, ${z})`);\r\n    this.crtShell.setConnectionPositionOffset(x, y, z);\r\n  }\r\n\r\n  /**\r\n   * 手动设置连接旋转\r\n   */\r\n  setConnectionRotation(x, y, z) {\r\n    console.log(`🔄 手动设置连接旋转: (${x}, ${y}, ${z}) 弧度`);\r\n    this.crtShell.setConnectionRotationOffset(x, y, z);\r\n  }\r\n\r\n  /**\r\n   * 获取当前连接变换信息\r\n   */\r\n  getConnectionTransform() {\r\n    const position = this.crtShell.getConnectionPositionOffset();\r\n    const rotation = this.crtShell.getConnectionRotationOffset();\r\n    const actualPosition = this.crtShell.getConnectionPosition();\r\n    const actualRotation = this.crtShell.getConnectionRotation();\r\n    \r\n    const info = {\r\n      positionOffset: position,\r\n      rotationOffset: rotation,\r\n      actualPosition: {\r\n        x: actualPosition.x,\r\n        y: actualPosition.y,\r\n        z: actualPosition.z\r\n      },\r\n      actualRotation: {\r\n        x: actualRotation.x,\r\n        y: actualRotation.y,\r\n        z: actualRotation.z\r\n      }\r\n    };\r\n    \r\n    console.log('📊 当前连接变换信息:', info);\r\n    return info;\r\n  }\r\n\r\n  /**\r\n   * 重置连接到默认位置\r\n   */\r\n  resetConnectionTransform() {\r\n    console.log('🔄 重置连接到默认位置');\r\n    this.crtShell.setConnectionPositionOffset(0, 0, 0);\r\n    this.crtShell.setConnectionRotationOffset(0, 0, 0);\r\n  }\r\n}\r\n\r\n// 使用示例（在浏览器控制台中）：\r\n/*\r\n// 假设你已经有了 crtShell 实例\r\nconst demo = new ConnectionPositionDemo(crtShell);\r\n\r\n// 开始动画演示\r\ndemo.startPositionAnimation();\r\n\r\n// 停止动画\r\ndemo.stopPositionAnimation();\r\n\r\n// 演示位置预设\r\ndemo.demonstratePositionPresets();\r\n\r\n// 手动设置位置\r\ndemo.setConnectionPosition(0.5, 0.3, 0.2);\r\n\r\n// 手动设置旋转\r\ndemo.setConnectionRotation(0.1, 0.2, 0.1);\r\n\r\n// 获取当前变换信息\r\ndemo.getConnectionTransform();\r\n\r\n// 重置到默认位置\r\ndemo.resetConnectionTransform();\r\n*/\r\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\examples\\SuperellipseTransitionDemo.js\n/**\r\n * 超椭圆形状渐变演示类\r\n * 提供形状渐变的交互控制和动画演示\r\n */\r\nclass SuperellipseTransitionDemo {\r\n  /**\r\n   * 构造函数\r\n   * @param {CRTShell} crtShell - CRT外壳实例\r\n   */\r\n  constructor(crtShell) {\r\n    this.crtShell = crtShell;\r\n    this.animationId = null;\r\n    this.animationStartTime = 0;\r\n    \r\n    console.log('🎨 超椭圆形状渐变演示已初始化');\r\n    console.log('📖 可用方法：');\r\n    console.log('  • startMorphAnimation() - 开始形状变形动画');\r\n    console.log('  • stopMorphAnimation() - 停止动画');\r\n    console.log('  • demonstrateExponents() - 演示不同指数效果');\r\n    console.log('  • setTransitionPosition(x,y,z) - 设置位置');\r\n    console.log('  • setTransitionExponents(start,end) - 设置指数范围');\r\n    console.log('  • resetTransition() - 重置到默认状态');\r\n  }\r\n\r\n  /**\r\n   * 开始形状变形动画\r\n   * 动态改变超椭圆指数，实现从圆形到方形的连续变形\r\n   */\r\n  startMorphAnimation() {\r\n    console.log('🎬 开始超椭圆形状变形动画...');\r\n    \r\n    this.stopMorphAnimation(); // 确保没有重复动画\r\n    this.animationStartTime = Date.now();\r\n    \r\n    const animate = () => {\r\n      const elapsed = (Date.now() - this.animationStartTime) / 1000;\r\n      const period = 6.0; // 动画周期（秒）\r\n      \r\n      // 使用正弦波创建平滑的指数变化\r\n      const t = (Math.sin(elapsed * 2 * Math.PI / period) + 1) / 2; // 0到1之间\r\n      \r\n      // 指数范围：2.0（圆形）到 12.0（尖锐方形）\r\n      const startExponent = 2.0 + t * 10.0;\r\n      const endExponent = 2.0 + (1 - t) * 10.0;\r\n      \r\n      // 更新形状渐变\r\n      this.crtShell.updateTransitionExponents(startExponent, endExponent);\r\n      \r\n      // 同时调整位置产生波动效果\r\n      const positionWave = Math.sin(elapsed * 4) * 0.2;\r\n      this.crtShell.setTransitionPositionOffset(1.2 + positionWave, 0, 0);\r\n      \r\n      this.animationId = requestAnimationFrame(animate);\r\n    };\r\n    \r\n    animate();\r\n  }\r\n\r\n  /**\r\n   * 停止形状变形动画\r\n   */\r\n  stopMorphAnimation() {\r\n    if (this.animationId) {\r\n      cancelAnimationFrame(this.animationId);\r\n      this.animationId = null;\r\n      console.log('⏹️ 形状变形动画已停止');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 演示不同的超椭圆指数效果\r\n   * 自动循环展示各种形状\r\n   */\r\n  demonstrateExponents() {\r\n    console.log('🎯 演示超椭圆指数效果...');\r\n    \r\n    const demonstrations = [\r\n      { name: '标准圆形', start: 2.0, end: 2.0, duration: 2000 },\r\n      { name: '椭圆形', start: 2.0, end: 2.5, duration: 2000 },\r\n      { name: '圆角方形', start: 2.0, end: 6.0, duration: 2000 },\r\n      { name: '方形', start: 2.0, end: 8.0, duration: 2000 },\r\n      { name: '尖锐方形', start: 2.0, end: 12.0, duration: 2000 },\r\n      { name: '超尖锐方形', start: 2.0, end: 20.0, duration: 2000 },\r\n      { name: '极端方形', start: 2.0, end: 50.0, duration: 2000 }\r\n    ];\r\n    \r\n    let currentIndex = 0;\r\n    \r\n    const showNext = () => {\r\n      if (currentIndex >= demonstrations.length) {\r\n        console.log('✅ 指数演示完成');\r\n        this.resetTransition();\r\n        return;\r\n      }\r\n      \r\n      const demo = demonstrations[currentIndex];\r\n      console.log(`📐 ${demo.name}: 起始指数=${demo.start}, 结束指数=${demo.end}`);\r\n      \r\n      this.crtShell.updateTransitionExponents(demo.start, demo.end);\r\n      \r\n      currentIndex++;\r\n      setTimeout(showNext, demo.duration);\r\n    };\r\n    \r\n    showNext();\r\n  }\r\n\r\n  /**\r\n   * 设置形状渐变位置\r\n   * @param {number} x - X坐标\r\n   * @param {number} y - Y坐标  \r\n   * @param {number} z - Z坐标\r\n   */\r\n  setTransitionPosition(x, y, z) {\r\n    this.crtShell.setTransitionPosition(x, y, z);\r\n    console.log(`📍 形状渐变位置设置为: (${x.toFixed(2)}, ${y.toFixed(2)}, ${z.toFixed(2)})`);\r\n  }\r\n\r\n  /**\r\n   * 设置形状渐变位置偏移\r\n   * @param {number} x - X轴偏移\r\n   * @param {number} y - Y轴偏移\r\n   * @param {number} z - Z轴偏移\r\n   */\r\n  setTransitionPositionOffset(x, y, z) {\r\n    this.crtShell.setTransitionPositionOffset(x, y, z);\r\n    console.log(`📍 形状渐变位置偏移设置为: (${x.toFixed(2)}, ${y.toFixed(2)}, ${z.toFixed(2)})`);\r\n  }\r\n\r\n  /**\r\n   * 设置形状渐变旋转偏移\r\n   * @param {number} x - X轴旋转偏移（弧度）\r\n   * @param {number} y - Y轴旋转偏移（弧度）\r\n   * @param {number} z - Z轴旋转偏移（弧度）\r\n   */\r\n  setTransitionRotationOffset(x, y, z) {\r\n    this.crtShell.setTransitionRotationOffset(x, y, z);\r\n    console.log(`🔄 形状渐变旋转偏移设置为: (${x.toFixed(3)}, ${y.toFixed(3)}, ${z.toFixed(3)}) 弧度`);\r\n  }\r\n\r\n  /**\r\n   * 设置超椭圆指数\r\n   * @param {number} startExponent - 起始指数（圆形：2.0）\r\n   * @param {number} endExponent - 结束指数（方形：8.0+）\r\n   */\r\n  setTransitionExponents(startExponent, endExponent) {\r\n    this.crtShell.updateTransitionExponents(startExponent, endExponent);\r\n    console.log(`📐 超椭圆指数设置为: 起始=${startExponent}, 结束=${endExponent}`);\r\n  }\r\n\r\n  /**\r\n   * 设置形状渐变可见性\r\n   * @param {boolean} visible - 是否可见\r\n   */\r\n  setTransitionVisible(visible) {\r\n    this.crtShell.setTransitionVisible(visible);\r\n    console.log(`👁️ 形状渐变可见性: ${visible ? '显示' : '隐藏'}`);\r\n  }\r\n\r\n  /**\r\n   * 设置形状渐变颜色\r\n   * @param {number} color - 颜色值（十六进制）\r\n   */\r\n  setTransitionColor(color) {\r\n    this.crtShell.setTransitionColor(color);\r\n    console.log(`🎨 形状渐变颜色设置为: 0x${color.toString(16)}`);\r\n  }\r\n\r\n  /**\r\n   * 设置形状渐变透明度\r\n   * @param {number} opacity - 透明度（0-1）\r\n   */\r\n  setTransitionOpacity(opacity) {\r\n    this.crtShell.setTransitionOpacity(opacity);\r\n    console.log(`🔍 形状渐变透明度设置为: ${opacity.toFixed(2)}`);\r\n  }\r\n\r\n  /**\r\n   * 获取当前形状渐变状态信息\r\n   */\r\n  getTransitionInfo() {\r\n    const position = this.crtShell.getTransitionPosition();\r\n    const rotation = this.crtShell.getTransitionRotation();\r\n    const posOffset = this.crtShell.getTransitionPositionOffset();\r\n    const rotOffset = this.crtShell.getTransitionRotationOffset();\r\n    \r\n    const info = {\r\n      position: { x: position.x, y: position.y, z: position.z },\r\n      rotation: { x: rotation.x, y: rotation.y, z: rotation.z },\r\n      positionOffset: posOffset,\r\n      rotationOffset: rotOffset\r\n    };\r\n    \r\n    console.log('📊 当前形状渐变状态:', info);\r\n    return info;\r\n  }\r\n\r\n  /**\r\n   * 重置形状渐变到默认状态\r\n   */\r\n  resetTransition() {\r\n    console.log('🔄 重置形状渐变到默认状态...');\r\n    \r\n    // 停止动画\r\n    this.stopMorphAnimation();\r\n    \r\n    // 重置指数\r\n    this.crtShell.updateTransitionExponents(2.0, 8.0);\r\n    \r\n    // 重置位置偏移\r\n    this.crtShell.setTransitionPositionOffset(1.2, 0, 0);\r\n    \r\n    // 重置旋转偏移\r\n    this.crtShell.setTransitionRotationOffset(0, 0, 0);\r\n    \r\n    // 重置可见性和样式\r\n    this.crtShell.setTransitionVisible(true);\r\n    this.crtShell.setTransitionColor(0x99ddff);\r\n    this.crtShell.setTransitionOpacity(0.8);\r\n    \r\n    console.log('✅ 形状渐变已重置');\r\n  }\r\n\r\n  /**\r\n   * 演示位置控制功能\r\n   */\r\n  demonstratePositionControl() {\r\n    console.log('🎯 演示位置控制功能...');\r\n    \r\n    const positions = [\r\n      { name: '默认位置', offset: { x: 1.2, y: 0, z: 0 } },\r\n      { name: '上移', offset: { x: 1.2, y: 0.5, z: 0 } },\r\n      { name: '下移', offset: { x: 1.2, y: -0.5, z: 0 } },\r\n      { name: '前移', offset: { x: 1.2, y: 0, z: 0.5 } },\r\n      { name: '后移', offset: { x: 1.2, y: 0, z: -0.5 } },\r\n      { name: '左移', offset: { x: 0.7, y: 0, z: 0 } },\r\n      { name: '右移', offset: { x: 1.7, y: 0, z: 0 } }\r\n    ];\r\n    \r\n    let currentIndex = 0;\r\n    \r\n    const showNext = () => {\r\n      if (currentIndex >= positions.length) {\r\n        console.log('✅ 位置控制演示完成');\r\n        this.resetTransition();\r\n        return;\r\n      }\r\n      \r\n      const pos = positions[currentIndex];\r\n      console.log(`📍 ${pos.name}: (${pos.offset.x}, ${pos.offset.y}, ${pos.offset.z})`);\r\n      \r\n      this.crtShell.setTransitionPositionOffset(pos.offset.x, pos.offset.y, pos.offset.z);\r\n      \r\n      currentIndex++;\r\n      setTimeout(showNext, 1500);\r\n    };\r\n    \r\n    showNext();\r\n  }\r\n\r\n  /**\r\n   * 开始螺旋位置动画\r\n   */\r\n  startSpiralAnimation() {\r\n    console.log('🌀 开始螺旋位置动画...');\r\n    \r\n    this.stopMorphAnimation(); // 停止其他动画\r\n    this.animationStartTime = Date.now();\r\n    \r\n    const animate = () => {\r\n      const elapsed = (Date.now() - this.animationStartTime) / 1000;\r\n      const frequency = 0.5; // 螺旋频率\r\n      \r\n      // 螺旋参数\r\n      const radius = 0.3;\r\n      const baseX = 1.2;\r\n      \r\n      const x = baseX + Math.cos(elapsed * frequency * 2 * Math.PI) * radius;\r\n      const y = Math.sin(elapsed * frequency * 2 * Math.PI) * radius;\r\n      const z = Math.sin(elapsed * frequency * Math.PI) * 0.2;\r\n      \r\n      this.crtShell.setTransitionPositionOffset(x, y, z);\r\n      \r\n      // 同时变化指数创建更复杂的效果\r\n      const expWave = (Math.sin(elapsed * 2) + 1) / 2;\r\n      const startExp = 2.0 + expWave * 6.0;\r\n      const endExp = 8.0 - expWave * 4.0;\r\n      this.crtShell.updateTransitionExponents(startExp, endExp);\r\n      \r\n      this.animationId = requestAnimationFrame(animate);\r\n    };\r\n    \r\n    animate();\r\n  }\r\n}\r\n\n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\dat.gui\\build\\dat.gui.module.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_dat_gui_build_dat_gui_module = __webpack_require__(121);\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\controllers\\GuiController.js\n\n\n\nclass GuiController {\n  constructor(callbacks = {}) {\n    // 响应式宽度计算 - 基于2560*1440标准向下兼容\n    this.getResponsiveWidth = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      \n      // 2K分辨率及以上 (2560*1440+)\n      if (width >= 2560 && height >= 1440) return 400;\n      // 标准FHD (1920*1080)\n      if (width >= 1920 && height >= 1080) return 350;\n      // 中等分辨率 (1366*768, 1600*900)\n      if (width >= 1366) return 300;\n      // 小屏幕 (1024*768)\n      if (width >= 1024) return 260;\n      // 平板 (768px-1023px)\n      if (width >= 768) return 240;\n      // 移动设备 (< 768px)\n      return 220;\n    };\n    \n    this.gui = new D_Users_asus_Desktop_web_demo1_node_modules_dat_gui_build_dat_gui_module/* GUI */.cL({ width: this.getResponsiveWidth() });\n    this.callbacks = callbacks;\n    \n    // 保存回调函数\n    this.onBeamChange = callbacks.onBeamChange || (() => {});\n    this.onDeflectionChange = callbacks.onDeflectionChange || (() => {});\n    this.onWaveformChange = callbacks.onWaveformChange || (() => {});\n    this.onScreenChange = callbacks.onScreenChange || (() => {});\n    this.onShellChange = callbacks.onShellChange || (() => {});\n    \n    this.initGui();\n    this.setupResponsiveHandlers();\n  }\n  \n  initGui() {\n    // 创建各个控制面板\n    this.initBeamControls();\n    this.initDeflectionControls();\n    this.initWaveformControls();\n    this.initScreenControls();\n    this.initShellControls();\n  }\n  \n  initBeamControls() {\n    const beamFolder = this.gui.addFolder('电子束参数');\n    \n    beamFolder.add(CONFIG.beam, 'intensity', 0, 1)\n      .name('强度')\n      .onChange(() => this.onBeamChange(CONFIG.beam));\n      \n    beamFolder.addColor({ color: CONFIG.beam.color }, 'color')\n      .name('颜色')\n      .onChange((value) => {\n        CONFIG.beam.color = value;\n        this.onBeamChange(CONFIG.beam);\n      });\n      \n    beamFolder.open();\n  }\n  \n  initDeflectionControls() {\n    const deflectionFolder = this.gui.addFolder('偏转板参数');\n    \n    deflectionFolder.add(CONFIG.deflection.horizontal, 'voltage', -5, 5, 0.1)\n      .name('水平电压 (V)')\n      .onChange(() => this.onDeflectionChange(CONFIG.deflection));\n      \n    deflectionFolder.add(CONFIG.deflection.vertical, 'voltage', -5, 5, 0.1)\n      .name('垂直电压 (V)')\n      .onChange(() => this.onDeflectionChange(CONFIG.deflection));\n      \n    deflectionFolder.open();\n  }\n  \n  initWaveformControls() {\n    const waveformFolder = this.gui.addFolder('波形参数');\n    \n    // 创建波形类型下拉菜单\n    const waveformOptions = {};\n    Object.entries(WAVEFORM_TYPES).forEach(([key, value]) => {\n      waveformOptions[value] = key;\n    });\n    \n    waveformFolder.add(CONFIG.waveform, 'enabled')\n      .name('启用波形')\n      .onChange(() => this.onWaveformChange(CONFIG.waveform));\n      \n    waveformFolder.add(CONFIG.waveform, 'type', Object.keys(WAVEFORM_TYPES))\n      .name('波形类型')\n      .onChange(() => this.onWaveformChange(CONFIG.waveform));\n      \n    waveformFolder.add(CONFIG.waveform, 'frequency', 0.1, 5, 0.1)\n      .name('频率 (Hz)')\n      .onChange(() => this.onWaveformChange(CONFIG.waveform));\n      \n    waveformFolder.add(CONFIG.waveform, 'amplitude', 0, 5, 0.1)\n      .name('振幅')\n      .onChange(() => this.onWaveformChange(CONFIG.waveform));\n      \n    waveformFolder.open();\n  }\n  \n  initScreenControls() {\n    const screenFolder = this.gui.addFolder('荧光屏参数');\n    \n    screenFolder.add(CONFIG.screen, 'persistence', 0, 1, 0.01)\n      .name('余辉持续')\n      .onChange(() => this.onScreenChange(CONFIG.screen));\n      \n    screenFolder.addColor({ color: CONFIG.screen.color }, 'color')\n      .name('荧光颜色')\n      .onChange((value) => {\n        CONFIG.screen.color = value;\n        this.onScreenChange(CONFIG.screen);\n      });\n      \n    screenFolder.add(CONFIG.screen, 'intensity', 0, 1, 0.1)\n      .name('发光强度')\n      .onChange(() => this.onScreenChange(CONFIG.screen));\n      \n    screenFolder.open();\n  }\n  \n  initShellControls() {\n    const shellFolder = this.gui.addFolder('外壳参数');\n    \n    shellFolder.add(CONFIG.shell, 'visible')\n      .name('显示外壳')\n      .onChange(() => this.onShellChange(CONFIG.shell));\n      \n    shellFolder.add(CONFIG.shell, 'opacity', 0, 1, 0.01)\n      .name('透明度')\n      .onChange(() => this.onShellChange(CONFIG.shell));\n      \n  \n    shellFolder.open();\n  }\n  \n  /**\n   * 设置响应式处理器\n   */\n  setupResponsiveHandlers() {\n    // 防抖函数\n    let resizeTimeout;\n    const debounce = (func, wait) => {\n      return function executedFunction(...args) {\n        const later = () => {\n          clearTimeout(resizeTimeout);\n          func(...args);\n        };\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(later, wait);\n      };\n    };\n    \n    // 窗口大小改变时调整GUI宽度\n    const handleResize = debounce(() => {\n      const newWidth = this.getResponsiveWidth();\n      if (this.gui && this.gui.domElement) {\n        this.gui.width = newWidth;\n        // 手动更新GUI的DOM样式\n        const guiElement = this.gui.domElement;\n        if (guiElement) {\n          guiElement.style.width = newWidth + 'px';\n        }\n      }\n    }, 250);\n    \n    // 监听窗口大小变化\n    window.addEventListener('resize', handleResize);\n    \n    // 存储清理函数\n    this.cleanup = () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }\n  \n  /**\n   * 销毁GUI控制器\n   */\n  destroy() {\n    if (this.cleanup) {\n      this.cleanup();\n    }\n    if (this.gui) {\n      this.gui.destroy();\n    }\n  }\n} \n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\controllers\\UIController.js\n\n\n\n/**\n * UI控制器类\n * 负责管理界面元素和交互\n */\nclass UIController {\n  /**\n   * 构造函数\n   * @param {Object} options - 选项\n   * @param {Object} options.components - 组件对象\n   * @param {Object} options.controllers - 控制器对象\n   */\n  constructor(options = {}) {\n    this.components = options.components || {};\n    this.controllers = options.controllers || {};\n    \n    // 创建UI容器\n    this.container = document.createElement('div');\n    this.container.id = 'ui-container';\n    \n    // 确保DOM已加载\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => {\n        this.initializeUI();\n      });\n    } else {\n      this.initializeUI();\n    }\n  }\n  \n  /**\n   * 初始化UI（在DOM加载完成后调用）\n   */\n  initializeUI() {\n    console.log('初始化UI...');\n    document.body.appendChild(this.container);\n    \n    // 初始化UI\n    this.initStyles();\n    this.initUI();\n    \n    // 检查controllers是否正确传递\n    console.log('检查控制器:', {\n      labelSystem: !!this.controllers.labelSystem,\n      explodedView: !!this.controllers.explodedView,\n      demoAnimation: !!this.controllers.demoAnimation\n    });\n    \n    console.log('UI控制器初始化完成');\n  }\n  \n  /**\n   * 初始化样式\n   */\n  initStyles() {\n    const style = document.createElement('style');\n    style.textContent = `\n      #ui-container {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n      }\n      \n      .control-panel {\n        position: absolute;\n        bottom: ${CONFIG.ui.controlPanel.position.bottom};\n        right: ${CONFIG.ui.controlPanel.position.right};\n        background-color: ${CONFIG.ui.controlPanel.backgroundColor};\n        border-radius: ${CONFIG.ui.controlPanel.borderRadius};\n        padding: ${CONFIG.ui.controlPanel.padding};\n        color: white;\n        font-family: Arial, sans-serif;\n        pointer-events: auto;\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n        z-index: ${CONFIG.ui.controlPanel.zIndex};\n      }\n      \n      .control-panel button {\n        background-color: ${CONFIG.ui.button.backgroundColor};\n        border: none;\n        color: white;\n        padding: ${CONFIG.ui.button.padding};\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 14px;\n        margin: 2px;\n        cursor: pointer;\n        border-radius: ${CONFIG.ui.button.borderRadius};\n        transition: background-color 0.3s;\n      }\n      \n      .control-panel button:hover {\n        background-color: ${CONFIG.ui.button.hoverColor};\n      }\n      \n      .control-panel button.active {\n        background-color: ${CONFIG.ui.button.activeColor};\n      }\n      \n      .control-panel button.warning {\n        background-color: ${CONFIG.ui.button.warningColor};\n      }\n      \n      .control-panel .button-group {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 5px;\n      }\n      \n      .demo-panel {\n        position: absolute;\n        top: ${CONFIG.ui.demoPanel.position.top};\n        left: ${CONFIG.ui.demoPanel.position.left};\n        background-color: ${CONFIG.ui.demoPanel.backgroundColor};\n        border-radius: ${CONFIG.ui.demoPanel.borderRadius};\n        padding: ${CONFIG.ui.demoPanel.padding};\n        color: white;\n        font-family: Arial, sans-serif;\n        pointer-events: auto;\n        max-width: ${CONFIG.ui.demoPanel.maxWidth};\n        z-index: ${CONFIG.ui.demoPanel.zIndex};\n        transition: opacity 0.5s;\n      }\n      \n      .demo-panel h2 {\n        margin-top: 0;\n        margin-bottom: 10px;\n        font-size: 18px;\n      }\n      \n      .demo-panel p {\n        margin-bottom: 15px;\n        font-size: 14px;\n        line-height: 1.5;\n      }\n      \n      .demo-panel .progress {\n        width: 100%;\n        height: 4px;\n        background-color: #555;\n        margin-top: 10px;\n        border-radius: 2px;\n        overflow: hidden;\n      }\n      \n      .demo-panel .progress-bar {\n        height: 100%;\n        background-color: #4CAF50;\n        width: 0%;\n        transition: width 0.3s;\n      }\n      \n      .demo-panel .step-info {\n        display: flex;\n        justify-content: space-between;\n        font-size: 12px;\n        margin-top: 5px;\n      }\n    `;\n    document.head.appendChild(style);\n  }\n  \n  /**\n   * 初始化UI\n   */\n  initUI() {\n    this.initControlPanel();\n    this.initDemoPanel();\n  }\n  \n  /**\n   * 初始化控制面板\n   */\n  initControlPanel() {\n    console.log('初始化控制面板...');\n    \n    // 创建控制面板\n    this.controlPanel = document.createElement('div');\n    this.controlPanel.className = 'control-panel';\n    this.container.appendChild(this.controlPanel);\n    \n    // 标签控制\n    const labelGroup = document.createElement('div');\n    labelGroup.className = 'button-group';\n    \n    const labelTitle = document.createElement('div');\n    labelTitle.textContent = '标签控制';\n    labelTitle.style.marginBottom = '5px';\n    labelGroup.appendChild(labelTitle);\n    \n    const toggleLabelsBtn = document.createElement('button');\n    toggleLabelsBtn.textContent = '显示标签';\n    toggleLabelsBtn.onclick = () => {\n      console.log('标签按钮被点击');\n      this.toggleLabels();\n    };\n    toggleLabelsBtn.id = 'toggle-labels-btn';\n    labelGroup.appendChild(toggleLabelsBtn);\n    \n    this.controlPanel.appendChild(labelGroup);\n    \n    // 分解视图控制\n    const explodeGroup = document.createElement('div');\n    explodeGroup.className = 'button-group';\n    \n    const explodeTitle = document.createElement('div');\n    explodeTitle.textContent = '分解视图';\n    explodeTitle.style.marginBottom = '5px';\n    explodeGroup.appendChild(explodeTitle);\n    \n    const toggleExplodeBtn = document.createElement('button');\n    toggleExplodeBtn.textContent = '分解视图';\n    toggleExplodeBtn.onclick = () => {\n      console.log('分解视图按钮被点击');\n      this.toggleExplodedView();\n    };\n    toggleExplodeBtn.id = 'toggle-explode-btn';\n    explodeGroup.appendChild(toggleExplodeBtn);\n    \n    const resetViewBtn = document.createElement('button');\n    resetViewBtn.textContent = '重置视图';\n    resetViewBtn.onclick = () => {\n      console.log('重置视图按钮被点击');\n      this.resetView();\n    };\n    explodeGroup.appendChild(resetViewBtn);\n    \n    this.controlPanel.appendChild(explodeGroup);\n    \n    // 组件聚焦控制\n    const focusGroup = document.createElement('div');\n    focusGroup.className = 'button-group';\n    \n    const focusTitle = document.createElement('div');\n    focusTitle.textContent = '聚焦组件';\n    focusTitle.style.marginBottom = '5px';\n    focusGroup.appendChild(focusTitle);\n    \n    // 为每个主要组件创建聚焦按钮\n    const components = [\n      { key: 'gun', name: '电子枪' },\n      { key: 'v1', name: '垂直偏转板' },\n      { key: 'h1', name: '水平偏转板' },\n      { key: 'screen', name: '荧光屏' }\n    ];\n    \n    components.forEach(comp => {\n      const btn = document.createElement('button');\n      btn.textContent = comp.name;\n      btn.onclick = () => {\n        console.log('聚焦到组件:', comp.key);\n        this.focusComponent(comp.key);\n      };\n      focusGroup.appendChild(btn);\n    });\n    \n    this.controlPanel.appendChild(focusGroup);\n    \n    // 演示动画控制\n    const demoGroup = document.createElement('div');\n    demoGroup.className = 'button-group';\n    \n    const demoTitle = document.createElement('div');\n    demoTitle.textContent = '工作原理演示';\n    demoTitle.style.marginBottom = '5px';\n    demoGroup.appendChild(demoTitle);\n    \n    const startDemoBtn = document.createElement('button');\n    startDemoBtn.textContent = '开始演示';\n    startDemoBtn.onclick = () => {\n      console.log('开始演示按钮被点击');\n      this.startDemoAnimation();\n    };\n    startDemoBtn.id = 'start-demo-btn';\n    demoGroup.appendChild(startDemoBtn);\n    \n    const stopDemoBtn = document.createElement('button');\n    stopDemoBtn.textContent = '停止演示';\n    stopDemoBtn.onclick = () => {\n      console.log('停止演示按钮被点击');\n      this.stopDemoAnimation();\n    };\n    stopDemoBtn.className = 'warning';\n    stopDemoBtn.style.display = 'none';\n    stopDemoBtn.id = 'stop-demo-btn';\n    demoGroup.appendChild(stopDemoBtn);\n    \n    this.controlPanel.appendChild(demoGroup);\n    \n    console.log('控制面板初始化完成');\n  }\n  \n  /**\n   * 初始化演示面板\n   */\n  initDemoPanel() {\n    this.demoPanel = document.createElement('div');\n    this.demoPanel.className = 'demo-panel';\n    this.demoPanel.style.opacity = '0';\n    this.demoPanel.style.display = 'none';\n    this.container.appendChild(this.demoPanel);\n    \n    // 标题\n    this.demoTitle = document.createElement('h2');\n    this.demoPanel.appendChild(this.demoTitle);\n    \n    // 描述\n    this.demoDescription = document.createElement('p');\n    this.demoPanel.appendChild(this.demoDescription);\n    \n    // 进度条\n    const progressContainer = document.createElement('div');\n    progressContainer.className = 'progress';\n    this.progressBar = document.createElement('div');\n    this.progressBar.className = 'progress-bar';\n    progressContainer.appendChild(this.progressBar);\n    this.demoPanel.appendChild(progressContainer);\n    \n    // 步骤信息\n    const stepInfo = document.createElement('div');\n    stepInfo.className = 'step-info';\n    this.stepCurrent = document.createElement('span');\n    this.stepTotal = document.createElement('span');\n    stepInfo.appendChild(this.stepCurrent);\n    stepInfo.appendChild(this.stepTotal);\n    this.demoPanel.appendChild(stepInfo);\n  }\n  \n  /**\n   * 切换标签显示\n   */\n  toggleLabels() {\n    console.log('切换标签显示', this.controllers.labelSystem);\n    if (!this.controllers.labelSystem) {\n      console.error('标签系统未初始化');\n      return;\n    }\n    \n    const visible = !this.controllers.labelSystem.visible;\n    console.log('设置标签可见性:', visible);\n    this.controllers.labelSystem.setVisible(visible);\n    \n    // 更新按钮文本\n    const btn = document.getElementById('toggle-labels-btn');\n    if (btn) {\n      btn.textContent = visible ? '隐藏标签' : '显示标签';\n      btn.classList.toggle('active', visible);\n      console.log('按钮状态已更新');\n    } else {\n      console.error('找不到标签按钮');\n    }\n  }\n  \n  /**\n   * 切换分解视图\n   */\n  toggleExplodedView() {\n    console.log('切换分解视图', this.controllers.explodedView);\n    console.log('当前components:', this.components);\n    console.log('crtShell存在?', !!this.components.crtShell);\n    \n    if (!this.controllers.explodedView) return;\n    \n    const exploded = this.controllers.explodedView.toggle();\n    console.log('分解视图状态:', exploded);\n    \n    // 同时切换cylinder2的爆炸效果\n    if (this.components.crtShell && this.components.crtShell.toggleCylinder2Explode) {\n      console.log('正在调用cylinder2爆炸效果...');\n      const cylinder2Exploded = this.components.crtShell.toggleCylinder2Explode(exploded);\n      console.log('Cylinder2爆炸状态:', cylinder2Exploded);\n    } else {\n      console.warn('无法调用cylinder2爆炸效果:', {\n        crtShell: !!this.components.crtShell,\n        toggleMethod: !!(this.components.crtShell && this.components.crtShell.toggleCylinder2Explode)\n      });\n    }\n    \n    // 同时切换旋转曲线连接的爆炸效果\n    if (this.components.crtShell && this.components.crtShell.toggleConnectionExplode) {\n      console.log('正在调用旋转曲线连接爆炸效果...');\n      const connectionExploded = this.components.crtShell.toggleConnectionExplode(exploded);\n      console.log('旋转曲线连接爆炸状态:', connectionExploded);\n    } else {\n      console.warn('无法调用旋转曲线连接爆炸效果:', {\n        crtShell: !!this.components.crtShell,\n        toggleMethod: !!(this.components.crtShell && this.components.crtShell.toggleConnectionExplode)\n      });\n    }\n    \n    // 同时切换超椭圆形状渐变的爆炸效果\n    if (this.components.crtShell && this.components.crtShell.toggleSuperellipseExplode) {\n      console.log('正在调用超椭圆形状渐变爆炸效果...');\n      const superellipseExploded = this.components.crtShell.toggleSuperellipseExplode(exploded);\n      console.log('超椭圆形状渐变爆炸状态:', superellipseExploded);\n    } else {\n      console.warn('无法调用超椭圆形状渐变爆炸效果:', {\n        crtShell: !!this.components.crtShell,\n        toggleMethod: !!(this.components.crtShell && this.components.crtShell.toggleSuperellipseExplode)\n      });\n    }\n    \n    // 更新按钮文本\n    const btn = document.getElementById('toggle-explode-btn');\n    if (btn) {\n      btn.textContent = exploded ? '合并视图' : '分解视图';\n      btn.classList.toggle('active', exploded);\n    }\n  }\n  \n  /**\n   * 重置视图\n   */\n  resetView() {\n    if (!this.controllers.explodedView) return;\n    \n    this.controllers.explodedView.resetView(\n      this.controllers.camera,\n      this.controllers.controls\n    );\n    \n    // 重置cylinder2爆炸状态\n    if (this.components.crtShell && this.components.crtShell.toggleCylinder2Explode) {\n      this.components.crtShell.toggleCylinder2Explode(false);\n      console.log('重置Cylinder2爆炸状态');\n    }\n    \n    // 重置旋转曲线连接爆炸状态\n    if (this.components.crtShell && this.components.crtShell.toggleConnectionExplode) {\n      this.components.crtShell.toggleConnectionExplode(false);\n      console.log('重置旋转曲线连接爆炸状态');\n    }\n    \n    // 重置超椭圆形状渐变爆炸状态\n    if (this.components.crtShell && this.components.crtShell.toggleSuperellipseExplode) {\n      this.components.crtShell.toggleSuperellipseExplode(false);\n      console.log('重置超椭圆形状渐变爆炸状态');\n    }\n    \n    // 更新分解视图按钮状态\n    const explodeBtn = document.getElementById('toggle-explode-btn');\n    if (explodeBtn) {\n      explodeBtn.textContent = '分解视图';\n      explodeBtn.classList.remove('active');\n    }\n  }\n  \n  /**\n   * 聚焦到组件\n   * @param {string} componentKey - 组件键名\n   */\n  focusComponent(componentKey) {\n    console.log('focusComponent被调用，componentKey:', componentKey);\n    console.log('this.controllers:', this.controllers);\n    console.log('this.controllers.explodedView:', this.controllers.explodedView);\n    console.log('this.controllers.camera:', this.controllers.camera);\n    console.log('this.controllers.controls:', this.controllers.controls);\n    \n    if (!this.controllers.explodedView) {\n      console.error('explodedView未初始化');\n      return;\n    }\n    \n    if (!this.controllers.camera) {\n      console.error('camera未初始化');\n      return;\n    }\n    \n    if (!this.controllers.controls) {\n      console.error('controls未初始化');\n      return;\n    }\n    \n    console.log('开始调用explodedView.focusComponent');\n    this.controllers.explodedView.focusComponent(\n      componentKey,\n      this.controllers.camera,\n      this.controllers.controls\n    );\n    console.log('explodedView.focusComponent调用完成');\n  }\n  \n  /**\n   * 开始演示动画\n   */\n  startDemoAnimation() {\n    console.log('startDemoAnimation被调用');\n    console.log('this.controllers.demoAnimation:', this.controllers.demoAnimation);\n    \n    if (!this.controllers.demoAnimation) {\n      console.error('demoAnimation未初始化');\n      return;\n    }\n    \n    console.log('显示演示面板');\n    // 显示演示面板\n    this.showDemoPanel();\n    \n    console.log('设置步骤回调');\n    // 设置步骤回调\n    this.controllers.demoAnimation.onStepStart = (stepIndex, step) => {\n      console.log('步骤回调被触发:', stepIndex, step);\n      this.updateDemoPanel(stepIndex, step);\n    };\n    \n    console.log('开始演示');\n    // 开始演示\n    this.controllers.demoAnimation.start();\n    \n    console.log('更新按钮状态');\n    // 更新按钮状态\n    document.getElementById('start-demo-btn').style.display = 'none';\n    document.getElementById('stop-demo-btn').style.display = 'inline-block';\n    \n    console.log('startDemoAnimation完成');\n  }\n  \n  /**\n   * 停止演示动画\n   */\n  stopDemoAnimation() {\n    if (!this.controllers.demoAnimation) return;\n    \n    // 停止演示\n    this.controllers.demoAnimation.stop();\n    \n    // 隐藏演示面板\n    this.hideDemoPanel();\n    \n    // 更新按钮状态\n    document.getElementById('start-demo-btn').style.display = 'inline-block';\n    document.getElementById('stop-demo-btn').style.display = 'none';\n  }\n  \n  /**\n   * 显示演示面板\n   */\n  showDemoPanel() {\n    this.demoPanel.style.display = 'block';\n    setTimeout(() => {\n      this.demoPanel.style.opacity = '1';\n    }, 10);\n  }\n  \n  /**\n   * 隐藏演示面板\n   */\n  hideDemoPanel() {\n    this.demoPanel.style.opacity = '0';\n    setTimeout(() => {\n      this.demoPanel.style.display = 'none';\n    }, 500);\n  }\n  \n  /**\n   * 更新演示面板\n   * @param {number} stepIndex - 当前步骤索引\n   * @param {Object} step - 当前步骤对象\n   */\n  updateDemoPanel(stepIndex, step) {\n    if (!this.controllers.demoAnimation) return;\n    \n    const totalSteps = this.controllers.demoAnimation.animationSteps.length;\n    const progress = ((stepIndex + 1) / totalSteps) * 100;\n    \n    // 更新标题和描述\n    this.demoTitle.textContent = step.title;\n    this.demoDescription.textContent = step.description;\n    \n    // 更新进度条\n    this.progressBar.style.width = `${progress}%`;\n    \n    // 更新步骤信息\n    this.stepCurrent.textContent = `步骤 ${stepIndex + 1}`;\n    this.stepTotal.textContent = `共 ${totalSteps} 步`;\n    \n    // 如果是最后一步，准备结束演示\n    if (stepIndex === totalSteps - 1) {\n      setTimeout(() => {\n        this.stopDemoAnimation();\n      }, step.duration);\n    }\n  }\n  \n  /**\n   * 调整UI大小\n   * @param {number} width - 宽度\n   * @param {number} height - 高度\n   */\n  resize(width, height) {\n    // 如果需要根据窗口大小调整UI，可以在这里实现\n  }\n}\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\WaveformGenerator.js\n/**\n * 波形生成器类\n * 负责生成各种波形并计算偏转电压\n */\nclass WaveformGenerator {\n  constructor() {\n    this.time = 0;\n    this.lastTimestamp = 0;\n    this.lastHorizontalPosition = 0; // 记录上一次的水平位置\n    this.onWaveformReset = null; // 波形重置回调函数\n  }\n\n  /**\n   * 更新时间\n   * @param {number} timestamp - 当前时间戳\n   */\n  update(timestamp) {\n    // 添加防护检查\n    if (typeof timestamp !== 'number' || isNaN(timestamp)) {\n      console.warn('波形生成器 - 无效的时间戳:', timestamp);\n      return;\n    }\n    \n    // 计算时间增量（秒）\n    if (this.lastTimestamp === 0) {\n      this.lastTimestamp = timestamp;\n      return;\n    }\n    \n    const deltaTime = (timestamp - this.lastTimestamp) / 1000;\n    \n    // 防护异常的 deltaTime\n    if (isNaN(deltaTime) || deltaTime < 0 || deltaTime > 1) {\n      console.warn('波形生成器 - 异常的时间增量:', deltaTime, '重置时间戳');\n      this.lastTimestamp = timestamp;\n      return;\n    }\n    \n    this.lastTimestamp = timestamp;\n    \n    // 更新内部时间（在演示动画期间减慢50%）\n    const timeScale = (window.demoAnimation && window.demoAnimation.isPlaying) ? 0.6 : 1.0;\n    this.time += deltaTime * timeScale;\n  }\n\n  /**\n   * 生成波形值\n   * @param {Object} params - 波形参数\n   * @returns {number} - 波形值 (-1 到 1 之间)\n   */\n  generateWaveform(params) {\n    if (!params.enabled) {\n      return 0;\n    }\n    \n    const { type, frequency, amplitude, phase } = params;\n    \n    // 添加防护检查\n    if (isNaN(this.time) || isNaN(frequency) || isNaN(amplitude) || isNaN(phase)) {\n      console.error('波形生成器 - 检测到 NaN 参数:', {\n        time: this.time,\n        frequency,\n        amplitude,\n        phase\n      });\n      return 0;\n    }\n    \n    const t = this.time * frequency * Math.PI * 2 + phase;\n    \n    // 检查计算结果\n    if (isNaN(t)) {\n      console.error('波形生成器 - 时间计算结果为 NaN:', t);\n      return 0;\n    }\n    \n    let result = 0;\n    switch (type) {\n      case 'sine':\n        result = Math.sin(t) * amplitude;\n        break;\n      case 'square':\n        result = (Math.sin(t) >= 0 ? 1 : -1) * amplitude;\n        break;\n      case 'sawtooth':\n        result = (((t / (Math.PI * 2)) % 1) * 2 - 1) * amplitude;\n        break;\n      case 'triangle':\n        result = (Math.abs(((t / Math.PI) % 2) - 1) * 2 - 1) * amplitude;\n        break;\n      default:\n        result = 0;\n    }\n    \n    // 最终检查结果\n    if (isNaN(result)) {\n      console.error('波形生成器 - 波形计算结果为 NaN:', { type, t, amplitude, result });\n      return 0;\n    }\n    \n    return result;\n  }\n  \n  /**\n   * 计算当前的偏转电压\n   * @param {Object} waveformParams - 波形参数\n   * @param {Object} deflectionParams - 偏转参数\n   * @returns {Object} - 包含水平和垂直偏转电压的对象\n   */\n  calculateDeflectionVoltage(waveformParams, deflectionParams) {\n    // 在演示动画期间，使用固定的原始电压值以保持波形位置不变\n    let baseHorizontal, baseVertical;\n    if (window.demoAnimation && window.demoAnimation.isPlaying && window.demoAnimation.originalVoltages) {\n      baseHorizontal = window.demoAnimation.originalVoltages.horizontal;\n      baseVertical = window.demoAnimation.originalVoltages.vertical;\n    } else {\n      // 获取基础电压值，添加防护\n      baseHorizontal = deflectionParams?.horizontal?.voltage ?? 0;\n      baseVertical = deflectionParams?.vertical?.voltage ?? 0;\n    }\n    \n    // 如果波形未启用，直接返回基础电压\n    if (!waveformParams.enabled) {\n      return {\n        horizontal: baseHorizontal,\n        vertical: baseVertical\n      };\n    }\n    \n    // 根据波形类型生成不同的扫描模式，使用偏转电压作为幅度调制因子\n    const scanPattern = this.generateScanPattern(waveformParams, deflectionParams);\n    \n    // 直接返回波形扫描模式产生的电压值（不再与基础电压相加）\n    // 这样偏转电压就控制波形幅度，而不是位置偏移\n    return {\n      horizontal: scanPattern.horizontal,\n      vertical: scanPattern.vertical\n    };\n  }\n  \n  /**\n   * 根据波形类型生成扫描模式\n   * @param {Object} params - 波形参数\n   * @param {Object} deflectionParams - 偏转参数，用于控制波形幅度\n   * @returns {Object} - 包含水平和垂直偏转值的对象\n   */\n  generateScanPattern(params, deflectionParams = null) {\n    const { type, frequency, amplitude, phase } = params;\n    \n    // 添加防护检查\n    if (isNaN(this.time) || isNaN(frequency) || isNaN(amplitude) || isNaN(phase)) {\n      console.error('波形生成器 - 检测到 NaN 参数:', {\n        time: this.time,\n        frequency,\n        amplitude,\n        phase\n      });\n      return { horizontal: 0, vertical: 0 };\n    }\n    \n    const t = this.time * frequency * Math.PI * 2 + phase;\n    \n    // 检查计算结果\n    if (isNaN(t)) {\n      console.error('波形生成器 - 时间计算结果为 NaN:', t);\n      return { horizontal: 0, vertical: 0 };\n    }\n    \n    // 获取偏转电压作为幅度调制因子\n    // 使用基础幅度 + 偏转电压调制，确保即使电压为0也有基本波形显示\n    const baseAmplitude = amplitude * 0.3; // 基础幅度（30%的原始幅度）\n    const horizontalVoltage = deflectionParams?.horizontal?.voltage ?? 0;\n    const verticalVoltage = deflectionParams?.vertical?.voltage ?? 0;\n    \n    // 幅度 = 基础幅度 + (电压调制 * 原始幅度)\n    const horizontalAmplitude = baseAmplitude + (Math.abs(horizontalVoltage) * amplitude * 0.2);\n    const verticalAmplitude = baseAmplitude + (Math.abs(verticalVoltage) * amplitude * 0.2);\n    \n    // 添加防护检查\n    if (isNaN(horizontalAmplitude) || isNaN(verticalAmplitude)) {\n      console.error('波形生成器 - 检测到 NaN 幅度参数:', {\n        horizontalAmplitude,\n        verticalAmplitude\n      });\n      return { horizontal: 0, vertical: 0 };\n    }\n    \n    let horizontal = 0;\n    let vertical = 0;\n    \n    // 使用频率参数来控制波形密集程度\n    const freqMultiplier = frequency * 2; // 频率倍数，用于控制波形密集度\n    \n    switch (type) {\n      case 'sine':\n        // 正弦波 - 水平锯齿扫描（从右向左）+ 垂直正弦波\n        // 水平扫描的幅度由水平偏转电压控制\n        horizontal = ((1 - ((t / (Math.PI * 2)) % 1)) * 2 - 1) * Math.abs(horizontalAmplitude);\n        // 垂直波形的幅度由垂直偏转电压控制\n        vertical = Math.sin(t * freqMultiplier) * Math.abs(verticalAmplitude) * 0.5;\n        break;\n        \n      case 'square':\n        // 方波 - 水平锯齿扫描（从右向左）+ 垂直方波\n        horizontal = ((1 - ((t / (Math.PI * 2)) % 1)) * 2 - 1) * Math.abs(horizontalAmplitude);\n        vertical = (Math.sin(t * freqMultiplier) >= 0 ? 1 : -1) * Math.abs(verticalAmplitude) * 0.5;\n        break;\n        \n      case 'triangle':\n        // 三角波 - 水平锯齿扫描（从右向左）+ 垂直三角波\n        horizontal = ((1 - ((t / (Math.PI * 2)) % 1)) * 2 - 1) * Math.abs(horizontalAmplitude);\n        vertical = (Math.abs(((t * freqMultiplier / Math.PI) % 2) - 1) * 2 - 1) * Math.abs(verticalAmplitude) * 0.5;\n        break;\n        \n      case 'sawtooth':\n        // 锯齿波 - 水平锯齿扫描（从右向左）+ 垂直锯齿波\n        horizontal = ((1 - ((t / (Math.PI * 2)) % 1)) * 2 - 1) * Math.abs(horizontalAmplitude);\n        vertical = (((t * freqMultiplier / (Math.PI * 2)) % 1) * 2 - 1) * Math.abs(verticalAmplitude) * 0.5;\n        break;\n        \n      default:\n        // 默认为简单的水平扫描（从右向左）\n        horizontal = ((1 - ((t / (Math.PI * 2)) % 1)) * 2 - 1) * Math.abs(horizontalAmplitude);\n        vertical = 0;\n    }\n    \n    // 最终检查结果\n    if (isNaN(horizontal) || isNaN(vertical)) {\n      console.error('波形生成器 - 扫描模式计算结果为 NaN:', { type, t, horizontalAmplitude, verticalAmplitude, horizontal, vertical });\n      return { horizontal: 0, vertical: 0 };\n    }\n    \n    // 检测波形重置（水平位置从左侧跳回右侧）\n    this.detectWaveformReset(horizontal);\n    \n    return { horizontal, vertical };\n  }\n\n\n  /**\n   * 检测波形重置（水平扫描从左端跳回右端）\n   * @param {number} currentHorizontal - 当前水平位置\n   */\n  detectWaveformReset(currentHorizontal) {\n    // 检测从负值（左侧）跳到正值（右侧）的情况\n    // 这表示开始了新的扫描周期（从右向左扫描完成后跳回右侧重新开始）\n    if (this.lastHorizontalPosition < -0.5 && currentHorizontal > 0.5) {\n      // 触发波形重置回调\n      if (this.onWaveformReset) {\n        this.onWaveformReset();\n      }\n    }\n    \n    // 更新上一次的水平位置\n    this.lastHorizontalPosition = currentHorizontal;\n  }\n\n  /**\n   * 设置波形重置回调函数\n   * @param {Function} callback - 回调函数\n   */\n  setWaveformResetCallback(callback) {\n    this.onWaveformReset = callback;\n  }\n\n  /**\n   * 重置时间和时间戳\n   * 在波形类型切换时调用，确保新波形从干净的状态开始\n   */\n  resetTime() {\n    this.time = 0;\n    this.lastTimestamp = 0;\n    this.lastHorizontalPosition = 0;\n    console.log('波形生成器时间已重置');\n  }\n} \n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\ElectronBeam.js\n\n\n\n/**\n * 电子束类\n * 负责处理电子束的路径和显示\n */\nclass ElectronBeam {\n  /**\n   * 构造函数\n   * @param {THREE.Scene} scene - Three.js场景\n   */\n  constructor(scene) {\n    this.scene = scene;\n    this.beamLine = null;\n    this.glowLine = null;\n    this.particleSystem = null;\n    this.beamPoints = [];\n    this.tracePoints = [];\n    this.traceLines = [];\n    this.traceSegments = []; // 存储轨迹段，避免回扫线\n    \n    // 电子束材质\n    this.beamMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* LineBasicMaterial */.mrM({\n      color: CONFIG.beam.color,\n      opacity: CONFIG.beam.intensity,\n      transparent: true,\n      depthTest: true,  // 启用深度测试，确保被外壳正确遮挡\n      depthWrite: false // 禁用深度写入，避免影响其他透明物体\n    });\n    \n    // 轨迹材质（淡一些）\n    this.traceMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* LineBasicMaterial */.mrM({\n      color: CONFIG.beam.color,\n      opacity: CONFIG.electronBeam.trace.opacity,\n      transparent: true,\n      depthTest: true,  // 启用深度测试，确保被外壳正确遮挡\n      depthWrite: false // 禁用深度写入\n    });\n    \n    // 初始化电子束\n    this.initBeam();\n  }\n  \n  /**\n   * 初始化电子束\n   */\n  initBeam() {\n    // 默认电子束路径点\n    this.beamPoints = CONFIG.electronBeam.pathPoints.map(point => \n      new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(point.x, point.y, point.z)\n    );\n    \n    // 创建增强的电子束材质\n    this.createEnhancedBeamMaterial();\n    \n    // 创建电子束几何体和线条\n    const beamGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY().setFromPoints(this.beamPoints);\n    this.beamLine = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Line */.N1A(beamGeometry, this.beamMaterial);\n    \n    // 设置渲染顺序，确保电子束在透明极板之后渲染\n    this.beamLine.renderOrder = 5;\n    \n    this.scene.add(this.beamLine);\n  }\n\n  /**\n   * 创建增强的电子束材质，包含发光效果\n   */\n  createEnhancedBeamMaterial() {\n    // 主电子束材质（更亮更鲜艳）- 优化透明度渲染\n    this.beamMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* LineBasicMaterial */.mrM({\n      color: CONFIG.beam.color,\n      opacity: CONFIG.beam.intensity,\n      transparent: true,\n      linewidth: 3, // 增加线宽\n      depthTest: true,  // 启用深度测试，确保被外壳正确遮挡\n      depthWrite: false // 禁用深度写入\n    });\n    \n    // 创建发光外围材质\n    this.glowMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* LineBasicMaterial */.mrM({\n      color: CONFIG.beam.color,\n      opacity: CONFIG.beam.intensity * 0.3,\n      transparent: true,\n      linewidth: 8, // 更宽的发光效果\n      depthTest: true,  // 启用深度测试，确保被外壳正确遮挡\n      depthWrite: false // 禁用深度写入\n    });\n    \n    // 轨迹材质 - 优化透明度渲染\n    this.traceMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* LineBasicMaterial */.mrM({\n      color: CONFIG.beam.color,\n      opacity: CONFIG.electronBeam.trace.opacity,\n      transparent: true,\n      depthTest: true,  // 启用深度测试，确保被外壳正确遮挡\n      depthWrite: false // 禁用深度写入\n    });\n  }\n  \n  /**\n   * 更新电子束路径\n   * @param {Object} deflectionParams - 偏转参数对象\n   * @param {Object} deflectionParams.vertical - 垂直偏转参数\n   * @param {number} deflectionParams.vertical.voltage - 垂直偏转电压\n   * @param {Object} deflectionParams.horizontal - 水平偏转参数\n   * @param {number} deflectionParams.horizontal.voltage - 水平偏转电压\n   */\n  updateBeamPath(deflectionParams) {\n    // 计算偏转量，添加防护\n    const voltageScalingFactor = CONFIG.electronBeam.voltageScalingFactor;\n    const verticalVoltage = deflectionParams?.vertical?.voltage ?? 0;\n    const horizontalVoltage = deflectionParams?.horizontal?.voltage ?? 0;\n    \n    // 检查是否有 NaN 值\n    if (isNaN(verticalVoltage) || isNaN(horizontalVoltage)) {\n      console.error('电子束错误 - 检测到 NaN 值:', { verticalVoltage, horizontalVoltage });\n      return; // 直接返回，避免后续计算错误\n    }\n    \n    const verticalDeflection = verticalVoltage * (CONFIG.deflection.vertical.maxDeflection / voltageScalingFactor);\n    const horizontalDeflection = horizontalVoltage * (CONFIG.deflection.horizontal.maxDeflection / voltageScalingFactor);\n    \n    // 生成简单的直线电子束轨迹\n    this.beamPoints = this.generateSimpleBeamPath(verticalDeflection, horizontalDeflection);\n    \n    // 更新几何体\n    const beamGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY().setFromPoints(this.beamPoints);\n    \n    // 清除旧的电子束\n    this.clearBeamLines();\n    \n    // 创建多层电子束效果\n    this.createLayeredBeam(beamGeometry);\n    \n    // 可选：创建粒子效果（在配置中启用时）\n    if (CONFIG.electronBeam.enableParticleEffect) {\n      this.createParticleBeam(this.beamPoints);\n    }\n    \n    // 更新材质颜色和强度\n    this.updateBeamMaterials();\n    \n    // 记录轨迹点（只记录打在荧光屏上的点）\n    const lastBeamPoint = this.beamPoints[this.beamPoints.length - 1];\n    this.addTracePoint(lastBeamPoint.clone());\n  }\n  \n  /**\n   * 生成真实的电子束轨迹（考虑物理偏转效果）\n   * @param {number} verticalDeflection - 垂直偏转量\n   * @param {number} horizontalDeflection - 水平偏转量\n   * @returns {Array<THREE.Vector3>} 轨迹点数组\n   */\n  generateSimpleBeamPath(verticalDeflection, horizontalDeflection) {\n    return this.generateRealisticBeamPath(verticalDeflection, horizontalDeflection);\n  }\n\n  /**\n   * 生成真实的电子束轨迹，模拟物理偏转效果\n   * @param {number} verticalDeflection - 垂直偏转量\n   * @param {number} horizontalDeflection - 水平偏转量\n   * @returns {Array<THREE.Vector3>} 轨迹点数组\n   */\n  generateRealisticBeamPath(verticalDeflection, horizontalDeflection) {\n    const trajectoryPoints = [];\n    const totalSegments = 100; // 增加段数以获得更平滑的曲线，特别是对方波\n    \n    // 从配置文件获取关键位置点\n    const electronGun = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(\n      CONFIG.electronBeam.startPoint.x, \n      CONFIG.electronBeam.startPoint.y, \n      CONFIG.electronBeam.startPoint.z\n    );\n    const screenPosition = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(\n      CONFIG.electronBeam.endPoint.x, \n      CONFIG.electronBeam.endPoint.y, \n      CONFIG.electronBeam.endPoint.z\n    );\n    \n    // 从配置文件获取偏转板位置\n    const platePositions = CONFIG.electronBeam.physics.platePositions;\n    const verticalPlateStart = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(platePositions.verticalPlateStart, 0, 0);\n    const verticalPlateEnd = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(platePositions.verticalPlateEnd, 0, 0);\n    const horizontalPlateStart = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(platePositions.horizontalPlateStart, 0, 0);\n    const horizontalPlateEnd = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(platePositions.horizontalPlateEnd, 0, 0);\n    \n    // 从配置文件获取物理参数\n    const electronVelocity = CONFIG.electronBeam.physics.electronVelocity;\n    const electricFieldStrength = CONFIG.electronBeam.physics.electricFieldStrength;\n    \n    // 当前位置和速度\n    let currentPos = electronGun.clone();\n    let velocity = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(electronVelocity, 0, 0); // 初始水平向右\n    \n    for (let i = 0; i <= totalSegments; i++) {\n      const progress = i / totalSegments;\n      const x = electronGun.x + (screenPosition.x - electronGun.x) * progress;\n      \n      // 计算当前段的加速度\n      let acceleration = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0, 0);\n      \n      // 在垂直偏转板区域内应用垂直电场\n      if (x >= verticalPlateStart.x && x <= verticalPlateEnd.x) {\n        const plateProgress = (x - verticalPlateStart.x) / (verticalPlateEnd.x - verticalPlateStart.x);\n        const fieldIntensity = Math.sin(plateProgress * Math.PI) * electricFieldStrength; // 平滑过渡\n        acceleration.y = verticalDeflection * fieldIntensity * 0.5;\n      }\n      \n      // 在水平偏转板区域内应用水平电场\n      if (x >= horizontalPlateStart.x && x <= horizontalPlateEnd.x) {\n        const plateProgress = (x - horizontalPlateStart.x) / (horizontalPlateEnd.x - horizontalPlateStart.x);\n        const fieldIntensity = Math.sin(plateProgress * Math.PI) * electricFieldStrength; // 平滑过渡\n        acceleration.z = horizontalDeflection * fieldIntensity * 0.5;\n      }\n      \n      // 更新速度和位置（简化的欧拉积分）\n      const dt = (screenPosition.x - electronGun.x) / totalSegments / electronVelocity;\n      velocity.add(acceleration.clone().multiplyScalar(dt));\n      \n      // 保持水平速度基本恒定（电子束的主要运动方向）\n      velocity.x = electronVelocity;\n      \n      // 计算新位置\n      currentPos.add(velocity.clone().multiplyScalar(dt * 0.1)); // 缩放因子调整轨迹平滑度\n      \n      // 确保 x 坐标按预期递增\n      currentPos.x = x;\n      \n      trajectoryPoints.push(currentPos.clone());\n    }\n    \n    // 应用轨迹平滑处理\n    return this.smoothTrajectory(trajectoryPoints);\n  }\n\n  /**\n   * 平滑轨迹点，使电子束看起来更自然\n   * @param {Array<THREE.Vector3>} points - 原始轨迹点\n   * @returns {Array<THREE.Vector3>} 平滑后的轨迹点\n   */\n  smoothTrajectory(points) {\n    if (points.length < 3) return points;\n    \n    const smoothed = [];\n    const smoothingFactor = CONFIG.electronBeam.trajectorySmoothing || 0.8;\n    \n    // 保持第一个点不变\n    smoothed.push(points[0].clone());\n    \n    // 对中间的点进行平滑处理\n    for (let i = 1; i < points.length - 1; i++) {\n      const prev = points[i - 1];\n      const current = points[i];\n      const next = points[i + 1];\n      \n      // 计算平滑后的位置（加权平均）\n      const smoothedPoint = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0();\n      smoothedPoint.addScaledVector(prev, (1 - smoothingFactor) * 0.5);\n      smoothedPoint.addScaledVector(current, smoothingFactor);\n      smoothedPoint.addScaledVector(next, (1 - smoothingFactor) * 0.5);\n      \n      smoothed.push(smoothedPoint);\n    }\n    \n    // 保持最后一个点不变\n    smoothed.push(points[points.length - 1].clone());\n    \n    return smoothed;\n  }\n  \n  \n  /**\n   * 添加轨迹点\n   * @param {THREE.Vector3} point - 轨迹点\n   */\n  addTracePoint(point) {\n    // 如果没有当前段，创建一个新段\n    if (this.traceSegments.length === 0) {\n      this.traceSegments.push([]);\n    }\n    \n    // 获取当前段\n    const currentSegment = this.traceSegments[this.traceSegments.length - 1];\n    \n    // 添加点到当前段\n    currentSegment.push(point.clone());\n    \n    // 限制每个段的点数\n    if (currentSegment.length > CONFIG.electronBeam.trace.maxPoints / 2) {\n      // 保留最后几个点到新段，确保连续性\n      const newSegment = currentSegment.slice(-2);\n      this.traceSegments.push(newSegment);\n      \n      // 移除过多的段\n      if (this.traceSegments.length > 4) {\n        this.traceSegments.shift();\n      }\n    }\n    \n    // 重新绘制轨迹\n    this.redrawTraceSegments();\n  }\n\n  /**\n   * 重新绘制轨迹段\n   */\n  redrawTraceSegments() {\n    // 清除旧的轨迹线\n    this.clearTraceLines();\n    \n    // 为每个段创建单独的线条\n    this.traceSegments.forEach((segment, index) => {\n      if (segment.length > 1) {\n        const traceGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY().setFromPoints(segment);\n        \n        // 为不同段使用不同的透明度，最新的段最亮\n        const opacity = CONFIG.electronBeam.trace.opacity * (0.3 + 0.7 * (index + 1) / this.traceSegments.length);\n        const segmentMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* LineBasicMaterial */.mrM({\n          color: CONFIG.beam.color,\n          opacity: opacity,\n          transparent: true,\n          depthTest: true,  // 启用深度测试，确保被外壳正确遮挡\n          depthWrite: false // 禁用深度写入\n        });\n        \n        const traceLine = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Line */.N1A(traceGeometry, segmentMaterial);\n        traceLine.renderOrder = 3; // 设置轨迹线的渲染顺序，在极板之后渲染\n        this.traceLines.push(traceLine);\n        this.scene.add(traceLine);\n      }\n    });\n  }\n\n  /**\n   * 开始新的轨迹段（用于避免回扫线）\n   */\n  startNewTraceSegment() {\n    // 如果当前段有点，创建新段\n    if (this.traceSegments.length > 0 && this.traceSegments[this.traceSegments.length - 1].length > 0) {\n      this.traceSegments.push([]);\n    }\n  }\n  \n  /**\n   * 清除轨迹线\n   */\n  clearTraceLines() {\n    this.traceLines.forEach(line => {\n      this.scene.remove(line);\n      line.geometry.dispose();\n    });\n    this.traceLines = [];\n  }\n  \n  /**\n   * 更新材质\n   */\n  updateMaterial() {\n    this.updateBeamMaterials();\n  }\n  \n  /**\n   * 清除所有轨迹\n   */\n  clearAllTraces() {\n    this.clearTraceLines();\n    this.tracePoints = [];\n    this.traceSegments = [];\n  }\n\n  /**\n   * 清除电子束线条\n   */\n  clearBeamLines() {\n    if (this.beamLine) {\n      this.scene.remove(this.beamLine);\n      this.beamLine.geometry.dispose();\n      this.beamLine = null;\n    }\n    if (this.glowLine) {\n      this.scene.remove(this.glowLine);\n      this.glowLine.geometry.dispose();\n      this.glowLine = null;\n    }\n    if (this.particleSystem) {\n      this.scene.remove(this.particleSystem);\n      this.particleSystem.geometry.dispose();\n      this.particleSystem.material.dispose();\n      this.particleSystem = null;\n    }\n  }\n\n  /**\n   * 创建分层电子束效果\n   * @param {THREE.BufferGeometry} geometry - 电子束几何体\n   */\n  createLayeredBeam(geometry) {\n    // 创建发光外围层（更宽，透明度更低）\n    this.glowLine = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Line */.N1A(geometry.clone(), this.glowMaterial);\n    this.glowLine.renderOrder = 4; // 设置渲染顺序，在极板之后，主电子束之前\n    this.scene.add(this.glowLine);\n    \n    // 创建主电子束（较窄，亮度更高）\n    this.beamLine = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Line */.N1A(geometry.clone(), this.beamMaterial);\n    this.beamLine.renderOrder = 5; // 设置渲染顺序，确保在透明极板之后渲染\n    this.scene.add(this.beamLine);\n  }\n\n  /**\n   * 更新电子束材质\n   */\n  updateBeamMaterials() {\n    // 更新主电子束材质\n    if (this.beamMaterial) {\n      this.beamMaterial.color.set(CONFIG.beam.color);\n      this.beamMaterial.opacity = CONFIG.beam.intensity;\n    }\n    \n    // 更新发光材质\n    if (this.glowMaterial) {\n      this.glowMaterial.color.set(CONFIG.beam.color);\n      this.glowMaterial.opacity = CONFIG.beam.intensity * 0.3;\n    }\n    \n    // 更新轨迹材质\n    if (this.traceMaterial) {\n      this.traceMaterial.color.set(CONFIG.beam.color);\n    }\n  }\n\n  /**\n   * 创建粒子电子束效果（可选的高级效果）\n   * @param {Array<THREE.Vector3>} points - 轨迹点\n   */\n  createParticleBeam(points) {\n    // 创建粒子系统来模拟电子流\n    const particleCount = points.length;\n    const particles = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY();\n    const positions = new Float32Array(particleCount * 3);\n    const colors = new Float32Array(particleCount * 3);\n    const sizes = new Float32Array(particleCount);\n    \n    const color = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(CONFIG.beam.color);\n    \n    for (let i = 0; i < particleCount; i++) {\n      const point = points[i];\n      const i3 = i * 3;\n      \n      // 位置\n      positions[i3] = point.x;\n      positions[i3 + 1] = point.y;\n      positions[i3 + 2] = point.z;\n      \n      // 颜色（沿着轨迹渐变）\n      const intensity = 1.0 - (i / particleCount) * 0.5; // 从前到后逐渐变暗\n      colors[i3] = color.r * intensity;\n      colors[i3 + 1] = color.g * intensity;\n      colors[i3 + 2] = color.b * intensity;\n      \n      // 大小（前面较小，后面较大）\n      sizes[i] = 0.02 + (i / particleCount) * 0.01;\n    }\n    \n    particles.setAttribute('position', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferAttribute */.THS(positions, 3));\n    particles.setAttribute('color', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferAttribute */.THS(colors, 3));\n    particles.setAttribute('size', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferAttribute */.THS(sizes, 1));\n    \n    const particleMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* PointsMaterial */.BH$({\n      size: 0.03,\n      transparent: true,\n      opacity: CONFIG.beam.intensity * 0.8,\n      vertexColors: true,\n      blending: D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* AdditiveBlending */.EZo\n    });\n    \n    if (this.particleSystem) {\n      this.scene.remove(this.particleSystem);\n      this.particleSystem.geometry.dispose();\n      this.particleSystem.material.dispose();\n    }\n    \n    this.particleSystem = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Points */.ONl(particles, particleMaterial);\n    this.scene.add(this.particleSystem);\n  }\n\n  /**\n   * 演示电子束效果的测试函数\n   * @param {number} testVoltage - 测试电压（可选，默认为1.0）\n   */\n  demonstrateBeamEffects(testVoltage = 1.0) {\n    console.log('🔬 演示新的电子束效果...');\n    \n    // 测试不同的偏转效果\n    const testDeflections = [\n      { v: 0, h: 0, name: '无偏转' },\n      { v: testVoltage, h: 0, name: '垂直偏转' },\n      { v: 0, h: testVoltage, name: '水平偏转' },\n      { v: testVoltage, h: testVoltage, name: '双向偏转' }\n    ];\n    \n    let testIndex = 0;\n    const testInterval = setInterval(() => {\n      if (testIndex >= testDeflections.length) {\n        clearInterval(testInterval);\n        console.log('✅ 电子束效果演示完成！');\n        return;\n      }\n      \n      const test = testDeflections[testIndex];\n      console.log(`📡 测试 ${testIndex + 1}/4: ${test.name} (V:${test.v}, H:${test.h})`);\n      \n      this.updateBeamPath({\n        vertical: { voltage: test.v },\n        horizontal: { voltage: test.h }\n      });\n      \n      testIndex++;\n    }, 2000); // 每2秒切换一次\n    \n    return testInterval;\n  }\n\n  /**\n   * 启用粒子效果\n   */\n  enableParticleEffect() {\n    // 临时修改配置以启用粒子效果\n    const originalConfig = CONFIG.electronBeam.enableParticleEffect;\n    CONFIG.electronBeam.enableParticleEffect = true;\n    \n    // 重新生成电子束以应用粒子效果\n    this.updateBeamPath({\n      vertical: { voltage: 0 },\n      horizontal: { voltage: 0 }\n    });\n    \n    console.log('✨ 粒子效果已启用');\n    \n    // 返回恢复函数\n    return () => {\n      CONFIG.electronBeam.enableParticleEffect = originalConfig;\n      this.updateBeamPath({\n        vertical: { voltage: 0 },\n        horizontal: { voltage: 0 }\n      });\n      console.log('🔄 粒子效果已恢复到原始设置');\n    };\n  }\n} \n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\Screen.js\n\r\n\r\n\r\n/**\r\n * 荧光屏类\r\n * 负责处理荧光屏效果和波形显示\r\n * 集成了ThreeWaveformRenderer的波形渲染功能\r\n */\r\nclass Screen {\r\n  /**\r\n   * 构造函数\r\n   * @param {THREE.Scene} scene - Three.js场景\r\n   * @param {THREE.Mesh} screenMesh - 荧光屏网格\r\n   */\r\n  constructor(scene, screenMesh) {\r\n    this.scene = scene;\r\n    this.screenMesh = screenMesh;\r\n    \r\n    // 创建荧光点集合\r\n    this.glowPoints = [];\r\n    this.glowMeshes = [];\r\n    this.maxGlowPoints = CONFIG.screenEffects.maxGlowPoints;\r\n    \r\n    // 为了兼容DemoAnimation的focusOnComponent方法，添加position属性\r\n    this.position = this.screenMesh.position;\r\n    \r\n    // 移除了静态波形相关属性，保留电子束轨迹波形\r\n    \r\n    // 初始化荧光材质\r\n    this.initGlowMaterial();\r\n    \r\n    // 创建荧光屏网格\r\n    this.createScreenGrid();\r\n    \r\n    // 移除了静态波形初始化\r\n  }\r\n  \r\n  /**\r\n   * 初始化荧光材质\r\n   */\r\n  initGlowMaterial() {\r\n    // 更新荧光屏材质\r\n    this.screenMesh.material.emissive.set(CONFIG.screen.color);\r\n    this.screenMesh.material.emissiveIntensity = CONFIG.screen.intensity;\r\n    \r\n    // 创建荧光点材质\r\n    this.glowMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshBasicMaterial */.V9B({\r\n      color: CONFIG.beam.color, // 使用电子束的颜色（绿色）\r\n      transparent: true,\r\n      opacity: 0.8\r\n    });\r\n    \r\n    // 移除了静态波形材质\r\n  }\r\n  \r\n  /**\r\n   * 创建荧光屏网格\r\n   */\r\n  createScreenGrid() {\r\n    // 获取荧光屏的尺寸和位置\r\n    const screenWidth = CONFIG.components.screen.width;\r\n    const screenHeight = CONFIG.components.screen.height;\r\n    const screenPosition = CONFIG.components.screen.position;\r\n    \r\n    // 创建网格材质\r\n    const gridMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* LineBasicMaterial */.mrM({\r\n      color: CONFIG.screen.gridColor,\r\n      transparent: true,\r\n      opacity: CONFIG.screen.gridOpacity\r\n    });\r\n    \r\n    // 创建网格几何体\r\n    const gridGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY();\r\n    const gridPoints = [];\r\n    \r\n    // 计算网格线间距\r\n    const gridSpacing = CONFIG.screen.gridSpacing;\r\n    const halfWidth = screenWidth / 2;\r\n    const halfHeight = screenHeight / 2;\r\n    \r\n    // 添加垂直线\r\n    for (let x = -halfWidth; x <= halfWidth; x += gridSpacing) {\r\n      gridPoints.push(x, -halfHeight, 0);\r\n      gridPoints.push(x, halfHeight, 0);\r\n    }\r\n    \r\n    // 添加水平线\r\n    for (let y = -halfHeight; y <= halfHeight; y += gridSpacing) {\r\n      gridPoints.push(-halfWidth, y, 0);\r\n      gridPoints.push(halfWidth, y, 0);\r\n    }\r\n    \r\n    // 设置几何体属性\r\n    gridGeometry.setAttribute('position', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(gridPoints, 3));\r\n    \r\n    // 创建网格线\r\n    this.screenGrid = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* LineSegments */.DXC(gridGeometry, gridMaterial);\r\n    \r\n    // 设置网格位置（稍微偏移，避免z-fighting）\r\n    this.screenGrid.position.copy(screenPosition);\r\n    this.screenGrid.position.x += 0.01; // 在荧光屏前面一点点\r\n    this.screenGrid.rotation.y = -Math.PI / 2; // 与荧光屏相同的旋转\r\n    \r\n    // 添加到场景\r\n    this.scene.add(this.screenGrid);\r\n  }\r\n  \r\n  // 移除了initWaveform方法\r\n  \r\n  // 移除了createWaveform方法\r\n  \r\n  // 移除了createSingleWaveform方法\r\n  \r\n  /**\r\n   * 根据波形类型计算电压值\r\n   * @param {string} waveType - 波形类型\r\n   * @param {number} phaseVal - 相位值(弧度)\r\n   * @param {number} amplitude - 振幅\r\n   * @returns {number} 电压值\r\n   */\r\n  calculateVoltage(waveType, phaseVal, amplitude) {\r\n    switch (waveType) {\r\n      case 'sine':\r\n        return amplitude * Math.sin(phaseVal);\r\n      case 'square':\r\n        return amplitude * (Math.sin(phaseVal) >= 0 ? 1 : -1);\r\n      case 'triangle':\r\n        return amplitude * (2 * Math.abs((phaseVal % (2 * Math.PI)) / (2 * Math.PI) - 0.5) - 1);\r\n      case 'sawtooth':\r\n        return amplitude * (((phaseVal % (2 * Math.PI)) / (2 * Math.PI)) * 2 - 1);\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 添加荧光点\r\n   * @param {THREE.Vector3} position - 电子束击中荧光屏的位置\r\n   */\r\n  addGlowPoint(position) {\r\n    // 创建一个小球体代表荧光点\r\n    const glowGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* SphereGeometry */.Gu$(CONFIG.screenEffects.glowPointSize, 6, 6);\r\n    const glowMesh = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(glowGeometry, this.glowMaterial.clone());\r\n    \r\n    // 设置位置（稍微偏移，避免z-fighting）\r\n    glowMesh.position.copy(position);\r\n    const screenOffset = CONFIG.electronBeam.screenOffset;\r\n    glowMesh.position.x = CONFIG.components.screen.position.x - screenOffset; // 确保在荧光屏前面一点点\r\n    \r\n    // 添加到场景\r\n    this.scene.add(glowMesh);\r\n    \r\n    // 记录荧光点信息\r\n    this.glowPoints.push({\r\n      mesh: glowMesh,\r\n      createdAt: Date.now(),\r\n      initialOpacity: 0.8\r\n    });\r\n    \r\n    // 如果荧光点过多，移除最早的点\r\n    if (this.glowPoints.length > this.maxGlowPoints) {\r\n      const oldestPoint = this.glowPoints.shift();\r\n      this.scene.remove(oldestPoint.mesh);\r\n      oldestPoint.mesh.geometry.dispose();\r\n      oldestPoint.mesh.material.dispose();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 更新荧光点效果和波形动画\r\n   */\r\n  update() {\r\n    const now = Date.now();\r\n    const persistence = CONFIG.screen.persistence;\r\n    \r\n    // 更新荧光屏材质\r\n    this.screenMesh.material.emissive.set(CONFIG.screen.color);\r\n    this.screenMesh.material.emissiveIntensity = CONFIG.screen.intensity;\r\n    \r\n    // 更新每个荧光点的透明度（模拟余辉效果）\r\n    this.glowPoints.forEach((point, index) => {\r\n      const age = (now - point.createdAt) / 1000; // 年龄（秒）\r\n      const fadeRate = 1 - persistence; // 淡出速率\r\n      const opacity = point.initialOpacity * Math.pow(persistence, age * CONFIG.screenEffects.fadeRate);\r\n      \r\n      // 更新透明度\r\n      point.mesh.material.opacity = opacity;\r\n      \r\n      // 如果完全透明，移除这个点\r\n      if (opacity < CONFIG.screenEffects.minOpacity) {\r\n        this.scene.remove(point.mesh);\r\n        point.mesh.geometry.dispose();\r\n        point.mesh.material.dispose();\r\n        this.glowPoints.splice(index, 1);\r\n      }\r\n    });\r\n    \r\n    // 移除了静态波形动画逻辑\r\n  }\r\n  \r\n  /**\r\n   * 清除所有荧光点\r\n   */\r\n  clearAllGlowPoints() {\r\n    this.glowPoints.forEach(point => {\r\n      this.scene.remove(point.mesh);\r\n      point.mesh.geometry.dispose();\r\n      point.mesh.material.dispose();\r\n    });\r\n    this.glowPoints = [];\r\n  }\r\n  \r\n  /**\r\n   * 更新材质颜色\r\n   */\r\n  updateMaterial() {\r\n    // 更新荧光屏材质\r\n    this.screenMesh.material.emissive.set(CONFIG.screen.color);\r\n    this.screenMesh.material.emissiveIntensity = CONFIG.screen.intensity;\r\n    \r\n    // 更新所有荧光点的颜色\r\n    this.glowPoints.forEach(point => {\r\n      point.mesh.material.color.set(CONFIG.screen.color);\r\n    });\r\n  }\r\n  \r\n  // ========== 移除了所有静态波形控制方法 ==========\r\n  // 保留电子束轨迹波形，这些方法不再需要\r\n  \r\n  /**\r\n   * 显示/隐藏波形 - 保留此方法以避免调用错误，但不执行任何操作\r\n   * @param {boolean} show - 是否显示波形\r\n   */\r\n  showWaveform(show) {\r\n    // 静态波形已移除，此方法保留为空以避免调用错误\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * 设置波形类型 - 保留此方法以避免调用错误，但不执行任何操作\r\n   * @param {string} type - 波形类型\r\n   */\r\n  setWaveformType(type) {\r\n    // 静态波形已移除，此方法保留为空以避免调用错误\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * 设置频率 - 保留此方法以避免调用错误，但不执行任何操作\r\n   * @param {number} frequency - 频率值\r\n   */\r\n  setFrequency(frequency) {\r\n    // 静态波形已移除，此方法保留为空以避免调用错误\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * 设置振幅 - 保留此方法以避免调用错误，但不执行任何操作\r\n   * @param {number} amplitude - 振幅值\r\n   */\r\n  setAmplitude(amplitude) {\r\n    // 静态波形已移除，此方法保留为空以避免调用错误\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * 设置相位 - 保留此方法以避免调用错误，但不执行任何操作\r\n   * @param {number} phase - 相位值（弧度）\r\n   */\r\n  setPhase(phase) {\r\n    // 静态波形已移除，此方法保留为空以避免调用错误\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * 开始波形动画 - 保留此方法以避免调用错误，但不执行任何操作\r\n   */\r\n  startWaveformAnimation() {\r\n    // 静态波形已移除，此方法保留为空以避免调用错误\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * 停止波形动画 - 保留此方法以避免调用错误，但不执行任何操作\r\n   */\r\n  stopWaveformAnimation() {\r\n    // 静态波形已移除，此方法保留为空以避免调用错误\r\n    return this;\r\n  }\r\n} \n// EXTERNAL MODULE: D:\\Users\\asus\\Desktop\\web项目\\demo1\\node_modules\\three\\examples\\jsm\\renderers\\CSS2DRenderer.js\nvar D_Users_asus_Desktop_web_demo1_node_modules_three_examples_jsm_renderers_CSS2DRenderer = __webpack_require__(113);\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\LabelSystem.js\n\r\n\r\n\r\n\r\n/**\r\n * 标签系统类\r\n * 负责管理和渲染3D场景中的标签\r\n */\r\nclass LabelSystem {\r\n  /**\r\n   * 构造函数\r\n   * @param {THREE.Scene} scene - Three.js场景\r\n   * @param {HTMLElement} container - 容器元素\r\n   */\r\n  constructor(scene, container) {\r\n    this.scene = scene;\r\n    this.container = container;\r\n    this.labels = new Map(); // 存储标签对象\r\n    this.visible = false; // 默认隐藏标签\r\n    \r\n    // 初始化CSS2D渲染器\r\n    this.initRenderer();\r\n    \r\n    console.log('LabelSystem初始化完成');\r\n  }\r\n  \r\n  /**\r\n   * 初始化CSS2D渲染器\r\n   */\r\n  initRenderer() {\r\n    this.labelRenderer = new D_Users_asus_Desktop_web_demo1_node_modules_three_examples_jsm_renderers_CSS2DRenderer/* CSS2DRenderer */.B();\r\n    this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.labelRenderer.domElement.style.position = 'absolute';\r\n    this.labelRenderer.domElement.style.top = '0';\r\n    this.labelRenderer.domElement.style.pointerEvents = 'none';\r\n    this.container.appendChild(this.labelRenderer.domElement);\r\n    \r\n    // 默认隐藏\r\n    this.labelRenderer.domElement.style.display = 'none';\r\n  }\r\n  \r\n  /**\r\n   * 创建标签\r\n   * @param {string} id - 标签ID\r\n   * @param {string} text - 标签文本\r\n   * @param {THREE.Object3D} target - 标签附加的目标对象\r\n   * @param {THREE.Vector3} offset - 标签相对于目标的偏移量\r\n   * @param {string} description - 标签描述（可选）\r\n   */\r\n  createLabel(id, text, target, offset = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0.5, 0), description = '') {\r\n    // 创建标签元素\r\n    const labelDiv = document.createElement('div');\r\n    labelDiv.className = 'label';\r\n    labelDiv.textContent = text;\r\n    labelDiv.style.backgroundColor = CONFIG.labelSystem.backgroundColor;\r\n    labelDiv.style.color = CONFIG.labelSystem.color;\r\n    labelDiv.style.padding = CONFIG.labelSystem.padding;\r\n    labelDiv.style.borderRadius = CONFIG.labelSystem.borderRadius;\r\n    labelDiv.style.fontSize = CONFIG.labelSystem.fontSize;\r\n    labelDiv.style.pointerEvents = 'auto';\r\n    labelDiv.style.cursor = 'pointer';\r\n    \r\n    // 创建CSS2D对象\r\n    const labelObject = new D_Users_asus_Desktop_web_demo1_node_modules_three_examples_jsm_renderers_CSS2DRenderer/* CSS2DObject */.v(labelDiv);\r\n    labelObject.position.copy(offset);\r\n    \r\n    // 将标签添加到目标对象\r\n    target.add(labelObject);\r\n    \r\n    // 存储标签信息\r\n    this.labels.set(id, {\r\n      object: labelObject,\r\n      element: labelDiv,\r\n      target: target,\r\n      description: description\r\n    });\r\n    \r\n    // 添加点击事件\r\n    if (description) {\r\n      labelDiv.addEventListener('click', () => {\r\n        this.showDescription(id);\r\n      });\r\n      \r\n      // 添加提示\r\n      labelDiv.title = '点击查看详情';\r\n    }\r\n    \r\n    return labelObject;\r\n  }\r\n  \r\n  /**\r\n   * 显示标签描述\r\n   * @param {string} id - 标签ID\r\n   */\r\n  showDescription(id) {\r\n    const label = this.labels.get(id);\r\n    if (!label || !label.description) return;\r\n    \r\n    // 创建或更新描述面板\r\n    let descPanel = document.getElementById('label-description-panel');\r\n    if (!descPanel) {\r\n      descPanel = document.createElement('div');\r\n      descPanel.id = 'label-description-panel';\r\n      descPanel.style.position = 'absolute';\r\n      descPanel.style.bottom = CONFIG.labelSystem.descriptionPanel.position.bottom;\r\n      descPanel.style.left = CONFIG.labelSystem.descriptionPanel.position.left;\r\n      descPanel.style.backgroundColor = CONFIG.labelSystem.descriptionPanel.backgroundColor;\r\n      descPanel.style.color = 'white';\r\n      descPanel.style.padding = '15px';\r\n      descPanel.style.borderRadius = '5px';\r\n      descPanel.style.maxWidth = CONFIG.labelSystem.descriptionPanel.maxWidth;\r\n      descPanel.style.zIndex = CONFIG.labelSystem.descriptionPanel.zIndex;\r\n      descPanel.style.transition = 'opacity 0.3s';\r\n      descPanel.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.5)';\r\n      \r\n      // 添加关闭按钮\r\n      const closeBtn = document.createElement('button');\r\n      closeBtn.textContent = '×';\r\n      closeBtn.style.position = 'absolute';\r\n      closeBtn.style.top = '5px';\r\n      closeBtn.style.right = '5px';\r\n      closeBtn.style.background = 'none';\r\n      closeBtn.style.border = 'none';\r\n      closeBtn.style.color = 'white';\r\n      closeBtn.style.fontSize = '20px';\r\n      closeBtn.style.cursor = 'pointer';\r\n      closeBtn.onclick = () => {\r\n        descPanel.style.opacity = '0';\r\n        setTimeout(() => {\r\n          if (descPanel.parentNode) {\r\n            descPanel.parentNode.removeChild(descPanel);\r\n          }\r\n        }, 300);\r\n      };\r\n      \r\n      descPanel.appendChild(closeBtn);\r\n      this.container.appendChild(descPanel);\r\n    }\r\n    \r\n    // 设置标题和描述\r\n    const title = document.createElement('h3');\r\n    title.textContent = label.element.textContent;\r\n    title.style.margin = '0 0 10px 0';\r\n    \r\n    const description = document.createElement('div');\r\n    description.innerHTML = label.description;\r\n    \r\n    // 清除旧内容\r\n    while (descPanel.firstChild) {\r\n      if (descPanel.firstChild.tagName !== 'BUTTON') {\r\n        descPanel.removeChild(descPanel.firstChild);\r\n      }\r\n    }\r\n    \r\n    descPanel.appendChild(title);\r\n    descPanel.appendChild(description);\r\n    descPanel.style.opacity = '1';\r\n  }\r\n  \r\n  /**\r\n   * 设置标签可见性\r\n   * @param {boolean} visible - 是否可见\r\n   */\r\n  setVisible(visible) {\r\n    this.visible = visible;\r\n    this.labelRenderer.domElement.style.display = visible ? 'block' : 'none';\r\n  }\r\n  \r\n  /**\r\n   * 更新标签位置和大小\r\n   * @param {THREE.Camera} camera - 相机\r\n   */\r\n  update(camera) {\r\n    if (this.visible) {\r\n      this.labelRenderer.render(this.scene, camera);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 调整标签渲染器大小\r\n   * @param {number} width - 宽度\r\n   * @param {number} height - 高度\r\n   */\r\n  resize(width, height) {\r\n    this.labelRenderer.setSize(width, height);\r\n  }\r\n  \r\n  /**\r\n   * 移除标签\r\n   * @param {string} id - 标签ID\r\n   */\r\n  removeLabel(id) {\r\n    const label = this.labels.get(id);\r\n    if (label) {\r\n      label.target.remove(label.object);\r\n      this.labels.delete(id);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 移除所有标签\r\n   */\r\n  removeAllLabels() {\r\n    this.labels.forEach((label, id) => {\r\n      label.target.remove(label.object);\r\n    });\r\n    this.labels.clear();\r\n  }\r\n} \n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\ExplodedView.js\n\n\n\n\n\n/**\n * 分解视图类\n * 负责处理模型的分解视图效果\n */\nclass ExplodedView {\n  /**\n   * 构造函数\n   * @param {Object} components - 组件对象集合\n   */\n  constructor(components) {\n    this.components = components;\n    this.originalPositions = new Map();\n    this.exploded = false;\n    this.explodeFactor = CONFIG.explodedView.explodeFactor;\n    this.tweens = [];\n    \n    // 主要组件列表（仅用于聚焦，不参与分解动画）\n    this.focusOnlyComponents = ['gun', 'gunHead', 'v1', 'v2', 'h1', 'h2', 'screen'];\n    \n    // 保存原始位置\n    this.saveOriginalPositions();\n  }\n  \n  /**\n   * 保存所有组件的原始位置\n   */\n  saveOriginalPositions() {\n    Object.entries(this.components).forEach(([key, object]) => {\n      // 跳过仅用于聚焦的组件\n      if (this.focusOnlyComponents.includes(key)) {\n        return;\n      }\n      \n      if (object && object.position) {\n        this.originalPositions.set(key, object.position.clone());\n      }\n    });\n  }\n  \n  /**\n   * 添加组件\n   * @param {string} key - 组件键名\n   * @param {THREE.Object3D} object - 组件对象\n   */\n  addComponent(key, object) {\n    this.components[key] = object;\n    \n    // 跳过仅用于聚焦的组件，不保存其原始位置\n    if (!this.focusOnlyComponents.includes(key) && object && object.position) {\n      this.originalPositions.set(key, object.position.clone());\n    }\n  }\n  \n  /**\n   * 计算组件的分解位置\n   * @param {THREE.Vector3} originalPosition - 原始位置\n   * @param {string} componentKey - 组件键名\n   * @returns {THREE.Vector3} 分解后的位置\n   */\n  calculateExplodedPosition(originalPosition, componentKey) {\n    // 定义各组件的分解方向\n    const directions = {\n      'gun': new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-1, 0, 0),\n      'gunHead': new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-1, 0, 0),\n      'v1': new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 1, 0),\n      'v2': new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, -1, 0),\n      'h1': new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0, 1),\n      'h2': new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0, -1),\n      'screen': new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(1, 0, 0)\n    };\n    \n    // 获取分解方向，如果没有定义则使用默认方向（向外）\n    let direction;\n    if (directions[componentKey]) {\n      direction = directions[componentKey];\n    } else {\n      // 默认方向：从原点到组件的方向\n      direction = originalPosition.clone().normalize();\n      if (direction.length() === 0) {\n        direction.set(1, 0, 0); // 默认X轴方向\n      }\n    }\n    \n    // 计算分解后的位置\n    return originalPosition.clone().add(\n      direction.multiplyScalar(this.explodeFactor)\n    );\n  }\n  \n  /**\n   * 切换分解视图\n   * @param {boolean} explode - 是否分解\n   * @param {number} duration - 动画持续时间（毫秒）\n   */\n  toggle(explode = !this.exploded, duration = CONFIG.explodedView.animationDuration) {\n    this.exploded = explode;\n    \n    // 停止所有正在进行的动画\n    this.tweens.forEach(tween => tween.stop());\n    this.tweens = [];\n    \n    // 为每个组件创建动画\n    Object.entries(this.components).forEach(([key, object]) => {\n      // 跳过仅用于聚焦的组件\n      if (this.focusOnlyComponents.includes(key)) return;\n      \n      if (!object || !object.position) return;\n      \n      const originalPosition = this.originalPositions.get(key);\n      if (!originalPosition) return;\n      \n      const targetPosition = explode \n        ? this.calculateExplodedPosition(originalPosition, key)\n        : originalPosition.clone();\n      \n      // 创建位置动画\n      const tween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(object.position, tweenGroup)\n        .to({\n          x: targetPosition.x,\n          y: targetPosition.y,\n          z: targetPosition.z\n        }, duration)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Quadratic.InOut)\n        .start();\n      \n      this.tweens.push(tween);\n    });\n    \n    return this.exploded;\n  }\n  \n  /**\n   * 聚焦到特定组件\n   * @param {string} componentKey - 组件键名\n   * @param {THREE.Camera} camera - 相机\n   * @param {THREE.Controls} controls - 控制器\n   * @param {number} duration - 动画持续时间（毫秒）\n   */\n  focusComponent(componentKey, camera, controls, duration = 1000) {\n    console.log('ExplodedView.focusComponent被调用');\n    console.log('componentKey:', componentKey);\n    console.log('this.components:', this.components);\n    console.log('camera:', camera);\n    console.log('controls:', controls);\n    \n    const component = this.components[componentKey];\n    console.log('找到的组件:', component);\n    \n    if (!component) {\n      console.error('组件未找到:', componentKey);\n      return;\n    }\n    \n    // 计算目标位置（组件位置 + 偏移）\n    const targetPosition = component.position.clone();\n    const offset = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(\n      CONFIG.explodedView.cameraOffset.x,\n      CONFIG.explodedView.cameraOffset.y,\n      CONFIG.explodedView.cameraOffset.z\n    );\n    \n    console.log('组件位置:', targetPosition);\n    console.log('相机偏移:', offset);\n    console.log('目标相机位置:', {\n      x: targetPosition.x + offset.x,\n      y: targetPosition.y + offset.y,\n      z: targetPosition.z + offset.z\n    });\n    \n    // 创建相机位置动画\n    const posTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(camera.position, tweenGroup)\n      .to({\n        x: targetPosition.x + offset.x,\n        y: targetPosition.y + offset.y,\n        z: targetPosition.z + offset.z\n      }, duration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n      .start();\n    \n    // 创建控制器目标点动画\n    const targetTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(controls.target, tweenGroup)\n      .to({\n        x: targetPosition.x,\n        y: targetPosition.y,\n        z: targetPosition.z\n      }, duration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n      .start();\n    \n    this.tweens.push(posTween, targetTween);\n    console.log('动画已创建并添加到tweens数组，当前tweens数量:', this.tweens.length);\n    \n    // 如果动画没有立即开始，强制移动相机\n    setTimeout(() => {\n      if (camera.position.distanceTo(new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(\n        targetPosition.x + offset.x,\n        targetPosition.y + offset.y,\n        targetPosition.z + offset.z\n      )) > 0.1) {\n        console.log('动画可能没有正常工作，强制移动相机');\n        this.forceMoveCamera(camera, controls, targetPosition, offset);\n      }\n    }, 100);\n  }\n  \n  /**\n   * 强制移动相机（备选方案）\n   */\n  forceMoveCamera(camera, controls, targetPosition, offset) {\n    console.log('执行强制移动');\n    \n    // 直接设置相机位置\n    camera.position.set(\n      targetPosition.x + offset.x,\n      targetPosition.y + offset.y,\n      targetPosition.z + offset.z\n    );\n    \n    // 直接设置控制器目标点\n    controls.target.set(\n      targetPosition.x,\n      targetPosition.y,\n      targetPosition.z\n    );\n    \n    // 更新控制器\n    controls.update();\n    \n    console.log('强制移动完成，相机位置:', camera.position);\n    console.log('控制器目标点:', controls.target);\n  }\n  \n  /**\n   * 重置视图\n   * @param {THREE.Camera} camera - 相机\n   * @param {THREE.Controls} controls - 控制器\n   * @param {number} duration - 动画持续时间（毫秒）\n   */\n  resetView(camera, controls, duration = CONFIG.explodedView.animationDuration) {\n    // 重置相机位置\n    const posTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(camera.position, tweenGroup)\n      .to({ \n        x: CONFIG.camera.position.x, \n        y: CONFIG.camera.position.y, \n        z: CONFIG.camera.position.z \n      }, duration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n      .start();\n    \n    // 重置控制器目标点\n    const targetTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(controls.target, tweenGroup)\n      .to({ \n        x: CONFIG.camera.target.x, \n        y: CONFIG.camera.target.y, \n        z: CONFIG.camera.target.z \n      }, duration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n      .start();\n    \n    this.tweens.push(posTween, targetTween);\n    \n    // 如果处于分解状态，重置组件位置\n    if (this.exploded) {\n      this.toggle(false, duration);\n    }\n  }\n  \n  /**\n   * 更新动画\n   */\n  update() {\n    // 更新所有tweens\n    this.tweens.forEach(tween => {\n      if (tween && tween.isPlaying) {\n        tween.update();\n      }\n    });\n    \n    // 清理已完成的tweens\n    this.tweens = this.tweens.filter(tween => tween && tween.isPlaying);\n  }\n} \n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\utils\\ParticlePool.js\n\r\n\r\n\r\n/**\r\n * 粒子对象池类\r\n * 用于管理电子粒子的创建、复用和回收，避免频繁的内存分配和垃圾回收\r\n * 显著提升动画性能，特别是在大量粒子场景下\r\n */\r\nclass ParticlePool {\r\n  /**\r\n   * 构造函数\r\n   * @param {number} maxSize - 对象池最大容量\r\n   * @param {number} preCreateCount - 预创建的粒子数量\r\n   */\r\n  constructor(maxSize = 100, preCreateCount = 20) {\r\n    this.pool = [];                    // 可用粒子池\r\n    this.activeParticles = [];         // 正在使用的粒子\r\n    this.maxSize = maxSize;           // 最大容量\r\n    this.preCreateCount = preCreateCount;\r\n    \r\n    // 性能统计\r\n    this.stats = {\r\n      created: 0,        // 总创建数\r\n      reused: 0,         // 重用次数\r\n      released: 0,       // 释放次数\r\n      maxActive: 0       // 最大同时活跃数\r\n    };\r\n    \r\n    console.log(`ParticlePool: 初始化，最大容量=${maxSize}，预创建=${preCreateCount}`);\r\n    \r\n    // 预创建粒子对象\r\n    this.preCreateParticles();\r\n  }\r\n  \r\n  /**\r\n   * 预创建粒子对象\r\n   * 在初始化时创建一批粒子，避免运行时创建的性能开销\r\n   */\r\n  preCreateParticles() {\r\n    console.log(`ParticlePool: 开始预创建 ${this.preCreateCount} 个粒子`);\r\n    \r\n    for (let i = 0; i < this.preCreateCount; i++) {\r\n      const particle = this.createNewParticle();\r\n      particle.visible = false;  // 初始状态不可见\r\n      this.pool.push(particle);\r\n      this.stats.created++;\r\n    }\r\n    \r\n    console.log(`ParticlePool: 预创建完成，池中可用粒子数: ${this.pool.length}`);\r\n  }\r\n  \r\n  /**\r\n   * 创建新的粒子对象\r\n   * @returns {THREE.Mesh} 新创建的粒子网格对象\r\n   */\r\n  createNewParticle() {\r\n    // 创建球体几何体 - 使用较低的细分级别以提升性能\r\n    const geometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* SphereGeometry */.Gu$(\r\n      CONFIG.demoAnimation?.electronParticle?.radius || 0.02,  // 半径\r\n      8,   // 水平分段数（较低以提升性能）\r\n      6    // 垂直分段数（较低以提升性能）\r\n    );\r\n    \r\n    // 创建材质 - 优化透明度渲染\r\n    const material = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshBasicMaterial */.V9B({\r\n      color: CONFIG.beam?.color || 0x00ffff,\r\n      transparent: true,\r\n      opacity: CONFIG.demoAnimation?.electronParticle?.opacity || 0.8,\r\n      depthTest: false,  // 禁用深度测试，确保粒子总是可见\r\n      depthWrite: false, // 禁用深度写入以避免透明度问题\r\n      blending: D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* AdditiveBlending */.EZo // 使用加法混合，增强发光效果\r\n    });\r\n    \r\n    // 创建网格对象\r\n    const particle = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(geometry, material);\r\n    \r\n    // 设置渲染顺序，确保粒子在透明极板之后渲染\r\n    particle.renderOrder = 10;\r\n    \r\n    // 添加自定义属性用于追踪\r\n    particle.userData = {\r\n      poolId: Math.random().toString(36).substr(2, 9),  // 唯一ID\r\n      createdAt: Date.now(),                            // 创建时间\r\n      reuseCount: 0                                     // 重用次数\r\n    };\r\n    \r\n    return particle;\r\n  }\r\n  \r\n  /**\r\n   * 从对象池获取一个粒子\r\n   * @returns {THREE.Mesh} 可用的粒子对象\r\n   */\r\n  getParticle() {\r\n    let particle;\r\n    \r\n    if (this.pool.length > 0) {\r\n      // 从池中取出一个现成的粒子（最佳情况）\r\n      particle = this.pool.pop();\r\n      particle.userData.reuseCount++;\r\n      this.stats.reused++;\r\n      \r\n    } else if (this.activeParticles.length < this.maxSize) {\r\n      // 池空了但还没达到最大限制，创建新的粒子\r\n      particle = this.createNewParticle();\r\n      this.stats.created++;\r\n      console.log(`ParticlePool: 池已空，创建新粒子 (总创建数: ${this.stats.created})`);\r\n      \r\n    } else {\r\n      // 达到最大限制，强制回收最老的粒子\r\n      particle = this.activeParticles.shift();\r\n      console.warn(`ParticlePool: 达到最大容量 ${this.maxSize}，强制回收最老粒子`);\r\n    }\r\n    \r\n    // 重置粒子状态\r\n    this.resetParticle(particle);\r\n    \r\n    // 设置为可见并加入活跃列表\r\n    particle.visible = true;\r\n    this.activeParticles.push(particle);\r\n    \r\n    // 更新统计\r\n    this.stats.maxActive = Math.max(this.stats.maxActive, this.activeParticles.length);\r\n    \r\n    return particle;\r\n  }\r\n  \r\n  /**\r\n   * 将粒子归还到对象池\r\n   * @param {THREE.Mesh} particle - 要归还的粒子对象\r\n   */\r\n  releaseParticle(particle) {\r\n    if (!particle) return;\r\n    \r\n    const index = this.activeParticles.indexOf(particle);\r\n    if (index === -1) {\r\n      console.warn('ParticlePool: 尝试释放未在活跃列表中的粒子');\r\n      return;\r\n    }\r\n    \r\n    // 从活跃列表中移除\r\n    this.activeParticles.splice(index, 1);\r\n    \r\n    // 重置粒子状态\r\n    this.resetParticle(particle);\r\n    particle.visible = false;\r\n    \r\n    // 归还到池中\r\n    this.pool.push(particle);\r\n    this.stats.released++;\r\n  }\r\n  \r\n  /**\r\n   * 重置粒子状态\r\n   * @param {THREE.Mesh} particle - 要重置的粒子\r\n   */\r\n  resetParticle(particle) {\r\n    // 重置位置\r\n    particle.position.set(0, 0, 0);\r\n    \r\n    // 重置旋转\r\n    particle.rotation.set(0, 0, 0);\r\n    \r\n    // 重置缩放\r\n    particle.scale.set(1, 1, 1);\r\n    \r\n    // 重置材质属性\r\n    if (particle.material) {\r\n      particle.material.opacity = CONFIG.demoAnimation?.electronParticle?.opacity || 0.8;\r\n      particle.material.color.setHex(CONFIG.beam?.color || 0x00ffff);\r\n    }\r\n    \r\n    // 停止所有正在进行的动画\r\n    if (particle.userData.currentTween) {\r\n      particle.userData.currentTween.stop();\r\n      delete particle.userData.currentTween;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 批量获取多个粒子\r\n   * @param {number} count - 需要的粒子数量\r\n   * @returns {THREE.Mesh[]} 粒子数组\r\n   */\r\n  getParticles(count) {\r\n    const particles = [];\r\n    for (let i = 0; i < count; i++) {\r\n      particles.push(this.getParticle());\r\n    }\r\n    return particles;\r\n  }\r\n  \r\n  /**\r\n   * 批量释放多个粒子\r\n   * @param {THREE.Mesh[]} particles - 要释放的粒子数组\r\n   */\r\n  releaseParticles(particles) {\r\n    particles.forEach(particle => this.releaseParticle(particle));\r\n  }\r\n  \r\n  /**\r\n   * 清理所有活跃粒子\r\n   */\r\n  clearAll() {\r\n    console.log(`ParticlePool: 清理所有活跃粒子，数量: ${this.activeParticles.length}`);\r\n    \r\n    // 停止所有粒子的动画\r\n    this.activeParticles.forEach(particle => {\r\n      if (particle.userData.currentTween) {\r\n        particle.userData.currentTween.stop();\r\n        delete particle.userData.currentTween;\r\n      }\r\n      particle.visible = false;\r\n    });\r\n    \r\n    // 将所有活跃粒子归还到池中\r\n    this.pool.push(...this.activeParticles);\r\n    this.activeParticles = [];\r\n  }\r\n  \r\n  /**\r\n   * 获取对象池状态信息\r\n   * @returns {Object} 状态信息对象\r\n   */\r\n  getStatus() {\r\n    return {\r\n      poolSize: this.pool.length,           // 池中可用粒子数\r\n      activeCount: this.activeParticles.length,  // 活跃粒子数\r\n      maxSize: this.maxSize,                // 最大容量\r\n      stats: { ...this.stats }             // 性能统计（复制）\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 打印详细状态信息\r\n   */\r\n  printStatus() {\r\n    const status = this.getStatus();\r\n    console.log('=== ParticlePool 状态报告 ===');\r\n    console.log(`池中可用: ${status.poolSize}`);\r\n    console.log(`正在使用: ${status.activeCount}`);\r\n    console.log(`最大容量: ${status.maxSize}`);\r\n    console.log(`总创建数: ${status.stats.created}`);\r\n    console.log(`重用次数: ${status.stats.reused}`);\r\n    console.log(`释放次数: ${status.stats.released}`);\r\n    console.log(`最大同时活跃: ${status.stats.maxActive}`);\r\n    console.log(`重用率: ${status.stats.reused > 0 ? (status.stats.reused / (status.stats.created + status.stats.reused) * 100).toFixed(1) : 0}%`);\r\n    console.log('========================');\r\n  }\r\n  \r\n  /**\r\n   * 销毁对象池，释放所有资源\r\n   */\r\n  dispose() {\r\n    console.log('ParticlePool: 开始销毁，释放所有资源');\r\n    \r\n    // 清理所有粒子\r\n    this.clearAll();\r\n    \r\n    // 释放几何体和材质资源\r\n    const allParticles = [...this.pool, ...this.activeParticles];\r\n    allParticles.forEach(particle => {\r\n      if (particle.geometry) {\r\n        particle.geometry.dispose();\r\n      }\r\n      if (particle.material) {\r\n        particle.material.dispose();\r\n      }\r\n    });\r\n    \r\n    // 清空数组\r\n    this.pool = [];\r\n    this.activeParticles = [];\r\n    \r\n    // 重置统计\r\n    this.stats = {\r\n      created: 0,\r\n      reused: 0,\r\n      released: 0,\r\n      maxActive: 0\r\n    };\r\n    \r\n    console.log('ParticlePool: 销毁完成');\r\n  }\r\n}\r\n\r\n// 导出默认实例（单例模式）\r\nconst defaultParticlePool = new ParticlePool(100, 30);\r\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\DemoAnimation.js\n\n\n\n\n\n\n/**\n * 演示动画类\n * 负责创建和控制阴极射线管工作原理的演示动画\n */\nclass DemoAnimation {\n  /**\n   * 构造函数\n   * @param {THREE.Scene} scene - Three.js场景\n   * @param {Object} components - 组件对象集合\n   * @param {Object} controllers - 控制器对象集合\n   */\n  constructor(scene, components, controllers) {\n    console.log('DemoAnimation构造函数被调用');\n    console.log('scene:', scene);\n    console.log('components:', components);\n    console.log('controllers:', controllers);\n    \n    this.scene = scene;\n    this.components = components;\n    this.controllers = controllers;\n    \n    this.isPlaying = false;\n    this.currentStep = 0;\n    this.animationSteps = [];\n    this.particles = [];\n    this.tweens = [];\n    this.stepCallbacks = [];\n    this.continuousBeamInterval = null; // 连续电子束的定时器\n    this.originalVoltages = null; // 保存原始偏转电压值，用于波形显示\n    this.originalPlateOpacities = null; // 保存极板原始不透明度\n    this.originalGuiState = null; // 保存GUI面板的原始状态\n    \n    // 初始化粒子对象池\n    this.particlePool = new ParticlePool(80, 25); // 最大80个粒子，预创建25个\n    \n    console.log('初始化动画步骤');\n    // 初始化动画步骤\n    this.initAnimationSteps();\n    \n    console.log('创建电子粒子材质');\n    // 创建电子粒子材质 - 优化透明度渲染\n    this.particleMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshBasicMaterial */.V9B({\n      color: CONFIG.beam.color,\n      transparent: true,\n      opacity: CONFIG.demoAnimation.electronParticle.opacity,\n      depthTest: true,   // 启用深度测试，确保被外壳正确遮挡\n      depthWrite: false, // 禁用深度写入，避免影响其他透明物体\n      blending: D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* AdditiveBlending */.EZo // 使用加法混合，增强发光效果\n    });\n    \n    console.log('DemoAnimation构造函数完成');\n    console.log('粒子对象池状态:', this.particlePool.getStatus());\n  }\n  \n  /**\n   * 初始化动画步骤\n   */\n  initAnimationSteps() {\n    // 步骤1: 介绍阴极射线管\n    this.animationSteps.push({\n      title: '阴极射线管简介',\n      description: '阴极射线管是一种真空电子管，利用电场控制电子束的偏转来显示图像。',\n      duration: 6000,  // 增加持续时间到6秒\n      setup: () => {\n        // 使用自定义视角展示整个阴极射线管的全貌\n        const viewPromise = this.setCustomView({\n          position: { x: 8, y: 5, z: 12 },  // 稍微远一点的俯视角度\n          target: { x: 0, y: 0, z: 0 }      // 观察整个设备中心\n        });\n        \n        // 在2秒时开始CRT外壳分解和消失\n        setTimeout(() => {\n          console.log('演示动画：开始CRT外壳分解和消失');\n          this.startCRTShellDisappear();\n        }, 2000);  // 在2秒时开始CRT外壳消失\n        \n        return viewPromise;\n      }\n    });\n    \n    // 步骤2: 电子枪发射电子\n    this.animationSteps.push({\n      title: '电子枪发射电子',\n      description: '电子枪加热阴极，释放电子并加速形成电子束。',\n      duration: 8000,\n      setup: () => {\n        // 聚焦到电子枪\n        const focusPromise = this.focusOnComponent('gun');\n        \n        // 创建连续电子束流\n        setTimeout(() => {\n          this.startContinuousElectronBeam(\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-3, 0, 0),\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-2.7, 0, 0)\n          );\n        }, 1000);\n        \n        return focusPromise;\n      }\n    });\n    \n    // 步骤3: 垂直偏转板\n    this.animationSteps.push({\n      title: '垂直偏转板',\n      description: '垂直偏转板通过电压控制电子束在垂直方向上的偏转。',\n      duration: 8000,\n      setup: () => {\n        // 聚焦到垂直偏转板\n        const focusPromise = this.focusOnComponent('v1');\n        \n        // 模拟电压变化\n        setTimeout(() => {\n          // 设置垂直电压\n          this.simulateVoltageChange('vertical', 3, 2000);\n          \n          // 创建连续电子束流（从电子枪到偏转板）\n          this.startContinuousElectronBeam(\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-2.7, 0, 0),\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-1.5, 0.6, 0)\n          );\n        }, 1000);\n        \n        return focusPromise;\n      }\n    });\n    \n    // 步骤4: 水平偏转板\n    this.animationSteps.push({\n      title: '水平偏转板',\n      description: '水平偏转板通过电压控制电子束在水平方向上的偏转。',\n      duration: 8000,\n      setup: () => {\n        // 聚焦到水平偏转板\n        const focusPromise = this.focusOnComponent('h1');\n        \n        // 模拟电压变化\n        setTimeout(() => {\n          // 设置水平电压\n          this.simulateVoltageChange('horizontal', 2, 2000);\n          \n          // 创建连续电子束流（从垂直偏转板到水平偏转板）\n          this.startContinuousElectronBeam(\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-1.5, 0.6, 0),\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-0.2, 0.6, 0.4)\n          );\n        }, 1000);\n        \n        return focusPromise;\n      }\n    });\n    \n    // 步骤5: 荧光屏显示\n    this.animationSteps.push({\n      title: '荧光屏显示',\n      description: '电子束击中荧光屏上的荧光物质，产生可见光，形成图像。',\n      duration: 5000,\n      setup: () => {\n        // 聚焦到荧光屏\n        const focusPromise = this.focusOnComponent('screen');\n        \n        // 创建连续电子束流（从水平偏转板到荧光屏）\n        setTimeout(() => {\n          this.startContinuousElectronBeam(\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-0.2, 0.6, 0.4),\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(3, 0.6, 0.4)\n          );\n        }, 1000);\n        \n        return focusPromise;\n      }\n    });\n    \n    // 步骤6: 波形显示\n    this.animationSteps.push({\n      title: '波形显示',\n      description: '通过改变偏转电压，可以在荧光屏上绘制各种波形。',\n      duration: 10000,  // 增加持续时间以展示两种波形\n      setup: () => {\n        // 使用自定义视角，从左前方、上方观察整个阴极射线管和波形显示\n        const resetPromise = this.setCustomView({\n          position: { x: 14, y: 1, z: -2.5 },       \n          target: { x: 0, y: 0, z: 0 }         // 聚焦到整个装置的中心\n        });\n        \n        // 启用波形和电子束\n        setTimeout(() => {\n          // 清除之前的粒子和荧光点\n          this.clearAllParticles();\n          if (this.components && this.components.screen) {\n            this.components.screen.clearAllGlowPoints();\n          }\n          \n          // 第一阶段：显示正弦波（前4秒）\n          this.setWaveformParams({\n            type: 'sine',\n            frequency: 1.2,\n            amplitude: 2.5,\n            enabled: true\n          });\n          \n          // 启动连续电子束流 - 从电子枪到荧光屏的完整路径\n          this.startContinuousElectronBeam(\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(-3, 0, 0),     // 从电子枪开始\n            new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(3, 0, 0)       // 到荧光屏结束\n          );\n          \n          // 4秒后切换到方波\n          const waveformSwitchCallback = setTimeout(() => {\n            // 清除荧光屏，准备显示新波形\n            if (this.components && this.components.screen) {\n              this.components.screen.clearAllGlowPoints();\n            }\n            \n            // 切换到方波\n            this.setWaveformParams({\n              type: 'square',\n              frequency: 0.8,\n              amplitude: 3,\n              enabled: true\n            });\n          }, 4000);\n          \n          this.stepCallbacks.push(waveformSwitchCallback);\n          \n        }, 1000);\n        \n        return resetPromise;\n      }\n    });\n    \n    // 步骤7: 演示结束\n    this.animationSteps.push({\n      title: '演示结束',\n      description: '阴极射线管是早期显示器的基础技术，为现代显示技术奠定了基础。',\n      duration: 3000,\n      setup: () => {\n        // 设置自定义视角，展示整个阴极射线管的完整视图\n        const viewPromise = this.setCustomView({\n          position: { x: 6, y: 4, z: 10 },\n          target: { x: 0, y: 0, z: 0 }\n        });\n        \n        // 还原分解视图状态\n        setTimeout(() => {\n          console.log('演示动画结束：还原分解视图状态');\n          const explodeBtn = document.getElementById('toggle-explode-btn');\n          if (explodeBtn && explodeBtn.textContent === '合并视图') {\n            explodeBtn.click();\n          }\n        }, 500);\n        \n        // 还原外壳显示状态\n        setTimeout(() => {\n          console.log('演示动画结束：还原外壳显示状态');\n          if (this.originalShellVisible !== undefined) {\n            // 查找\"显示外壳\"的复选框\n            const shellCheckboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n            let shellCheckbox = null;\n            \n            // 查找对应的复选框\n            shellCheckboxes.forEach(checkbox => {\n              const label = checkbox.closest('li')?.querySelector('.property-name');\n              if (label && label.textContent.includes('显示外壳')) {\n                shellCheckbox = checkbox;\n              }\n            });\n            \n            if (shellCheckbox) {\n              // 如果原始状态和当前状态不同，点击复选框\n              if (shellCheckbox.checked !== this.originalShellVisible) {\n                console.log('演示动画结束：通过复选框还原外壳状态');\n                shellCheckbox.click();\n              }\n            } else {\n              // 直接通过CONFIG还原\n              console.log('演示动画结束：直接通过CONFIG还原外壳状态');\n              if (window.CONFIG) {\n                window.CONFIG.shell.visible = this.originalShellVisible;\n                // 触发外壳更新\n                if (this.controllers && this.controllers.onShellChange) {\n                  this.controllers.onShellChange(window.CONFIG.shell);\n                }\n              }\n            }\n          }\n          \n          // 重置所有参数\n          this.resetAllParams();\n        }, 1000);\n        \n        return viewPromise;\n      }\n    });\n  }\n  \n  /**\n   * 开始演示动画\n   */\n  start() {\n    console.log('DemoAnimation.start被调用');\n    console.log('this.isPlaying:', this.isPlaying);\n    \n    if (this.isPlaying) {\n      console.log('演示已在播放中，返回');\n      return;\n    }\n    \n    // 保存原始偏转电压值，用于波形显示时保持固定位置\n    this.originalVoltages = {\n      horizontal: CONFIG.deflection.horizontal.voltage,\n      vertical: CONFIG.deflection.vertical.voltage\n    };\n    \n    // 保存原始外壳显示状态\n    this.originalShellVisible = CONFIG.shell ? CONFIG.shell.visible : true;\n    console.log('保存原始外壳状态:', this.originalShellVisible);\n    \n    // 保存极板原始不透明度并设置为50%，提高透明度以便更好地观察电子束\n    this.setPlateOpacity(0.5);\n    \n    // 折叠GUI面板，避免演示时界面干扰\n    this.collapseGuiFolders();\n    \n    this.isPlaying = true;\n    this.currentStep = 0;\n    \n    console.log('保存原始参数');\n    // 保存原始参数\n    this.saveOriginalParams();\n    \n    // 在动画开始时启用电子束（设置适当的强度）\n    CONFIG.beam.intensity = 0.9;\n    if (this.controllers.onBeamChange) {\n      this.controllers.onBeamChange(CONFIG.beam);\n    }\n    \n    console.log('开始第一步，调用playCurrentStep');\n    // 开始第一步\n    this.playCurrentStep();\n  }\n  \n  /**\n   * 停止演示动画\n   */\n  stop() {\n    this.isPlaying = false;\n    \n    // 停止连续电子束\n    this.stopContinuousElectronBeam();\n    \n    // 停止所有动画\n    this.tweens.forEach(tween => {\n      if (tween && typeof tween.stop === 'function') {\n        tween.stop();\n      }\n    });\n    this.tweens = [];\n    \n    // 清除所有粒子（使用对象池优化）\n    this.clearAllParticles();\n    \n    // 清理对象池中的所有活跃粒子\n    if (this.particlePool) {\n      this.particlePool.clearAll();\n    }\n    \n    // 恢复原始偏转电压值\n    if (this.originalVoltages) {\n      CONFIG.deflection.horizontal.voltage = this.originalVoltages.horizontal;\n      CONFIG.deflection.vertical.voltage = this.originalVoltages.vertical;\n      this.originalVoltages = null;\n    }\n    \n    // 清理保存的外壳状态\n    this.originalShellVisible = undefined;\n    \n    // 恢复极板原始不透明度\n    this.restorePlateOpacity();\n    \n    // 恢复GUI面板状态\n    this.restoreGuiFolders();\n    \n    // 重置所有参数\n    this.resetAllParams();\n    \n    // 清除所有回调和定时器\n    this.stepCallbacks.forEach(callback => {\n      if (typeof callback === 'number') {\n        clearTimeout(callback);\n      }\n    });\n    this.stepCallbacks = [];\n  }\n  \n  /**\n   * 播放当前步骤\n   */\n  playCurrentStep() {\n    console.log('playCurrentStep被调用');\n    console.log('this.isPlaying:', this.isPlaying);\n    console.log('this.currentStep:', this.currentStep);\n    console.log('this.animationSteps.length:', this.animationSteps.length);\n    \n    if (!this.isPlaying || this.currentStep >= this.animationSteps.length) {\n      console.log('演示结束或已停止，调用stop');\n      this.stop();\n      return;\n    }\n    \n    // 停止之前的连续电子束\n    this.stopContinuousElectronBeam();\n    \n    const step = this.animationSteps[this.currentStep];\n    console.log('当前步骤:', step);\n    \n    // 触发步骤开始事件\n    if (this.onStepStart) {\n      console.log('触发步骤开始事件');\n      this.onStepStart(this.currentStep, step);\n    } else {\n      console.log('onStepStart未设置');\n    }\n    \n    // 设置步骤\n    console.log('执行步骤setup');\n    const setupPromise = step.setup ? step.setup() : Promise.resolve();\n    \n    // 步骤完成后，继续下一步\n    setupPromise.then(() => {\n      console.log('步骤setup完成，设置下一步定时器，持续时间:', step.duration);\n      const callback = setTimeout(() => {\n        console.log('定时器触发，进入下一步');\n        this.currentStep++;\n        this.playCurrentStep();\n      }, step.duration);\n      \n      this.stepCallbacks.push(callback);\n      console.log('定时器已添加到stepCallbacks');\n    }).catch(error => {\n      console.error('步骤setup出错:', error);\n    });\n  }\n  \n  /**\n   * 聚焦到组件\n   * @param {string} componentKey - 组件键名\n   * @returns {Promise} 动画完成的Promise\n   */\n  focusOnComponent(componentKey) {\n    return new Promise(resolve => {\n      const component = this.components[componentKey];\n      if (!component) {\n        resolve();\n        return;\n      }\n      \n      // 计算目标位置\n      const targetPosition = component.position.clone();\n      const offset = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(\n        CONFIG.demoAnimation.cameraOffset.x,\n        CONFIG.demoAnimation.cameraOffset.y,\n        CONFIG.demoAnimation.cameraOffset.z\n      );\n      \n      // 创建相机位置动画\n      const posTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(this.controllers.camera.position, tweenGroup)\n        .to({\n          x: targetPosition.x + offset.x,\n          y: targetPosition.y + offset.y,\n          z: targetPosition.z + offset.z\n        }, CONFIG.demoAnimation.animationDuration)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n        .onComplete(resolve)\n        .start();\n      \n      // 创建控制器目标点动画\n      const targetTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(this.controllers.controls.target, tweenGroup)\n        .to({\n          x: targetPosition.x,\n          y: targetPosition.y,\n          z: targetPosition.z\n        }, CONFIG.demoAnimation.animationDuration)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n        .start();\n      \n      this.tweens.push(posTween, targetTween);\n    });\n  }\n  \n  /**\n   * 重置视图\n   * @returns {Promise} 动画完成的Promise\n   */\n  resetView() {\n    return new Promise(resolve => {\n          // 重置相机位置\n    const posTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(this.controllers.camera.position, tweenGroup)\n      .to({ \n        x: CONFIG.camera.position.x, \n        y: CONFIG.camera.position.y, \n        z: CONFIG.camera.position.z \n      }, CONFIG.demoAnimation.animationDuration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n      .onComplete(resolve)\n      .start();\n      \n          // 重置控制器目标点\n    const targetTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(this.controllers.controls.target, tweenGroup)\n      .to({ \n        x: CONFIG.camera.target.x, \n        y: CONFIG.camera.target.y, \n        z: CONFIG.camera.target.z \n      }, CONFIG.demoAnimation.animationDuration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n      .start();\n      \n      this.tweens.push(posTween, targetTween);\n    });\n  }\n\n  /**\n   * 设置自定义视图\n   * @param {Object} viewConfig - 视图配置\n   * @param {Object} viewConfig.position - 摄像头位置 {x, y, z}\n   * @param {Object} viewConfig.target - 观察目标 {x, y, z}\n   * @param {number} duration - 动画持续时间（可选）\n   * @returns {Promise} 动画完成的Promise\n   */\n  setCustomView(viewConfig, duration = CONFIG.demoAnimation.animationDuration) {\n    return new Promise(resolve => {\n      // 设置相机位置\n      const posTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(this.controllers.camera.position, tweenGroup)\n        .to({ \n          x: viewConfig.position.x, \n          y: viewConfig.position.y, \n          z: viewConfig.position.z \n        }, duration)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n        .onComplete(resolve)\n        .start();\n        \n      // 设置控制器目标点\n      const targetTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(this.controllers.controls.target, tweenGroup)\n        .to({ \n          x: viewConfig.target.x, \n          y: viewConfig.target.y, \n          z: viewConfig.target.z \n        }, duration)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Cubic.InOut)\n        .start();\n        \n      this.tweens.push(posTween, targetTween);\n    });\n  }\n\n  /**\n   * 创建连续电子束流\n   * @param {THREE.Vector3} startPos - 起始位置\n   * @param {THREE.Vector3} endPos - 结束位置\n   * @param {number} count - 粒子数量\n   * @param {number} duration - 动画持续时间\n   * @param {Function} onComplete - 完成回调\n   */\n  createElectronParticles(startPos, endPos, count = 10, duration = 2000, onComplete = null) {\n    // 使用配置中的发射频率，如果没有则使用默认值\n    const emissionRate = CONFIG.demoAnimation.electronParticle.emissionRate || 8;\n    const particleInterval = 1000 / emissionRate; // 根据发射频率计算间隔时间（毫秒）\n    \n    // 计算电子束的总路径长度，用于确定粒子的生命周期\n    const beamDistance = startPos.distanceTo(endPos);\n    const particleSpeed = beamDistance / 1500; // 粒子移动速度（单位/毫秒）\n    const particleLifetime = beamDistance / particleSpeed + 500; // 粒子生命周期稍长一些\n    \n    for (let i = 0; i < count; i++) {\n      // 使用 setTimeout 来实现真正的实时发射\n      const timeout = setTimeout(() => {\n        // 从对象池获取粒子，而不是创建新的 (性能优化)\n        const particle = this.particlePool.getParticle();\n        \n        // 设置初始位置\n        particle.position.copy(startPos);\n        \n        // 添加发射效果：粒子从小到正常大小\n        particle.scale.setScalar(0.1);\n        \n        // 添加到场景\n        this.scene.add(particle);\n        this.particles.push(particle);\n        \n        // 创建粒子出现动画\n        const appearTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(particle.scale, tweenGroup)\n          .to({ x: 1, y: 1, z: 1 }, 200)\n          .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.Out)\n          .start();\n        \n        this.tweens.push(appearTween);\n        \n        // 创建连续移动动画 - 粒子会继续向前运动而不是在endPos停止\n        const extendedEndPos = this.calculateExtendedEndPosition(startPos, endPos);\n        const moveDuration = particleLifetime;\n        \n        const tween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(particle.position, tweenGroup)\n          .to({\n            x: extendedEndPos.x,\n            y: extendedEndPos.y,\n            z: extendedEndPos.z\n          }, moveDuration)\n          .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Linear.None)\n          .onUpdate(() => {\n            // 当粒子接近荧光屏时，添加发光效果\n            const distanceToScreen = particle.position.distanceTo(endPos);\n            if (distanceToScreen < 0.1) {\n              // 在荧光屏上添加发光点\n              if (this.components && this.components.screen) {\n                this.components.screen.addGlowPoint(particle.position.clone());\n              }\n            }\n          })\n          .onComplete(() => {\n            // 最后一个粒子完成时触发回调\n            if (i === count - 1 && onComplete) {\n              onComplete();\n            }\n            \n            // 从场景中移除粒子\n            this.scene.remove(particle);\n            const index = this.particles.indexOf(particle);\n            if (index !== -1) {\n              this.particles.splice(index, 1);\n            }\n            \n            // 归还粒子到对象池，而不是销毁 (性能优化)\n            this.particlePool.releaseParticle(particle);\n          })\n          .start();\n        \n        this.tweens.push(tween);\n      }, i * particleInterval);\n      \n      // 保存timeout以便在停止动画时可以清除\n      this.stepCallbacks.push(timeout);\n    }\n  }\n  \n  /**\n   * 计算延伸的结束位置，让电子粒子看起来继续运动\n   * @param {THREE.Vector3} startPos - 起始位置\n   * @param {THREE.Vector3} endPos - 原始结束位置\n   * @returns {THREE.Vector3} 延伸的结束位置\n   */\n  calculateExtendedEndPosition(startPos, endPos) {\n    // 计算运动方向向量\n    const direction = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0().subVectors(endPos, startPos).normalize();\n    \n    // 将结束位置向前延伸，让粒子看起来继续运动\n    const extensionDistance = 2.0; // 延伸距离\n    const extendedEndPos = endPos.clone().add(direction.multiplyScalar(extensionDistance));\n    \n    return extendedEndPos;\n  }\n  \n  /**\n   * 创建连续电子束流（无限循环直到停止）\n   * @param {THREE.Vector3} startPos - 起始位置\n   * @param {THREE.Vector3} endPos - 结束位置\n   */\n  startContinuousElectronBeam(startPos, endPos) {\n    // 如果已经有连续电子束在运行，先停止它\n    this.stopContinuousElectronBeam();\n    \n    const emissionRate = CONFIG.demoAnimation.electronParticle.emissionRate || 8;\n    const particleInterval = 1000 / emissionRate;\n    \n    // 计算电子束参数\n    const beamDistance = startPos.distanceTo(endPos);\n    const particleSpeed = beamDistance / 1500; // 粒子移动速度\n    const particleLifetime = beamDistance / particleSpeed + 1000; // 延长生命周期\n    \n    // 创建连续发射的定时器\n    this.continuousBeamInterval = setInterval(() => {\n      if (!this.isPlaying) return; // 如果动画已停止，不再发射新粒子\n      \n      // 创建单个电子粒子 - 使用优化的材质\n      const geometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* SphereGeometry */.Gu$(CONFIG.demoAnimation.electronParticle.size, 6, 6);\n      const particleMat = this.particleMaterial.clone();\n      \n      // 确保粒子材质具有最佳可见性\n      particleMat.depthTest = true;  // 启用深度测试，确保被外壳正确遮挡\n      particleMat.depthWrite = false;\n      particleMat.blending = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* AdditiveBlending */.EZo;\n      \n      const particle = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(geometry, particleMat);\n      \n      // 设置粒子的渲染顺序，确保在极板之后渲染\n      particle.renderOrder = 10;\n      \n      // 设置初始位置\n      particle.position.copy(startPos);\n      particle.scale.setScalar(0.1);\n      \n      // 添加到场景\n      this.scene.add(particle);\n      this.particles.push(particle);\n      \n      // 粒子出现动画\n      const appearTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(particle.scale, tweenGroup)\n        .to({ x: 1, y: 1, z: 1 }, 200)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.Out)\n        .start();\n      \n      this.tweens.push(appearTween);\n      \n      // 获取当前电子束轨迹路径\n      const beamPath = this.getCurrentBeamPath(startPos, endPos);\n      const extendedEndPos = this.calculateExtendedEndPosition(startPos, endPos);\n      \n      // 粒子沿着电子束轨迹移动动画\n      const moveTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K({ progress: 0 }, tweenGroup)\n        .to({ progress: 1 }, particleLifetime)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Linear.None)\n        .onUpdate((obj) => {\n          // 根据进度沿着电子束路径移动粒子\n          const position = this.getPositionAlongBeamPath(beamPath, obj.progress, extendedEndPos);\n          particle.position.copy(position);\n          \n          // 当粒子接近荧光屏时，添加发光效果\n          const distanceToScreen = particle.position.distanceTo(endPos);\n          if (distanceToScreen < 0.1 && !particle.hasHitScreen) {\n            particle.hasHitScreen = true; // 防止重复触发\n            if (this.components && this.components.screen) {\n              this.components.screen.addGlowPoint(particle.position.clone());\n            }\n          }\n        })\n        .onComplete(() => {\n          // 移除粒子\n          this.scene.remove(particle);\n          const index = this.particles.indexOf(particle);\n          if (index !== -1) {\n            this.particles.splice(index, 1);\n          }\n          geometry.dispose();\n          particle.material.dispose();\n        })\n        .start();\n      \n      this.tweens.push(moveTween);\n      \n    }, particleInterval);\n  }\n  \n  /**\n   * 获取当前电子束路径\n   * @param {THREE.Vector3} startPos - 起始位置\n   * @param {THREE.Vector3} endPos - 结束位置\n   * @returns {Array<THREE.Vector3>} 电子束路径点数组\n   */\n  getCurrentBeamPath(startPos, endPos) {\n    // 如果有电子束组件且有当前路径，使用实际的电子束路径\n    if (this.components && this.components.electronBeam && this.components.electronBeam.beamPoints && this.components.electronBeam.beamPoints.length > 0) {\n      return this.components.electronBeam.beamPoints;\n    }\n    \n    // 否则生成简单的直线路径\n    const pathPoints = [];\n    const numSegments = 20;\n    \n    for (let i = 0; i <= numSegments; i++) {\n      const t = i / numSegments;\n      const point = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0().lerpVectors(startPos, endPos, t);\n      pathPoints.push(point);\n    }\n    \n    return pathPoints;\n  }\n  \n  /**\n   * 根据进度获取沿电子束路径的位置\n   * @param {Array<THREE.Vector3>} beamPath - 电子束路径点数组\n   * @param {number} progress - 进度 (0-1)\n   * @param {THREE.Vector3} extendedEndPos - 延伸的结束位置\n   * @returns {THREE.Vector3} 当前位置\n   */\n  getPositionAlongBeamPath(beamPath, progress, extendedEndPos) {\n    if (!beamPath || beamPath.length === 0) {\n      // 如果没有路径，返回起始位置\n      return new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0();\n    }\n    \n    if (beamPath.length === 1) {\n      return beamPath[0].clone();\n    }\n    \n    // 如果进度超过1，继续向延伸位置移动\n    if (progress > 1) {\n      const lastPoint = beamPath[beamPath.length - 1];\n      const overProgress = progress - 1;\n      return lastPoint.clone().lerp(extendedEndPos, overProgress);\n    }\n    \n    // 在路径上插值\n    const scaledProgress = progress * (beamPath.length - 1);\n    const segmentIndex = Math.floor(scaledProgress);\n    const segmentProgress = scaledProgress - segmentIndex;\n    \n    if (segmentIndex >= beamPath.length - 1) {\n      return beamPath[beamPath.length - 1].clone();\n    }\n    \n    const startPoint = beamPath[segmentIndex];\n    const endPoint = beamPath[segmentIndex + 1];\n    \n    return startPoint.clone().lerp(endPoint, segmentProgress);\n  }\n  \n  /**\n   * 停止连续电子束流\n   */\n  stopContinuousElectronBeam() {\n    if (this.continuousBeamInterval) {\n      clearInterval(this.continuousBeamInterval);\n      this.continuousBeamInterval = null;\n    }\n  }\n  \n  /**\n   * 模拟电压变化\n   * @param {string} direction - 方向（'horizontal' 或 'vertical'）\n   * @param {number} targetVoltage - 目标电压\n   * @param {number} duration - 动画持续时间\n   */\n  simulateVoltageChange(direction, targetVoltage, duration = 1000) {\n    const deflection = CONFIG.deflection[direction];\n    if (!deflection) return;\n    \n    // 创建电压变化动画\n    const tween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K({ voltage: deflection.voltage }, tweenGroup)\n      .to({ voltage: targetVoltage }, duration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Quadratic.InOut)\n      .onUpdate(obj => {\n        // 更新电压值\n        deflection.voltage = obj.voltage;\n        \n        // 更新电子束\n        if (this.controllers.onDeflectionChange) {\n          this.controllers.onDeflectionChange(CONFIG.deflection);\n        }\n      })\n      .start();\n    \n    this.tweens.push(tween);\n  }\n  \n  /**\n   * 设置波形参数\n   * @param {Object} params - 波形参数\n   */\n  setWaveformParams(params) {\n    Object.assign(CONFIG.waveform, params);\n    \n    // 更新波形\n    if (this.controllers.onWaveformChange) {\n      this.controllers.onWaveformChange(CONFIG.waveform);\n    }\n  }\n  \n  /**\n   * 保存原始参数\n   */\n  saveOriginalParams() {\n    this.originalParams = {\n      deflection: {\n        horizontal: { voltage: CONFIG.deflection.horizontal.voltage },\n        vertical: { voltage: CONFIG.deflection.vertical.voltage }\n      },\n      waveform: { ...CONFIG.waveform },\n      beam: {\n        intensity: CONFIG.beam.intensity\n      }\n    };\n  }\n  \n  /**\n   * 保存GUI面板状态并折叠所有面板\n   */\n  collapseGuiFolders() {\n    // 获取GUI控制器\n    const guiController = this.controllers.guiController;\n    if (!guiController || !guiController.gui) {\n      return;\n    }\n    \n    // 保存原始状态\n    this.originalGuiState = {};\n    \n    // 遍历所有文件夹并保存其展开状态，然后折叠\n    guiController.gui.__folders && Object.keys(guiController.gui.__folders).forEach(folderName => {\n      const folder = guiController.gui.__folders[folderName];\n      if (folder) {\n        // 保存原始展开状态\n        this.originalGuiState[folderName] = folder.closed;\n        // 折叠面板\n        folder.close();\n      }\n    });\n    \n    console.log('GUI面板已折叠，保存的原始状态:', this.originalGuiState);\n  }\n  \n  /**\n   * 恢复GUI面板状态\n   */\n  restoreGuiFolders() {\n    // 获取GUI控制器\n    const guiController = this.controllers.guiController;\n    if (!guiController || !guiController.gui || !this.originalGuiState) {\n      return;\n    }\n    \n    // 恢复所有文件夹的原始展开状态\n    Object.keys(this.originalGuiState).forEach(folderName => {\n      const folder = guiController.gui.__folders[folderName];\n      if (folder) {\n        if (this.originalGuiState[folderName]) {\n          folder.close();\n        } else {\n          folder.open();\n        }\n      }\n    });\n    \n    console.log('GUI面板状态已恢复');\n    this.originalGuiState = null;\n  }\n  \n  /**\n   * 重置所有参数\n   */\n  resetAllParams() {\n    if (!this.originalParams) return;\n    \n    // 恢复偏转参数\n    CONFIG.deflection.horizontal.voltage = this.originalParams.deflection.horizontal.voltage;\n    CONFIG.deflection.vertical.voltage = this.originalParams.deflection.vertical.voltage;\n    \n    // 恢复波形参数\n    Object.assign(CONFIG.waveform, this.originalParams.waveform);\n    \n    // 恢复电子束参数\n    CONFIG.beam.intensity = this.originalParams.beam.intensity;\n    \n    // 注意：不在这里重置爆炸效果，因为演示结束时已经通过explodeBtn.click()处理了\n    // 避免重复操作导致状态不一致\n    \n    // 重置CRT外壳状态\n    this.resetCRTShell();\n    \n    // 更新控制器\n    if (this.controllers.onDeflectionChange) {\n      this.controllers.onDeflectionChange(CONFIG.deflection);\n    }\n    \n    if (this.controllers.onWaveformChange) {\n      this.controllers.onWaveformChange(CONFIG.waveform);\n    }\n    \n    if (this.controllers.onBeamChange) {\n      this.controllers.onBeamChange(CONFIG.beam);\n    }\n  }\n  \n  /**\n   * 重置CRT外壳状态\n   * 恢复外壳的可见性和各组件的分解状态\n   */\n  resetCRTShell() {\n    console.log('重置CRT外壳状态');\n    \n    const crtShell = this.components.crtShell;\n    if (!crtShell) {\n      console.warn('找不到CRTShell组件');\n      return;\n    }\n    \n    const shellGroup = crtShell.getShell();\n    if (!shellGroup) {\n      console.warn('找不到CRT外壳组');\n      return;\n    }\n    \n    // 1. 恢复外壳可见性\n    shellGroup.visible = CONFIG.shell.visible;\n    console.log('恢复外壳可见性:', CONFIG.shell.visible);\n    \n    // 2. 重置各组件的分解状态为合并状态\n    console.log('重置超椭圆分解状态');\n    crtShell.toggleSuperellipseExplode(false);\n    \n    console.log('重置旋转曲线连接分解状态');\n    crtShell.toggleConnectionExplode(false);\n    \n    console.log('重置Cylinder2分解状态');\n    crtShell.toggleCylinder2Explode(false);\n    \n    // 3. 恢复所有材质的透明度\n    this.restoreCRTShellMaterials(shellGroup);\n    \n    console.log('CRT外壳状态重置完成');\n  }\n  \n  /**\n   * 恢复CRT外壳材质的透明度\n   * @param {THREE.Group} shellGroup - CRT外壳组\n   */\n  restoreCRTShellMaterials(shellGroup) {\n    console.log('恢复CRT外壳材质透明度');\n    \n    // 遍历所有子对象，恢复材质透明度\n    shellGroup.traverse((child) => {\n      if (child.material) {\n        const materials = Array.isArray(child.material) ? child.material : [child.material];\n        \n        materials.forEach(material => {\n          // 恢复原始透明度\n          material.opacity = CONFIG.shell.opacity;\n          material.transparent = CONFIG.shell.opacity < 1.0;\n        });\n      }\n    });\n  }\n  \n  /**\n   * 清除所有粒子\n   */\n  clearAllParticles() {\n    this.particles.forEach(particle => {\n      this.scene.remove(particle);\n      particle.geometry.dispose();\n      particle.material.dispose();\n    });\n    this.particles = [];\n  }\n  \n  /**\n   * 设置极板不透明度\n   * @param {number} opacity - 不透明度值 (0-1)\n   */\n  setPlateOpacity(opacity) {\n    // 如果还没有保存原始不透明度，先保存\n    if (!this.originalPlateOpacities) {\n      this.originalPlateOpacities = {};\n      \n      // 保存垂直偏转板的原始不透明度\n      if (this.components.v1 && this.components.v1.material) {\n        this.originalPlateOpacities.v1 = this.components.v1.material.opacity || 1.0;\n      }\n      if (this.components.v2 && this.components.v2.material) {\n        this.originalPlateOpacities.v2 = this.components.v2.material.opacity || 1.0;\n      }\n      \n      // 保存水平偏转板的原始不透明度\n      if (this.components.h1 && this.components.h1.material) {\n        this.originalPlateOpacities.h1 = this.components.h1.material.opacity || 1.0;\n      }\n      if (this.components.h2 && this.components.h2.material) {\n        this.originalPlateOpacities.h2 = this.components.h2.material.opacity || 1.0;\n      }\n    }\n    \n    // 设置极板的新不透明度 - 优化透明度渲染\n    const plates = [this.components.v1, this.components.v2, this.components.h1, this.components.h2];\n    plates.forEach(plate => {\n      if (plate && plate.material) {\n        plate.material.transparent = true;\n        plate.material.opacity = opacity;\n        plate.material.depthWrite = false; // 禁用深度写入，避免遮挡电子束\n        plate.material.side = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* DoubleSide */.$EB; // 双面渲染，确保各个角度都能看到\n        plate.material.needsUpdate = true;\n        \n        // 调整渲染顺序，让极板在电子束之前渲染\n        plate.renderOrder = -1;\n      }\n    });\n  }\n  \n  /**\n   * 恢复极板原始不透明度\n   */\n  restorePlateOpacity() {\n    if (!this.originalPlateOpacities) {\n      return;\n    }\n    \n    // 恢复所有极板的原始不透明度和渲染属性\n    const plates = [\n      { component: this.components.v1, key: 'v1' },\n      { component: this.components.v2, key: 'v2' },\n      { component: this.components.h1, key: 'h1' },\n      { component: this.components.h2, key: 'h2' }\n    ];\n    \n    plates.forEach(({ component, key }) => {\n      if (component && component.material) {\n        component.material.opacity = this.originalPlateOpacities[key];\n        component.material.transparent = this.originalPlateOpacities[key] < 1.0;\n        component.material.depthWrite = true; // 恢复深度写入\n        component.material.side = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* FrontSide */.hB5; // 恢复单面渲染\n        component.material.needsUpdate = true;\n        \n        // 恢复渲染顺序\n        component.renderOrder = 0;\n      }\n    });\n    \n    // 清除保存的原始值\n    this.originalPlateOpacities = null;\n  }\n\n  /**\n   * 更新动画\n   */\n  update() {\n    // 更新所有tweens\n    this.tweens.forEach(tween => {\n      if (tween && tween.isPlaying) {\n        tween.update();\n      }\n    });\n    \n    // 清理已完成的tweens\n    this.tweens = this.tweens.filter(tween => tween && tween.isPlaying);\n    \n    // 更新TWEEN（使用新的 Group API）\n    tweenGroup.update();\n  }\n  \n  /**\n   * 获取对象池性能统计信息\n   * @returns {Object} 对象池状态和性能统计\n   */\n  getParticlePoolStatus() {\n    if (!this.particlePool) {\n      return null;\n    }\n    return this.particlePool.getStatus();\n  }\n  \n  /**\n   * 打印对象池详细状态（调试用）\n   */\n  printParticlePoolStatus() {\n    if (this.particlePool) {\n      this.particlePool.printStatus();\n    }\n  }\n  \n  /**\n   * CRT外壳分解和消失效果\n   */\n  startCRTShellDisappear() {\n    console.log('开始CRT外壳分解和消失效果');\n    \n    const crtShell = this.components.crtShell;\n    if (!crtShell) {\n      console.warn('找不到CRTShell组件');\n      return;\n    }\n    \n    // 第一阶段：使用各组件自带的分解动画\n    this.explodeCRTShellComponents(crtShell);\n    \n    // 第二阶段：在分解动画完成后开始渐变消失（1.5秒后开始，持续1.5秒）\n    setTimeout(() => {\n      const shellGroup = crtShell.getShell();\n      if (shellGroup) {\n        this.fadeCRTShell(shellGroup, 1500);\n      }\n    }, 1500); // 等待分解动画完成\n  }\n  \n  /**\n   * 使用各组件自带的分解动画分解CRT外壳\n   * @param {CRTShell} crtShell - CRT外壳组件\n   */\n  explodeCRTShellComponents(crtShell) {\n    console.log('使用组件自带的分解动画分解CRT外壳');\n    \n    // 分解超椭圆组件（带延迟以产生层次感）\n    setTimeout(() => {\n      console.log('分解超椭圆组件');\n      crtShell.toggleSuperellipseExplode(true);\n    }, 0);\n    \n    // 分解旋转曲线连接组件\n    setTimeout(() => {\n      console.log('分解旋转曲线连接组件');\n      crtShell.toggleConnectionExplode(true);\n    }, 200); // 200ms延迟\n    \n    // 分解Cylinder2组件\n    setTimeout(() => {\n      console.log('分解Cylinder2组件');\n      crtShell.toggleCylinder2Explode(true);\n    }, 400); // 400ms延迟\n  }\n  \n  /**\n   * CRT外壳渐变消失\n   * @param {THREE.Group} shellGroup - CRT外壳组\n   * @param {number} duration - 消失持续时间\n   */\n  fadeCRTShell(shellGroup, duration) {\n    console.log('CRT外壳开始渐变消失');\n    \n    // 收集所有外壳材质\n    const materialsToFade = [];\n    shellGroup.traverse((child) => {\n      if (child.material) {\n        if (Array.isArray(child.material)) {\n          materialsToFade.push(...child.material);\n        } else {\n          materialsToFade.push(child.material);\n        }\n      }\n    });\n    \n    // 记录原始透明度并设置透明属性\n    const originalOpacities = materialsToFade.map(material => {\n      const originalOpacity = material.opacity;\n      const originalTransparent = material.transparent;\n      \n      // 确保材质支持透明\n      material.transparent = true;\n      \n      return {\n        material: material,\n        originalOpacity: originalOpacity,\n        originalTransparent: originalTransparent\n      };\n    });\n    \n    // 创建渐变消失动画\n    const fadeOutTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K({ opacity: 1.0 }, tweenGroup)\n      .to({ opacity: 0.0 }, duration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Quadratic.InOut)\n      .onUpdate(function(obj) {\n        materialsToFade.forEach(material => {\n          material.opacity = obj.opacity;\n        });\n      })\n      .onComplete(() => {\n        console.log('CRT外壳消失完成，隐藏外壳');\n        // 完全隐藏外壳\n        shellGroup.visible = false;\n      })\n      .start();\n    \n    this.tweens.push(fadeOutTween);\n  }\n  \n  /**\n   * 开始扩张并渐变消失效果\n   * 让模型继续向外扩张，然后在2秒内渐变消失\n   */\n  startExpandAndFadeOut() {\n    console.log('开始扩张并渐变消失效果');\n    \n    // 获取所有需要处理的组件\n    const crtShell = this.components.crtShell;\n    if (!crtShell) {\n      console.warn('找不到CRTShell组件');\n      return;\n    }\n    \n    // 第一阶段：继续扩张（持续1秒）\n    this.continueExpansion(crtShell, 1000);\n    \n    // 第二阶段：开始渐变消失（1秒后开始，持续2秒）\n    setTimeout(() => {\n      this.startFadeOut(crtShell, 2000);\n    }, 1000);\n  }\n  \n  /**\n   * 继续扩张效果\n   * @param {Object} crtShell - CRTShell组件\n   * @param {number} duration - 扩张持续时间\n   */\n  continueExpansion(crtShell, duration) {\n    console.log('继续扩张效果');\n    \n    // 直接操作所有组件的位置，让它们继续向外扩张\n    Object.entries(this.components).forEach(([key, component]) => {\n      if (!component || !component.position) return;\n      \n      // 计算从原点到当前位置的方向\n      const currentPos = component.position.clone();\n      const direction = currentPos.clone().normalize();\n      \n      // 如果方向为零向量，使用默认方向\n      if (direction.length() === 0) {\n        direction.set(1, 0, 0);\n      }\n      \n      // 计算目标位置（继续向外扩张1.5倍）\n      const targetPos = currentPos.clone().add(direction.multiplyScalar(2.0));\n      \n      // 创建扩张动画\n      const expandTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(component.position, tweenGroup)\n        .to({\n          x: targetPos.x,\n          y: targetPos.y,\n          z: targetPos.z\n        }, duration)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Quadratic.Out)\n        .start();\n        \n      this.tweens.push(expandTween);\n    });\n  }\n  \n  /**\n   * 开始渐变消失效果\n   * @param {Object} crtShell - CRTShell组件\n   * @param {number} duration - 渐变持续时间\n   */\n  startFadeOut(crtShell, duration) {\n    console.log('开始渐变消失效果');\n    \n    // 收集所有需要渐变的材质\n    const materialsToFade = [];\n    \n    // 遍历所有组件，收集材质\n    Object.entries(this.components).forEach(([key, component]) => {\n      if (component && component.material) {\n        materialsToFade.push(component.material);\n      } else if (component && component.traverse) {\n        // 对于组对象，遍历所有子对象\n        component.traverse((child) => {\n          if (child.material) {\n            materialsToFade.push(child.material);\n          }\n        });\n      }\n    });\n    \n    // 记录原始透明度\n    const originalOpacities = materialsToFade.map(material => ({\n      material: material,\n      originalOpacity: material.opacity,\n      originalTransparent: material.transparent\n    }));\n    \n    // 创建渐变动画\n    const fadeOutTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K({ opacity: 1.0 }, tweenGroup)\n      .to({ opacity: 0.0 }, duration)\n      .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Quadratic.InOut)\n      .onUpdate((object) => {\n        // 更新所有材质的透明度\n        originalOpacities.forEach(({ material, originalOpacity }) => {\n          material.transparent = true;\n          material.opacity = originalOpacity * object.opacity;\n          material.needsUpdate = true;\n        });\n      })\n      .onComplete(() => {\n        console.log('渐变消失完成，隐藏外壳');\n        // 动画完成后，隐藏外壳\n        this.hideShellCompletely();\n      })\n      .start();\n      \n    this.tweens.push(fadeOutTween);\n  }\n  \n  \n  /**\n   * 完全隐藏外壳\n   */\n  hideShellCompletely() {\n    console.log('完全隐藏外壳');\n    \n    // 通过GUI控制器隐藏外壳\n    const shellCheckboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n    let shellCheckbox = null;\n    \n    // 查找对应的复选框\n    shellCheckboxes.forEach(checkbox => {\n      const label = checkbox.closest('li')?.querySelector('.property-name');\n      if (label && label.textContent.includes('显示外壳')) {\n        shellCheckbox = checkbox;\n      }\n    });\n    \n    if (shellCheckbox && shellCheckbox.checked) {\n      console.log('通过复选框隐藏外壳');\n      shellCheckbox.click();\n    } else {\n      // 如果找不到复选框，直接通过CONFIG修改\n      console.log('直接通过CONFIG隐藏外壳');\n      if (window.CONFIG) {\n        window.CONFIG.shell.visible = false;\n        // 触发外壳更新\n        if (this.controllers && this.controllers.onShellChange) {\n          this.controllers.onShellChange(window.CONFIG.shell);\n        }\n      }\n    }\n  }\n} \n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\geometry\\RotationCurveGeometry.js\n\n\n/**\n * 旋转曲线几何体生成器\n * 基于数学公式生成平滑连接的旋转曲面\n * 支持G1和G2连续性\n */\nclass RotationCurveGeometry {\n  \n  /**\n   * 构造函数\n   * @param {number} r1 - 小半径\n   * @param {number} r2 - 大半径  \n   * @param {number} length - 过渡长度\n   * @param {string} curveType - 曲线类型 ('G1' 或 'G2')\n   * @param {number} segments - 分段数量\n   * @param {number} radialSegments - 径向分段数\n   */\n  constructor(r1, r2, length, curveType = 'G2', segments = 50, radialSegments = 32) {\n    this.r1 = r1;\n    this.r2 = r2;\n    this.length = length;\n    this.curveType = curveType;\n    this.segments = segments;\n    this.radialSegments = radialSegments;\n    \n    this.geometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY();\n    this.generateGeometry();\n  }\n  \n  /**\n   * G1连续性曲线 (零斜率端点，够顺滑)\n   * r(z) = r1 + (r2 - r1) * (3s² - 2s³)\n   * 其中 s = z/L ∈ [0,1]\n   */\n  calculateG1Radius(s) {\n    const t = 3 * s * s - 2 * s * s * s;\n    return this.r1 + (this.r2 - this.r1) * t;\n  }\n  \n  /**\n   * G2连续性曲线 (连曲率也连续，更像\"银白金属\"般丝滑)\n   * r(z) = r1 + (r2 - r1) * (10s³ - 15s⁴ + 6s⁵)\n   * 其中 s = z/L ∈ [0,1]\n   */\n  calculateG2Radius(s) {\n    const s3 = s * s * s;\n    const s4 = s3 * s;\n    const s5 = s4 * s;\n    const t = 10 * s3 - 15 * s4 + 6 * s5;\n    return this.r1 + (this.r2 - this.r1) * t;\n  }\n  \n  /**\n   * 根据曲线类型计算半径\n   */\n  calculateRadius(s) {\n    switch (this.curveType) {\n      case 'G1':\n        return this.calculateG1Radius(s);\n      case 'G2':\n        return this.calculateG2Radius(s);\n      default:\n        return this.calculateG2Radius(s); // 默认使用G2\n    }\n  }\n  \n  /**\n   * 生成旋转曲面几何体\n   */\n  generateGeometry() {\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n    \n    // 生成顶点\n    for (let i = 0; i <= this.segments; i++) {\n      const s = i / this.segments; // 参数 s ∈ [0,1]\n      const z = s * this.length;   // Z坐标\n      const radius = this.calculateRadius(s);\n      \n      // 计算法向量需要的导数\n      const deltaS = 0.001;\n      const r_next = this.calculateRadius(Math.min(1, s + deltaS));\n      const r_prev = this.calculateRadius(Math.max(0, s - deltaS));\n      const dr_ds = (r_next - r_prev) / (2 * deltaS);\n      const dr_dz = dr_ds / this.length;\n      \n      for (let j = 0; j <= this.radialSegments; j++) {\n        const angle = (j / this.radialSegments) * Math.PI * 2;\n        \n        // 计算顶点位置\n        const x = Math.cos(angle) * radius;\n        const y = Math.sin(angle) * radius;\n        \n        vertices.push(x, y, z);\n        \n        // 计算法向量\n        // 对于旋转曲面，法向量 = (-dr/dz * cos(θ), -dr/dz * sin(θ), 1) 归一化\n        const nx = -dr_dz * Math.cos(angle);\n        const ny = -dr_dz * Math.sin(angle);\n        const nz = 1;\n        const length_n = Math.sqrt(nx * nx + ny * ny + nz * nz);\n        \n        normals.push(nx / length_n, ny / length_n, nz / length_n);\n        \n        // UV坐标\n        uvs.push(j / this.radialSegments, s);\n      }\n    }\n    \n    // 生成索引\n    for (let i = 0; i < this.segments; i++) {\n      for (let j = 0; j < this.radialSegments; j++) {\n        const a = i * (this.radialSegments + 1) + j;\n        const b = a + this.radialSegments + 1;\n        const c = a + 1;\n        const d = b + 1;\n        \n        // 两个三角形组成一个四边形\n        indices.push(a, b, c);\n        indices.push(b, d, c);\n      }\n    }\n    \n    // 设置几何体属性\n    this.geometry.setIndex(indices);\n    this.geometry.setAttribute('position', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(vertices, 3));\n    this.geometry.setAttribute('normal', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(normals, 3));\n    this.geometry.setAttribute('uv', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(uvs, 2));\n    \n    // 计算边界球和边界框\n    this.geometry.computeBoundingSphere();\n    this.geometry.computeBoundingBox();\n  }\n  \n  /**\n   * 获取生成的几何体\n   */\n  getGeometry() {\n    return this.geometry;\n  }\n  \n  /**\n   * 创建扇形片段几何体\n   * @param {number} segmentIndex - 扇形索引 (0-3)\n   * @param {number} sectorCount - 总扇形数量 (通常是4)\n   * @returns {THREE.BufferGeometry} 扇形片段几何体\n   */\n  createSectorGeometry(segmentIndex, sectorCount = 4) {\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n    \n    // 计算角度范围\n    const anglePerSector = (Math.PI * 2) / sectorCount;\n    const startAngle = segmentIndex * anglePerSector;\n    const endAngle = (segmentIndex + 1) * anglePerSector;\n    \n    // 计算每个扇形的径向分段数\n    const radialSegmentsPerSector = Math.max(8, Math.floor(this.radialSegments / sectorCount));\n    \n    // 生成扇形顶点\n    for (let i = 0; i <= this.segments; i++) {\n      const s = i / this.segments; // 参数 s ∈ [0,1]\n      const z = s * this.length;   // Z坐标\n      const radius = this.calculateRadius(s);\n      \n      // 计算法向量需要的导数\n      const deltaS = 0.001;\n      const r_next = this.calculateRadius(Math.min(1, s + deltaS));\n      const r_prev = this.calculateRadius(Math.max(0, s - deltaS));\n      const dr_ds = (r_next - r_prev) / (2 * deltaS);\n      const dr_dz = dr_ds / this.length;\n      \n      for (let j = 0; j <= radialSegmentsPerSector; j++) {\n        // 在扇形角度范围内分布\n        const t = j / radialSegmentsPerSector;\n        const angle = startAngle + t * (endAngle - startAngle);\n        \n        // 计算顶点位置\n        const x = Math.cos(angle) * radius;\n        const y = Math.sin(angle) * radius;\n        \n        vertices.push(x, y, z);\n        \n        // 计算法向量\n        const nx = -dr_dz * Math.cos(angle);\n        const ny = -dr_dz * Math.sin(angle);\n        const nz = 1;\n        const length_n = Math.sqrt(nx * nx + ny * ny + nz * nz);\n        \n        normals.push(nx / length_n, ny / length_n, nz / length_n);\n        \n        // UV坐标\n        uvs.push(t, s);\n      }\n    }\n    \n    // 生成索引\n    for (let i = 0; i < this.segments; i++) {\n      for (let j = 0; j < radialSegmentsPerSector; j++) {\n        const a = i * (radialSegmentsPerSector + 1) + j;\n        const b = a + radialSegmentsPerSector + 1;\n        const c = a + 1;\n        const d = b + 1;\n        \n        // 两个三角形组成一个四边形\n        indices.push(a, b, c);\n        indices.push(b, d, c);\n      }\n    }\n    \n    // 创建新的几何体\n    const sectorGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY();\n    sectorGeometry.setIndex(indices);\n    sectorGeometry.setAttribute('position', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(vertices, 3));\n    sectorGeometry.setAttribute('normal', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(normals, 3));\n    sectorGeometry.setAttribute('uv', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(uvs, 2));\n    \n    // 计算边界球和边界框\n    sectorGeometry.computeBoundingSphere();\n    sectorGeometry.computeBoundingBox();\n    \n    return sectorGeometry;\n  }\n\n  /**\n   * 销毁几何体资源\n   */\n  dispose() {\n    if (this.geometry) {\n      this.geometry.dispose();\n    }\n  }\n}\n\n/**\n * 便捷函数：创建旋转曲线几何体\n */\nfunction createRotationCurveGeometry(r1, r2, length, curveType = 'G2', segments = 50, radialSegments = 32) {\n  const generator = new RotationCurveGeometry(r1, r2, length, curveType, segments, radialSegments);\n  return generator.getGeometry();\n}\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\materials\\UnifiedComponentMaterial.js\n\n\n\n/**\n * 统一组件材质管理器\n * 为cylinder2、rotationCurveConnection和superellipseTransition提供统一的材质管理\n * 使其颜色和材质符合示波器内部的金属材质风格\n */\nclass UnifiedComponentMaterial {\n  constructor() {\n    this.textureLoader = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* TextureLoader */.Tap();\n    this.materialCache = new Map();\n    this.textures = {};\n    \n    // 统一的材质配置（基于示波器内部金属材质）\n    this.unifiedConfig = {\n      color: 0xF0F0F0,        // 银白色金属色\n      metalness: 0.6,         // 金属度\n      roughness: 0.3,         // 粗糙度\n      opacity: 1.0,           // 透明度 - 修改为完全不透明\n      envMapIntensity: 1.0,   // 环境贴图强度\n      side: D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* DoubleSide */.$EB, // 双面渲染\n      depthWrite: true,       // 启用深度写入（不透明物体）\n      transparent: false      // 禁用透明\n    };\n  }\n\n  /**\n   * 初始化统一材质系统\n   * @returns {Promise} 返回Promise，在初始化完成后解析\n   */\n  async initialize() {\n    console.log('🎨 正在初始化统一组件材质系统...');\n    \n    try {\n      // 加载金属贴图\n      await this.loadMetalTextures();\n      \n      // 预创建常用材质\n      this.createStandardMaterial();\n      this.createExplodedMaterial();\n      this.createTransitionMaterial();\n      \n      console.log('✅ 统一组件材质系统初始化完成');\n      return true;\n    } catch (error) {\n      console.warn('⚠️ 统一材质系统初始化失败，使用无贴图材质:', error);\n      this.createFallbackMaterials();\n      return false;\n    }\n  }\n\n  /**\n   * 加载金属贴图\n   * @returns {Promise} 贴图加载Promise\n   */\n  async loadMetalTextures() {\n    const metalConfig = CONFIG.materials.metal;\n    const loadPromises = [];\n\n    if (metalConfig.textures && metalConfig.textures.map) {\n      loadPromises.push(this.loadTexture('metalMap', metalConfig.textures.map));\n    }\n\n    if (metalConfig.textures && metalConfig.textures.normalMap) {\n      loadPromises.push(this.loadTexture('metalNormal', metalConfig.textures.normalMap));\n    }\n\n    if (metalConfig.textures && metalConfig.textures.roughnessMap) {\n      loadPromises.push(this.loadTexture('metalRoughness', metalConfig.textures.roughnessMap));\n    }\n\n    if (metalConfig.textures && metalConfig.textures.metalnessMap) {\n      loadPromises.push(this.loadTexture('metalMetalness', metalConfig.textures.metalnessMap));\n    }\n\n    await Promise.all(loadPromises);\n  }\n\n  /**\n   * 加载单个贴图\n   * @param {string} name - 贴图名称\n   * @param {string} path - 贴图路径\n   * @returns {Promise} 贴图加载Promise\n   */\n  loadTexture(name, path) {\n    return new Promise((resolve, reject) => {\n      this.textureLoader.load(\n        path,\n        (texture) => {\n          // 设置贴图参数\n          texture.wrapS = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* RepeatWrapping */.GJx;\n          texture.wrapT = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* RepeatWrapping */.GJx;\n          texture.flipY = false;\n          \n          this.textures[name] = texture;\n          console.log(`📸 贴图加载成功: ${name}`);\n          resolve(texture);\n        },\n        undefined,\n        (error) => {\n          console.warn(`❌ 贴图加载失败: ${name}`, error);\n          reject(error);\n        }\n      );\n    });\n  }\n\n  /**\n   * 创建标准统一材质\n   */\n  createStandardMaterial() {\n    const materialProps = {\n      ...this.unifiedConfig\n    };\n\n    // 添加贴图（如果有）\n    if (this.textures.metalMap) {\n      materialProps.map = this.textures.metalMap;\n    }\n\n    if (this.textures.metalNormal) {\n      materialProps.normalMap = this.textures.metalNormal;\n      materialProps.normalScale = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(1, 1);\n    }\n\n    if (this.textures.metalRoughness) {\n      materialProps.roughnessMap = this.textures.metalRoughness;\n    }\n\n    if (this.textures.metalMetalness) {\n      materialProps.metalnessMap = this.textures.metalMetalness;\n    }\n\n    const material = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j(materialProps);\n    this.materialCache.set('standard', material);\n    \n    console.log('🔧 标准统一材质创建完成');\n  }\n\n  /**\n   * 创建爆炸分解效果材质（稍微透明一些）\n   */\n  createExplodedMaterial() {\n    const materialProps = {\n      ...this.unifiedConfig,\n      opacity: 1.0,         // 爆炸材质也保持不透明\n      transparent: false,   // 禁用透明\n      depthWrite: true      // 启用深度写入\n    };\n\n    // 添加贴图（如果有）\n    if (this.textures.metalMap) {\n      materialProps.map = this.textures.metalMap;\n    }\n\n    if (this.textures.metalNormal) {\n      materialProps.normalMap = this.textures.metalNormal;\n      materialProps.normalScale = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(1, 1);\n    }\n\n    if (this.textures.metalRoughness) {\n      materialProps.roughnessMap = this.textures.metalRoughness;\n    }\n\n    if (this.textures.metalMetalness) {\n      materialProps.metalnessMap = this.textures.metalMetalness;\n    }\n\n    const material = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j(materialProps);\n    this.materialCache.set('exploded', material);\n    \n    console.log('💥 爆炸材质创建完成');\n  }\n\n  /**\n   * 创建过渡材质（用于SuperellipseTransition）\n   */\n  createTransitionMaterial() {\n    const materialProps = {\n      ...this.unifiedConfig,\n      opacity: 1.0,         // 过渡材质也保持不透明\n      transparent: false,   // 禁用透明\n      depthWrite: true      // 启用深度写入\n    };\n\n    // 添加贴图（如果有）\n    if (this.textures.metalMap) {\n      materialProps.map = this.textures.metalMap;\n    }\n\n    if (this.textures.metalNormal) {\n      materialProps.normalMap = this.textures.metalNormal;\n      materialProps.normalScale = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(1, 1);\n    }\n\n    if (this.textures.metalRoughness) {\n      materialProps.roughnessMap = this.textures.metalRoughness;\n    }\n\n    if (this.textures.metalMetalness) {\n      materialProps.metalnessMap = this.textures.metalMetalness;\n    }\n\n    const material = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j(materialProps);\n    this.materialCache.set('transition', material);\n    \n    console.log('🔄 过渡材质创建完成');\n  }\n\n  /**\n   * 创建备用材质（无贴图版本）\n   */\n  createFallbackMaterials() {\n    console.log('🚧 创建备用统一材质（无贴图）');\n    \n    // 标准材质\n    const standardMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j(this.unifiedConfig);\n    this.materialCache.set('standard', standardMaterial);\n    \n    // 爆炸材质\n    const explodedMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j({\n      ...this.unifiedConfig,\n      opacity: 1.0,\n      transparent: false,\n      depthWrite: true\n    });\n    this.materialCache.set('exploded', explodedMaterial);\n    \n    // 过渡材质\n    const transitionMaterial = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j({\n      ...this.unifiedConfig,\n      opacity: 1.0,\n      transparent: false,\n      depthWrite: true\n    });\n    this.materialCache.set('transition', transitionMaterial);\n  }\n\n  /**\n   * 获取指定类型的材质\n   * @param {string} type - 材质类型 ('standard', 'exploded', 'transition')\n   * @returns {THREE.Material} 材质对象\n   */\n  getMaterial(type = 'standard') {\n    if (!this.materialCache.has(type)) {\n      console.warn(`⚠️ 未找到材质类型: ${type}，返回标准材质`);\n      return this.materialCache.get('standard');\n    }\n    return this.materialCache.get(type);\n  }\n\n  /**\n   * 创建自定义材质（基于统一配置）\n   * @param {Object} customProps - 自定义属性\n   * @returns {THREE.Material} 自定义材质\n   */\n  createCustomMaterial(customProps = {}) {\n    const materialProps = {\n      ...this.unifiedConfig,\n      ...customProps\n    };\n\n    // 添加贴图（如果有且用户没有覆盖）\n    if (this.textures.metalMap && !customProps.map) {\n      materialProps.map = this.textures.metalMap;\n    }\n\n    if (this.textures.metalNormal && !customProps.normalMap) {\n      materialProps.normalMap = this.textures.metalNormal;\n      materialProps.normalScale = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(1, 1);\n    }\n\n    if (this.textures.metalRoughness && !customProps.roughnessMap) {\n      materialProps.roughnessMap = this.textures.metalRoughness;\n    }\n\n    if (this.textures.metalMetalness && !customProps.metalnessMap) {\n      materialProps.metalnessMap = this.textures.metalMetalness;\n    }\n\n    return new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j(materialProps);\n  }\n\n  /**\n   * 获取统一的颜色值\n   * @returns {number} 16进制颜色值\n   */\n  getUnifiedColor() {\n    return this.unifiedConfig.color;\n  }\n\n  /**\n   * 获取统一的透明度值\n   * @param {string} type - 材质类型\n   * @returns {number} 透明度值\n   */\n  getUnifiedOpacity(type = 'standard') {\n    switch (type) {\n      case 'exploded':\n        return 0.6;\n      case 'transition':\n        return 0.8;\n      default:\n        return this.unifiedConfig.opacity;\n    }\n  }\n\n  /**\n   * 更新统一配置\n   * @param {Object} newConfig - 新的配置\n   */\n  updateUnifiedConfig(newConfig) {\n    this.unifiedConfig = { ...this.unifiedConfig, ...newConfig };\n    \n    // 重新创建所有材质\n    this.materialCache.clear();\n    if (Object.keys(this.textures).length > 0) {\n      this.createStandardMaterial();\n      this.createExplodedMaterial();\n      this.createTransitionMaterial();\n    } else {\n      this.createFallbackMaterials();\n    }\n    \n    console.log('🔄 统一材质配置已更新');\n  }\n\n  /**\n   * 释放所有资源\n   */\n  dispose() {\n    // 释放贴图\n    Object.values(this.textures).forEach(texture => {\n      texture.dispose();\n    });\n\n    // 释放材质\n    this.materialCache.forEach(material => {\n      material.dispose();\n    });\n\n    this.textures = {};\n    this.materialCache.clear();\n    \n    console.log('🗑️ 统一组件材质资源已释放');\n  }\n}\n\n// 创建单例实例\nconst unifiedComponentMaterial = new UnifiedComponentMaterial();\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\CylinderConnection.js\n\n\n\n\n/**\n * 圆柱体连接组件\n * 使用旋转曲线生成两个圆柱体之间的平滑连接\n */\nclass CylinderConnection {\n  \n  /**\n   * 构造函数\n   * @param {Object} cylinder1Config - 第一个圆柱体配置\n   * @param {Object} cylinder2Config - 第二个圆柱体配置\n   * @param {Object} connectionConfig - 连接配置\n   */\n  constructor(cylinder1Config, cylinder2Config, connectionConfig = {}) {\n    this.cylinder1Config = cylinder1Config;\n    this.cylinder2Config = cylinder2Config;\n    this.connectionConfig = {\n      curveType: connectionConfig.curveType || 'G2',\n      segments: connectionConfig.segments || 50,\n      radialSegments: connectionConfig.radialSegments || 32,\n      visible: connectionConfig.visible !== false,\n      color: connectionConfig.color || '0x66aaff',\n      opacity: connectionConfig.opacity || 0.7,\n      connectionLength: connectionConfig.connectionLength || 1.0, // 连接区域长度\n      position: {\n        offset: connectionConfig.position?.offset || { x: 0, y: 0, z: 0 }\n      },\n      rotation: {\n        offset: connectionConfig.rotation?.offset || { x: 0, y: 0, z: 0 }\n      },\n      ...connectionConfig\n    };\n    \n    this.connectionGroup = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Group */.YJl();\n    this.connectionGroup.name = 'CylinderConnection';\n    \n    this.connectionMeshes = [];\n    this.materials = [];\n    \n    this.createConnections();\n  }\n  \n  /**\n   * 创建连接\n   */\n  createConnections() {\n    // 计算两个圆柱体之间的连接参数\n    const connectionInfo = this.calculateConnectionParameters();\n    \n    if (connectionInfo.needsConnection) {\n      this.createConnectionMesh(connectionInfo);\n    }\n  }\n  \n  /**\n   * 计算连接参数\n   */\n  calculateConnectionParameters() {\n    const pos1 = this.cylinder1Config.position;\n    const pos2 = this.cylinder2Config.position;\n    const r1 = this.cylinder1Config.radius;\n    const r2 = this.cylinder2Config.radius;\n    \n    // 计算两个圆柱体中心之间的距离和方向\n    const distance = Math.sqrt(\n      Math.pow(pos2.x - pos1.x, 2) + \n      Math.pow(pos2.y - pos1.y, 2) + \n      Math.pow(pos2.z - pos1.z, 2)\n    );\n    \n    // 计算连接向量\n    const direction = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(\n      pos2.x - pos1.x,\n      pos2.y - pos1.y,\n      pos2.z - pos1.z\n    ).normalize();\n    \n    // 判断是否需要连接（圆柱体之间有间隙）\n    const cylinderLength1 = this.cylinder1Config.height;\n    const cylinderLength2 = this.cylinder2Config.height;\n    \n    // 计算圆柱体端点位置（考虑旋转）\n    const rot1 = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Euler */.O9p(\n      this.cylinder1Config.rotation.x,\n      this.cylinder1Config.rotation.y,\n      this.cylinder1Config.rotation.z\n    );\n    const rot2 = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Euler */.O9p(\n      this.cylinder2Config.rotation.x,\n      this.cylinder2Config.rotation.y,\n      this.cylinder2Config.rotation.z\n    );\n    \n    // 简化处理：假设圆柱体都是水平放置的（绕Z轴旋转90度）\n    // 在这种情况下，圆柱体的\"长度\"实际上是在X方向上\n    \n    const gap = Math.abs(distance - cylinderLength1/2 - cylinderLength2/2);\n    const needsConnection = gap > 0.1; // 如果间隙大于0.1，则需要连接\n    \n    return {\n      needsConnection,\n      distance,\n      direction,\n      gap,\n      startPos: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(pos1.x, pos1.y, pos1.z),\n      endPos: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(pos2.x, pos2.y, pos2.z),\n      startRadius: r1,\n      endRadius: r2,\n      connectionLength: this.connectionConfig.connectionLength\n    };\n  }\n  \n  /**\n   * 创建连接网格\n   */\n  createConnectionMesh(connectionInfo) {\n    // 使用统一组件材质管理器获取标准材质\n    const material = unifiedComponentMaterial.getMaterial('standard');\n    \n    this.materials.push(material);\n    \n    // 创建旋转曲线几何体\n    const curveGeometry = new RotationCurveGeometry(\n      connectionInfo.startRadius,\n      connectionInfo.endRadius,\n      connectionInfo.connectionLength,\n      this.connectionConfig.curveType,\n      this.connectionConfig.segments,\n      this.connectionConfig.radialSegments\n    );\n    \n    // 创建网格\n    const connectionMesh = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(curveGeometry.getGeometry(), material);\n    \n    // 设置位置和旋转\n    this.positionConnectionMesh(connectionMesh, connectionInfo);\n    \n    // 设置可见性\n    connectionMesh.visible = this.connectionConfig.visible;\n    \n    // 添加到组中\n    this.connectionGroup.add(connectionMesh);\n    this.connectionMeshes.push(connectionMesh);\n  }\n  \n  /**\n   * 定位连接网格\n   */\n  positionConnectionMesh(mesh, connectionInfo) {\n    // 计算连接中心点\n    const centerX = (connectionInfo.startPos.x + connectionInfo.endPos.x) / 2;\n    const centerY = (connectionInfo.startPos.y + connectionInfo.endPos.y) / 2;\n    const centerZ = (connectionInfo.startPos.z + connectionInfo.endPos.z) / 2;\n    \n    // 应用位置偏移\n    const posOffset = this.connectionConfig.position.offset;\n    mesh.position.set(\n      centerX + posOffset.x, \n      centerY + posOffset.y, \n      centerZ + posOffset.z\n    );\n    \n    // 计算旋转以对齐连接方向\n    // 默认几何体是沿Z轴方向的，需要旋转以对齐实际连接方向\n    const targetDirection = connectionInfo.direction;\n    const defaultDirection = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0, 1);\n    \n    // 计算旋转四元数\n    const quaternion = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Quaternion */.PTz();\n    quaternion.setFromUnitVectors(defaultDirection, targetDirection);\n    mesh.setRotationFromQuaternion(quaternion);\n    \n    // 由于圆柱体是水平的（绕Z轴旋转90度），连接也需要相应调整\n    mesh.rotateZ(Math.PI / 2);\n    \n    // 应用旋转偏移\n    const rotOffset = this.connectionConfig.rotation.offset;\n    mesh.rotateX(rotOffset.x);\n    mesh.rotateY(rotOffset.y);\n    mesh.rotateZ(rotOffset.z);\n  }\n  \n  /**\n   * 获取连接组\n   */\n  getConnection() {\n    return this.connectionGroup;\n  }\n  \n  /**\n   * 设置可见性\n   */\n  setVisible(visible) {\n    this.connectionGroup.visible = visible;\n    this.connectionMeshes.forEach(mesh => {\n      mesh.visible = visible;\n    });\n  }\n  \n  /**\n   * 设置颜色\n   */\n  setColor(color) {\n    this.materials.forEach(material => {\n      material.color.setHex(color);\n    });\n  }\n  \n  /**\n   * 设置透明度\n   */\n  setOpacity(opacity) {\n    this.materials.forEach(material => {\n      material.opacity = Math.max(0, Math.min(1, opacity));\n    });\n  }\n  \n  /**\n   * 设置位置偏移\n   * @param {number} x - X轴偏移\n   * @param {number} y - Y轴偏移  \n   * @param {number} z - Z轴偏移\n   */\n  setPositionOffset(x, y, z) {\n    this.connectionConfig.position.offset = { x, y, z };\n    this.recreateConnections();\n  }\n  \n  /**\n   * 设置旋转偏移\n   * @param {number} x - X轴旋转偏移（弧度）\n   * @param {number} y - Y轴旋转偏移（弧度）\n   * @param {number} z - Z轴旋转偏移（弧度）\n   */\n  setRotationOffset(x, y, z) {\n    this.connectionConfig.rotation.offset = { x, y, z };\n    this.recreateConnections();\n  }\n  \n  /**\n   * 获取当前位置偏移\n   */\n  getPositionOffset() {\n    return { ...this.connectionConfig.position.offset };\n  }\n  \n  /**\n   * 获取当前旋转偏移\n   */\n  getRotationOffset() {\n    return { ...this.connectionConfig.rotation.offset };\n  }\n  \n  /**\n   * 直接设置连接组的位置（不改变配置，只是临时移动）\n   * @param {number} x - X坐标\n   * @param {number} y - Y坐标\n   * @param {number} z - Z坐标\n   */\n  setPosition(x, y, z) {\n    this.connectionGroup.position.set(x, y, z);\n  }\n  \n  /**\n   * 直接设置连接组的旋转（不改变配置，只是临时旋转）\n   * @param {number} x - X轴旋转（弧度）\n   * @param {number} y - Y轴旋转（弧度）\n   * @param {number} z - Z轴旋转（弧度）\n   */\n  setRotation(x, y, z) {\n    this.connectionGroup.rotation.set(x, y, z);\n  }\n  \n  /**\n   * 获取连接组的当前位置\n   */\n  getPosition() {\n    return this.connectionGroup.position.clone();\n  }\n  \n  /**\n   * 获取连接组的当前旋转\n   */\n  getRotation() {\n    return this.connectionGroup.rotation.clone();\n  }\n  \n  /**\n   * 设置曲线类型\n   */\n  setCurveType(curveType) {\n    this.connectionConfig.curveType = curveType;\n    this.recreateConnections();\n  }\n  \n  /**\n   * 重新创建连接\n   */\n  recreateConnections() {\n    // 清理现有连接\n    this.dispose();\n    \n    // 重置数组\n    this.connectionMeshes = [];\n    this.materials = [];\n    \n    // 重新创建\n    this.createConnections();\n  }\n  \n  /**\n   * 更新配置\n   */\n  updateConfig(cylinder1Config, cylinder2Config, connectionConfig) {\n    this.cylinder1Config = cylinder1Config;\n    this.cylinder2Config = cylinder2Config;\n    \n    if (connectionConfig) {\n      this.connectionConfig = { ...this.connectionConfig, ...connectionConfig };\n    }\n    \n    this.recreateConnections();\n  }\n  \n  /**\n   * 销毁资源\n   */\n  dispose() {\n    // 销毁材质\n    this.materials.forEach(material => {\n      material.dispose();\n    });\n    \n    // 销毁几何体\n    this.connectionGroup.traverse((child) => {\n      if (child.geometry) {\n        child.geometry.dispose();\n      }\n      if (child.material) {\n        child.material.dispose();\n      }\n    });\n    \n    // 清理组\n    this.connectionGroup.clear();\n    \n    // 重置数组\n    this.connectionMeshes = [];\n    this.materials = [];\n  }\n}\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\SuperellipseTransition.js\n\n\n\n/**\n * 超椭圆形状渐变组件\n * 实现从圆形到方形的平滑几何过渡，基于超椭圆公式：|x/a|^m + |y/b|^m = 1\n * \n * 参数说明：\n * - m = 2: 椭圆/圆形\n * - m → ∞: 趋近方形  \n * - m = 6~12: 圆角方形效果\n * \n * 支持G2五次缓动确保曲率连续性\n */\nclass SuperellipseTransition {\n  /**\n   * 构造函数\n   * @param {Object} startConfig - 起始几何配置（圆形）\n   * @param {Object} endConfig - 结束几何配置（方形）\n   * @param {Object} transitionConfig - 过渡配置\n   */\n  constructor(startConfig, endConfig, transitionConfig) {\n    this.startConfig = startConfig;\n    this.endConfig = endConfig; \n    this.transitionConfig = {\n      // 默认配置\n      segments: 64,              // 长度分段数（影响过渡平滑度）\n      radialSegments: 32,        // 径向分段数\n      transitionLength: 2.0,     // 过渡长度\n      startExponent: 2.0,        // 起始指数（圆形）\n      endExponent: 100.0,        // 结束指数（完全直角矩形）\n      g2Smoothing: true,         // 启用G2五次缓动\n      color: 0x66aaff,\n      opacity: 0.7,\n      position: { offset: { x: 0, y: 0, z: 0 } },\n      rotation: { offset: { x: 0, y: 0, z: 0 } },\n      // 覆盖默认配置\n      ...transitionConfig\n    };\n    \n    this.transitionGroup = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Group */.YJl();\n    this.transitionGroup.name = 'SuperellipseTransition';\n    \n    // 材质\n    this.material = null;\n    this.meshes = [];\n    \n    this.createTransition();\n  }\n\n  /**\n   * 创建形状渐变过渡\n   */\n  createTransition() {\n    // 使用统一组件材质（示波器内部金属材质）\n    this.material = unifiedComponentMaterial.getMaterial('transition');\n\n    // 计算过渡参数\n    const transitionInfo = this.calculateTransitionParams();\n    \n    // 创建过渡几何体\n    const geometry = this.createSuperellipseGeometry(transitionInfo);\n    \n    // 创建网格\n    const mesh = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(geometry, this.material);\n    \n    // 定位网格\n    this.positionTransitionMesh(mesh, transitionInfo);\n    \n    // 添加到组\n    this.transitionGroup.add(mesh);\n    this.meshes.push(mesh);\n  }\n\n  /**\n   * 计算过渡参数\n   */\n  calculateTransitionParams() {\n    // 计算起始和结束位置\n    const startPos = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(\n      this.startConfig.position.x,\n      this.startConfig.position.y, \n      this.startConfig.position.z\n    );\n    \n    const endPos = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(\n      this.endConfig.position.x,\n      this.endConfig.position.y,\n      this.endConfig.position.z\n    );\n    \n    // 计算过渡方向和距离\n    const direction = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0().subVectors(endPos, startPos).normalize();\n    const distance = startPos.distanceTo(endPos);\n    \n    // 计算过渡中心点\n    const center = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0().addVectors(startPos, endPos).multiplyScalar(0.5);\n    \n    // 使用用户配置的过渡长度（移除距离限制，让用户自由控制）\n    const adjustedLength = this.transitionConfig.transitionLength;\n    \n    return {\n      startPos,\n      endPos,\n      center,\n      direction,\n      distance,\n      transitionLength: adjustedLength,\n      startRadius: this.startConfig.radius,\n      endSize: this.endConfig.size // 立方体尺寸\n    };\n  }\n\n  /**\n   * 创建超椭圆过渡几何体\n   * @param {Object} transitionInfo - 过渡信息\n   */\n  createSuperellipseGeometry(transitionInfo) {\n    const segments = this.transitionConfig.segments;\n    const radialSegments = this.transitionConfig.radialSegments;\n    const length = transitionInfo.transitionLength;\n    \n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n    \n    // 沿长度方向创建截面\n    for (let i = 0; i <= segments; i++) {\n      const t = i / segments; // 0 到 1\n      const z = -length / 2 + t * length; // 沿Z轴分布\n      \n      // 应用G2五次缓动进行平滑插值\n      const smoothT = this.transitionConfig.g2Smoothing ? this.g2Smoothing(t) : t;\n      \n      // 插值计算当前截面的超椭圆参数\n      const currentExponent = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MathUtils */.cj9.lerp(\n        this.transitionConfig.startExponent, \n        this.transitionConfig.endExponent, \n        smoothT\n      );\n      \n      // 插值计算当前截面的尺寸\n      // 注意：由于超椭圆会绕Z轴旋转90度，需要交换width和height的映射\n      // X轴（旋转后变成垂直方向）对应荧光屏的height\n      // Y轴（旋转后变成水平方向）对应荧光屏的width\n      const currentRadiusX = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MathUtils */.cj9.lerp(\n        transitionInfo.startRadius,\n        transitionInfo.endSize.height / 2,  // 高度映射到X轴\n        smoothT\n      );\n      const currentRadiusY = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MathUtils */.cj9.lerp(\n        transitionInfo.startRadius,\n        transitionInfo.endSize.width / 2,   // 宽度映射到Y轴\n        smoothT\n      );\n      \n      // 创建当前截面的超椭圆轮廓\n      const crossSection = this.generateSuperellipseCrossSection(\n        currentRadiusX,\n        currentRadiusY,\n        currentExponent,\n        radialSegments\n      );\n      \n      // 添加顶点到几何体\n      for (let j = 0; j < crossSection.length; j++) {\n        const point = crossSection[j];\n        vertices.push(point.x, point.y, z);\n        \n        // 计算法向量（简化版，可进一步优化）\n        const normal = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(point.x, point.y, 0).normalize();\n        normals.push(normal.x, normal.y, normal.z);\n        \n        // UV坐标\n        uvs.push(j / radialSegments, t);\n      }\n    }\n    \n    // 生成索引（连接相邻截面）\n    for (let i = 0; i < segments; i++) {\n      for (let j = 0; j < radialSegments; j++) {\n        const current = i * radialSegments + j;\n        const next = i * radialSegments + ((j + 1) % radialSegments);\n        const currentNext = (i + 1) * radialSegments + j;\n        const nextNext = (i + 1) * radialSegments + ((j + 1) % radialSegments);\n        \n        // 两个三角形组成一个四边形\n        indices.push(current, next, currentNext);\n        indices.push(next, nextNext, currentNext);\n      }\n    }\n    \n    // 创建几何体\n    const geometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY();\n    geometry.setAttribute('position', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(vertices, 3));\n    geometry.setAttribute('normal', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(normals, 3));\n    geometry.setAttribute('uv', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(uvs, 2));\n    geometry.setIndex(indices);\n    \n    // 计算正确的法向量\n    geometry.computeVertexNormals();\n    \n    return geometry;\n  }\n\n  /**\n   * 生成超椭圆截面轮廓\n   * 使用公式：|x/a|^m + |y/b|^m = 1\n   * @param {number} radiusX - X轴半径\n   * @param {number} radiusY - Y轴半径  \n   * @param {number} exponent - 超椭圆指数\n   * @param {number} segments - 分段数\n   */\n  generateSuperellipseCrossSection(radiusX, radiusY, exponent, segments) {\n    const points = [];\n    \n    // 当指数非常大时，直接生成矩形\n    if (exponent >= 50) {\n      return this.generateRectangleCrossSection(radiusX, radiusY, segments);\n    }\n    \n    for (let i = 0; i < segments; i++) {\n      const angle = (i / segments) * Math.PI * 2;\n      \n      // 参数方程生成超椭圆点\n      // x = a * sign(cos(θ)) * |cos(θ)|^(2/m)\n      // y = b * sign(sin(θ)) * |sin(θ)|^(2/m)\n      const cosTheta = Math.cos(angle);\n      const sinTheta = Math.sin(angle);\n      \n      const signCos = Math.sign(cosTheta);\n      const signSin = Math.sign(sinTheta);\n      \n      // 避免数值问题：当指数很大时，限制最小值\n      const minValue = 1e-12;\n      const absCos = Math.max(Math.abs(cosTheta), minValue);\n      const absSin = Math.max(Math.abs(sinTheta), minValue);\n      \n      const powCos = Math.pow(absCos, 2 / exponent);\n      const powSin = Math.pow(absSin, 2 / exponent);\n      \n      const x = radiusX * signCos * powCos;\n      const y = radiusY * signSin * powSin;\n      \n      points.push(new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(x, y));\n    }\n    \n    return points;\n  }\n\n  /**\n   * 生成完全直角的矩形截面轮廓\n   * @param {number} radiusX - X轴半径\n   * @param {number} radiusY - Y轴半径  \n   * @param {number} segments - 分段数\n   */\n  generateRectangleCrossSection(radiusX, radiusY, segments) {\n    const points = [];\n    const segmentsPerSide = Math.floor(segments / 4);\n    \n    // 右边（从右下到右上）\n    for (let i = 0; i <= segmentsPerSide; i++) {\n      const t = i / segmentsPerSide;\n      const x = radiusX;\n      const y = radiusY * (2 * t - 1); // -radiusY 到 radiusY\n      points.push(new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(x, y));\n    }\n    \n    // 上边（从右上到左上）\n    for (let i = 1; i <= segmentsPerSide; i++) {\n      const t = i / segmentsPerSide;\n      const x = radiusX * (1 - 2 * t); // radiusX 到 -radiusX\n      const y = radiusY;\n      points.push(new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(x, y));\n    }\n    \n    // 左边（从左上到左下）\n    for (let i = 1; i <= segmentsPerSide; i++) {\n      const t = i / segmentsPerSide;\n      const x = -radiusX;\n      const y = radiusY * (1 - 2 * t); // radiusY 到 -radiusY\n      points.push(new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(x, y));\n    }\n    \n    // 下边（从左下到右下）\n    for (let i = 1; i < segmentsPerSide; i++) {\n      const t = i / segmentsPerSide;\n      const x = radiusX * (2 * t - 1); // -radiusX 到 radiusX\n      const y = -radiusY;\n      points.push(new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(x, y));\n    }\n    \n    return points;\n  }\n\n  /**\n   * G2五次缓动函数\n   * 保证位置、速度和加速度连续性\n   * 公式：f(t) = 10t³ - 15t⁴ + 6t⁵\n   * @param {number} t - 输入参数 [0,1]\n   */\n  g2Smoothing(t) {\n    // 限制输入范围\n    t = Math.max(0, Math.min(1, t));\n    \n    // G2五次缓动\n    return 10 * Math.pow(t, 3) - 15 * Math.pow(t, 4) + 6 * Math.pow(t, 5);\n  }\n\n  /**\n   * 定位过渡网格\n   * @param {THREE.Mesh} mesh - 网格对象\n   * @param {Object} transitionInfo - 过渡信息\n   */\n  positionTransitionMesh(mesh, transitionInfo) {\n    // 设置基础位置（过渡中心点）\n    const center = transitionInfo.center;\n    const posOffset = this.transitionConfig.position.offset;\n    \n    mesh.position.set(\n      center.x + posOffset.x,\n      center.y + posOffset.y, \n      center.z + posOffset.z\n    );\n    \n    // 计算旋转以对齐过渡方向\n    const targetDirection = transitionInfo.direction;\n    const defaultDirection = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0, 1);\n    \n    // 计算旋转四元数\n    const quaternion = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Quaternion */.PTz();\n    quaternion.setFromUnitVectors(defaultDirection, targetDirection);\n    mesh.setRotationFromQuaternion(quaternion);\n    \n    // 由于圆柱体是水平的（绕Z轴旋转90度），过渡也需要相应调整\n    mesh.rotateZ(Math.PI / 2);\n    \n    // 应用旋转偏移\n    const rotOffset = this.transitionConfig.rotation.offset;\n    mesh.rotateX(rotOffset.x);\n    mesh.rotateY(rotOffset.y);\n    mesh.rotateZ(rotOffset.z);\n  }\n\n  /**\n   * 获取过渡组\n   */\n  getTransition() {\n    return this.transitionGroup;\n  }\n\n  /**\n   * 设置可见性\n   */\n  setVisible(visible) {\n    this.transitionGroup.visible = visible;\n  }\n\n  /**\n   * 设置颜色\n   */\n  setColor(color) {\n    if (this.material) {\n      this.material.color.setHex(color);\n    }\n  }\n\n  /**\n   * 设置透明度\n   */\n  setOpacity(opacity) {\n    if (this.material) {\n      this.material.opacity = Math.max(0, Math.min(1, opacity));\n    }\n  }\n\n  /**\n   * 设置位置偏移\n   */\n  setPositionOffset(x, y, z) {\n    this.transitionConfig.position.offset = { x, y, z };\n    this.updatePosition();\n  }\n\n  /**\n   * 设置旋转偏移  \n   */\n  setRotationOffset(x, y, z) {\n    this.transitionConfig.rotation.offset = { x, y, z };\n    this.updateRotation();\n  }\n\n  /**\n   * 直接设置位置\n   */\n  setPosition(x, y, z) {\n    this.transitionGroup.position.set(x, y, z);\n  }\n\n  /**\n   * 直接设置旋转\n   */\n  setRotation(x, y, z) {\n    this.transitionGroup.rotation.set(x, y, z);\n  }\n\n  /**\n   * 获取当前位置\n   */\n  getPosition() {\n    return this.transitionGroup.position.clone();\n  }\n\n  /**\n   * 获取当前旋转\n   */\n  getRotation() {\n    return this.transitionGroup.rotation.clone();\n  }\n\n  /**\n   * 获取位置偏移\n   */\n  getPositionOffset() {\n    return { ...this.transitionConfig.position.offset };\n  }\n\n  /**\n   * 获取旋转偏移\n   */\n  getRotationOffset() {\n    return { ...this.transitionConfig.rotation.offset };\n  }\n\n  /**\n   * 更新位置（重新计算基于偏移）\n   */\n  updatePosition() {\n    // 重新计算过渡参数\n    const transitionInfo = this.calculateTransitionParams();\n    \n    // 更新所有网格位置\n    this.meshes.forEach(mesh => {\n      this.positionTransitionMesh(mesh, transitionInfo);\n    });\n  }\n\n  /**\n   * 更新旋转（重新计算基于偏移）\n   */\n  updateRotation() {\n    this.updatePosition(); // 旋转偏移需要重新定位\n  }\n\n  /**\n   * 更新配置\n   */\n  updateConfig(startConfig, endConfig, transitionConfig) {\n    this.startConfig = startConfig;\n    this.endConfig = endConfig;\n    this.transitionConfig = { ...this.transitionConfig, ...transitionConfig };\n    \n    // 重新创建过渡\n    this.dispose();\n    this.createTransition();\n  }\n\n  /**\n   * 动态更新超椭圆指数（用于动画效果）\n   * @param {number} startExponent - 起始指数\n   * @param {number} endExponent - 结束指数\n   */\n  updateExponents(startExponent, endExponent) {\n    this.transitionConfig.startExponent = startExponent;\n    this.transitionConfig.endExponent = endExponent;\n    \n    // 重新创建几何体\n    this.dispose();\n    this.createTransition();\n  }\n\n  /**\n   * 销毁资源\n   */\n  dispose() {\n    if (this.material) {\n      this.material.dispose();\n    }\n    \n    this.meshes.forEach(mesh => {\n      if (mesh.geometry) mesh.geometry.dispose();\n      this.transitionGroup.remove(mesh);\n    });\n    \n    this.meshes = [];\n  }\n}\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\Cylinder2ExplodeEffect.js\n\n\n\n\n\n\n/**\n * Cylinder2爆炸分解效果类\n * 将cylinder2模型分解成积木块状组件，模拟积木组装/分解效果\n */\nclass Cylinder2ExplodeEffect {\n  /**\n   * 构造函数\n   * @param {THREE.Mesh} cylinder2Mesh - cylinder2网格对象\n   * @param {THREE.Group} parentGroup - 父级组对象\n   */\n  constructor(cylinder2Mesh, parentGroup) {\n    this.originalMesh = cylinder2Mesh;\n    this.parentGroup = parentGroup;\n    this.exploded = false;\n    this.blocks = [];\n    this.tweens = [];\n    this.originalVisible = cylinder2Mesh.visible;\n    \n    // 分解参数\n    this.config = {\n      // 分解距离系数\n      explodeDistance: 1.5,\n      // 动画持续时间\n      animationDuration: 1200\n    };\n    \n    this.createBlocks();\n  }\n  \n  /**\n   * 创建积木块\n   */\n  createBlocks() {\n    const config = CONFIG.shell.cylinder2;\n    const radius = config.radius;\n    const height = config.height;\n    \n    // 使用统一组件材质（示波器内部金属材质）\n    const blockMaterial = unifiedComponentMaterial.getMaterial('exploded');\n    \n    // 创建4个扇形分块（四分之一圆）\n    for (let i = 0; i < 4; i++) {\n      const block = this.createQuarterBlock(radius, height, blockMaterial, i);\n      \n      // 设置初始位置\n      block.position.copy(this.originalMesh.position);\n      \n      // 保存扇形的基础旋转\n      const baseRotation = block.rotation.clone();\n      \n      // 应用cylinder2的旋转（组合旋转）\n      block.rotation.copy(this.originalMesh.rotation);\n      // 在原始旋转基础上添加扇形的基础旋转\n      block.rotation.z += baseRotation.z;\n      \n      // 初始时隐藏积木块\n      block.visible = false;\n      \n      // 计算扇形的中心角度（用于分解方向）\n      const centerAngle = i * Math.PI / 2 + Math.PI / 4; // 每个扇形的中心角度\n      \n      this.blocks.push({\n        mesh: block,\n        originalPosition: block.position.clone(),\n        originalRotation: block.rotation.clone(),\n        segmentIndex: i,\n        centerAngle: centerAngle\n      });\n      \n      this.parentGroup.add(block);\n    }\n  }\n  \n  /**\n   * 创建四分之一圆扇形积木块\n   */\n  createQuarterBlock(radius, height, material, segmentIndex) {\n    // 创建扇形几何体（四分之一圆）\n    const geometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* CylinderGeometry */.Ho_(\n      radius, \n      radius, \n      height, \n      8, // 每个扇形的径向段数\n      1, // 高度分段数\n      false, // 不封闭\n      segmentIndex * Math.PI / 2, // 起始角度\n      Math.PI / 2 // 扇形角度（90度）\n    );\n    \n    // 创建网格\n    const mesh = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(geometry, material);\n    \n    // 调整方向以匹配cylinder2的方向（沿X轴）\n    mesh.rotation.z = Math.PI / 2;\n    \n    return mesh;\n  }\n  \n  /**\n   * 计算爆炸后的位置\n   */\n  calculateExplodedPosition(block) {\n    const { centerAngle, originalPosition } = block;\n    \n    // 计算扇形在径向上的分解方向\n    // 由于cylinder2是沿X轴的，我们需要在YZ平面上分解\n    const explodeDistance = this.config.explodeDistance;\n    \n    // 计算分解的方向向量（在YZ平面上）\n    const directionY = Math.sin(centerAngle) * explodeDistance;\n    const directionZ = Math.cos(centerAngle) * explodeDistance;\n    \n    // 计算新位置\n    const explodedPosition = originalPosition.clone();\n    explodedPosition.y += directionY;\n    explodedPosition.z += directionZ;\n    \n    return explodedPosition;\n  }\n  \n  /**\n   * 切换爆炸效果\n   */\n  toggle(explode = !this.exploded) {\n    this.exploded = explode;\n    \n    // 停止所有正在进行的动画\n    this.tweens.forEach(tween => tween.stop());\n    this.tweens = [];\n    \n    if (this.exploded) {\n      // 爆炸：隐藏原始网格，显示积木块\n      this.originalMesh.visible = false;\n      this.explodeBlocks();\n    } else {\n      // 合并：重新组装积木块，显示原始网格\n      this.assembleBlocks();\n    }\n    \n    return this.exploded;\n  }\n  \n  /**\n   * 分解积木块\n   */\n  explodeBlocks() {\n    this.blocks.forEach((block, index) => {\n      // 显示积木块\n      block.mesh.visible = true;\n      \n      // 计算目标位置\n      const targetPosition = this.calculateExplodedPosition(block);\n      \n      // 创建位置动画（带延迟以产生连锁效果）\n      const delay = index * 100; // 100ms的延迟间隔，让分解效果更明显\n      \n      const positionTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(block.mesh.position, tweenGroup)\n        .to({\n          x: targetPosition.x,\n          y: targetPosition.y,\n          z: targetPosition.z\n        }, this.config.animationDuration)\n        .delay(delay)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.Out)\n        .start();\n      \n      this.tweens.push(positionTween);\n    });\n  }\n  \n  /**\n   * 组装积木块\n   */\n  assembleBlocks() {\n    this.blocks.forEach((block, index) => {\n      // 创建回归动画（反向延迟以产生重新组装效果）\n      const delay = (this.blocks.length - index - 1) * 80; // 反向延迟\n      \n      const positionTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(block.mesh.position, tweenGroup)\n        .to({\n          x: block.originalPosition.x,\n          y: block.originalPosition.y,\n          z: block.originalPosition.z\n        }, this.config.animationDuration * 0.8)\n        .delay(delay)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.In)\n        .onComplete(() => {\n          // 最后一个块组装完成后，隐藏所有积木块并显示原始网格\n          if (index === this.blocks.length - 1) {\n            this.blocks.forEach(b => b.mesh.visible = false);\n            this.originalMesh.visible = this.originalVisible;\n          }\n        })\n        .start();\n      \n      this.tweens.push(positionTween);\n    });\n  }\n  \n  /**\n   * 清理资源\n   */\n  dispose() {\n    // 停止所有动画\n    this.tweens.forEach(tween => tween.stop());\n    this.tweens = [];\n    \n    // 移除积木块\n    this.blocks.forEach(block => {\n      this.parentGroup.remove(block.mesh);\n      block.mesh.geometry.dispose();\n      block.mesh.material.dispose();\n    });\n    \n    this.blocks = [];\n  }\n  \n  /**\n   * 获取爆炸状态\n   */\n  isExploded() {\n    return this.exploded;\n  }\n}\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\RotationCurveExplodeEffect.js\n\n\n\n\n\n\n\n/**\n * 旋转曲线连接爆炸分解效果类\n * 将旋转曲线连接分解成扇形段，模拟积木组装/分解效果\n */\nclass RotationCurveExplodeEffect {\n  /**\n   * 构造函数\n   * @param {THREE.Mesh} connectionMesh - 旋转曲线连接网格对象\n   * @param {THREE.Group} parentGroup - 父级组对象\n   */\n  constructor(connectionMesh, parentGroup) {\n    this.originalMesh = connectionMesh;\n    this.parentGroup = parentGroup;\n    this.exploded = false;\n    this.sectors = [];\n    this.tweens = [];\n    this.originalVisible = connectionMesh.visible;\n    \n    // 分解参数\n    this.config = {\n      // 分解距离系数 - 与Cylinder2ExplodeEffect保持一致\n      explodeDistance: 1.5,\n      // 动画持续时间 - 与Cylinder2ExplodeEffect保持一致\n      animationDuration: 1200,\n      // 扇形段数量\n      sectorCount: 4\n    };\n    \n    this.createSectors();\n  }\n  \n  /**\n   * 创建扇形段\n   */\n  createSectors() {\n    const config = CONFIG.shell.rotationCurveConnection;\n    if (!config) return;\n    \n    // 获取连接的基本参数\n    const segments = config.segments || 50;\n    const radialSegments = config.radialSegments || 32;\n    const connectionLength = config.connectionLength || 4.8;\n    \n    // 使用统一组件材质（示波器内部金属材质）\n    const ringMaterial = unifiedComponentMaterial.getMaterial('exploded');\n    \n    // 创建4个扇形段（每个90度）\n    for (let i = 0; i < this.config.sectorCount; i++) {\n      const sector = this.createSectorSegment(connectionLength, radialSegments, ringMaterial, i);\n      \n      // 设置初始位置\n      sector.position.copy(this.originalMesh.position);\n      \n      // 保存扇形的基础旋转\n      const baseRotation = sector.rotation.clone();\n      \n      // 应用原始连接的旋转（复合旋转）\n      sector.rotation.copy(this.originalMesh.rotation);\n      // 在原始旋转基础上添加扇形的基础旋转\n      sector.rotation.z += baseRotation.z;\n      \n      // 初始时隐藏扇形段\n      sector.visible = false;\n      \n      // 计算扇形段的中心角度（用于分解方向）\n      const centerAngle = i * Math.PI / 2 + Math.PI / 4; // 每个扇形的中心角度（45°, 135°, 225°, 315°）\n      \n      this.sectors.push({\n        mesh: sector,\n        originalPosition: sector.position.clone(),\n        originalRotation: sector.rotation.clone(),\n        segmentIndex: i,\n        centerAngle: centerAngle\n      });\n      \n      this.parentGroup.add(sector);\n    }\n  }\n  \n  /**\n   * 创建单个扇形段\n   */\n  createSectorSegment(length, radialSegments, material, segmentIndex) {\n    // 获取原始连接的参数\n    const connectionParams = this.getConnectionParameters();\n    \n    // 创建旋转曲线几何体生成器\n    const curveGeometry = new RotationCurveGeometry(\n      connectionParams.startRadius,\n      connectionParams.endRadius,\n      connectionParams.connectionLength,\n      connectionParams.curveType,\n      connectionParams.segments,\n      connectionParams.radialSegments\n    );\n    \n    // 创建扇形片段几何体\n    const sectorGeometry = curveGeometry.createSectorGeometry(segmentIndex, this.config.sectorCount);\n    \n    // 创建网格\n    const mesh = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(sectorGeometry, material);\n    \n    // 调整方向以匹配旋转曲线连接的方向（沿X轴）\n    mesh.rotation.z = Math.PI / 2;\n    \n    return mesh;\n  }\n  \n  /**\n   * 获取原始连接的参数\n   */\n  getConnectionParameters() {\n    // 从配置中获取连接参数\n    const config = CONFIG.shell.rotationCurveConnection;\n    const cylinder1Config = CONFIG.shell.cylinder1;\n    const cylinder2Config = CONFIG.shell.cylinder2;\n    \n    return {\n      startRadius: cylinder1Config.radius,\n      endRadius: cylinder2Config.radius,\n      connectionLength: config.connectionLength,\n      curveType: config.curveType || 'G2',\n      segments: config.segments || 50,\n      radialSegments: config.radialSegments || 32\n    };\n  }\n\n  /**\n   * 估算连接的半径\n   */\n  estimateConnectionRadius() {\n    // 基于配置估算半径，或者使用默认值\n    const cylinder1Radius = CONFIG.shell.cylinder1?.radius || 1.5;\n    const cylinder2Radius = CONFIG.shell.cylinder2?.radius || 1.0;\n    \n    // 使用两个圆柱体半径的平均值作为连接半径\n    return (cylinder1Radius + cylinder2Radius) / 2;\n  }\n  \n  /**\n   * 计算爆炸后的位置\n   */\n  calculateExplodedPosition(sector) {\n    const { centerAngle, originalPosition } = sector;\n    \n    // 计算扇形段在径向上的分解方向\n    // 由于连接是沿X轴的，我们需要在YZ平面上分解\n    const explodeDistance = this.config.explodeDistance;\n    \n    // 计算分解的方向向量（在YZ平面上）\n    const directionY = Math.sin(centerAngle) * explodeDistance;\n    const directionZ = Math.cos(centerAngle) * explodeDistance;\n    \n    // 计算新位置\n    const explodedPosition = originalPosition.clone();\n    explodedPosition.y += directionY;\n    explodedPosition.z += directionZ;\n    \n    return explodedPosition;\n  }\n  \n  /**\n   * 计算爆炸后的旋转\n   */\n  calculateExplodedRotation(sector) {\n    const { originalRotation, segmentIndex } = sector;\n    \n    // 添加90度旋转效果到分离的扇形段\n    const explodedRotation = originalRotation.clone();\n    \n    // 为每个扇形段添加90度旋转（π/2弧度）\n    // 围绕X轴旋转，使扇形段产生翻滚效果\n    explodedRotation.x += Math.PI / 2;\n    \n    // 可选：为不同扇形段添加轻微的旋转变化，增加动感\n    const rotationVariation = (segmentIndex * Math.PI / 8) * 0.3; // 每个段轻微不同的旋转偏移\n    explodedRotation.y += rotationVariation;\n    \n    return explodedRotation;\n  }\n  \n  /**\n   * 切换爆炸效果\n   */\n  toggle(explode = !this.exploded) {\n    this.exploded = explode;\n    \n    // 停止所有正在进行的动画\n    this.tweens.forEach(tween => tween.stop());\n    this.tweens = [];\n    \n    if (this.exploded) {\n      // 爆炸：隐藏原始网格，显示扇形段\n      this.originalMesh.visible = false;\n      this.explodeSectors();\n    } else {\n      // 合并：重新组装扇形段，显示原始网格\n      this.assembleSectors();\n    }\n    \n    return this.exploded;\n  }\n  \n  /**\n   * 分解扇形段\n   */\n  explodeSectors() {\n    this.sectors.forEach((sector, index) => {\n      // 显示扇形段\n      sector.mesh.visible = true;\n      \n      // 计算目标位置和旋转\n      const targetPosition = this.calculateExplodedPosition(sector);\n      const targetRotation = this.calculateExplodedRotation(sector);\n      \n      // 创建位置动画（带延迟以产生连锁效果）\n      const delay = index * 100; // 100ms的延迟间隔，让分解效果更明显，与Cylinder2ExplodeEffect保持一致\n      \n      const positionTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(sector.mesh.position, tweenGroup)\n        .to({\n          x: targetPosition.x,\n          y: targetPosition.y,\n          z: targetPosition.z\n        }, this.config.animationDuration)\n        .delay(delay)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.Out)\n        .start();\n      \n      // 创建旋转动画\n      const rotationTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(sector.mesh.rotation, tweenGroup)\n        .to({\n          x: targetRotation.x,\n          y: targetRotation.y,\n          z: targetRotation.z\n        }, this.config.animationDuration)\n        .delay(delay)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.Out)\n        .start();\n      \n      this.tweens.push(positionTween, rotationTween);\n    });\n  }\n  \n  /**\n   * 组装扇形段\n   */\n  assembleSectors() {\n    this.sectors.forEach((sector, index) => {\n      // 创建回归动画（反向延迟以产生重新组装效果）\n      const delay = (this.sectors.length - index - 1) * 80; // 反向延迟，与Cylinder2ExplodeEffect保持一致\n      \n      const positionTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(sector.mesh.position, tweenGroup)\n        .to({\n          x: sector.originalPosition.x,\n          y: sector.originalPosition.y,\n          z: sector.originalPosition.z\n        }, this.config.animationDuration * 0.8)\n        .delay(delay)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.In)\n        .onComplete(() => {\n          // 最后一个扇形段组装完成后，隐藏所有扇形段并显示原始连接\n          if (index === this.sectors.length - 1) {\n            this.sectors.forEach(s => s.mesh.visible = false);\n            this.originalMesh.visible = this.originalVisible;\n          }\n        })\n        .start();\n      \n      const rotationTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(sector.mesh.rotation, tweenGroup)\n        .to({\n          x: sector.originalRotation.x,\n          y: sector.originalRotation.y,\n          z: sector.originalRotation.z\n        }, this.config.animationDuration * 0.8)\n        .delay(delay)\n        .easing(D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.In)\n        .start();\n      \n      this.tweens.push(positionTween, rotationTween);\n    });\n  }\n  \n  /**\n   * 清理资源\n   */\n  dispose() {\n    // 停止所有动画\n    this.tweens.forEach(tween => tween.stop());\n    this.tweens = [];\n    \n    // 移除扇形段\n    this.sectors.forEach(sector => {\n      this.parentGroup.remove(sector.mesh);\n      sector.mesh.geometry.dispose();\n      sector.mesh.material.dispose();\n    });\n    \n    this.sectors = [];\n  }\n  \n  /**\n   * 获取爆炸状态\n   */\n  isExploded() {\n    return this.exploded;\n  }\n}\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\utils\\SuperellipsePositioner.js\n\r\n\r\n/**\r\n * 超椭圆子网格批量定位器\r\n * 专门用于将SuperellipseExplodeEffect分解后的子网格按给定坐标批量定位\r\n */\r\nclass SuperellipsePositioner {\r\n  /**\r\n   * 构造函数\r\n   * @param {SuperellipseExplodeEffect} explodeEffect - 超椭圆爆炸效果实例\r\n   */\r\n  constructor(explodeEffect) {\r\n    this.explodeEffect = explodeEffect;\r\n    this.originalPositions = new Map(); // 存储原始位置\r\n    this.isPositioned = false;\r\n    \r\n    this.saveOriginalPositions();\r\n  }\r\n  \r\n  /**\r\n   * 保存原始位置\r\n   */\r\n  saveOriginalPositions() {\r\n    this.explodeEffect.blocks.forEach((block, index) => {\r\n      this.originalPositions.set(index, {\r\n        x: block.mesh.position.x,\r\n        y: block.mesh.position.y,\r\n        z: block.mesh.position.z\r\n      });\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 批量设置子网格位置\r\n   * @param {Array} positions - 位置数组，每个元素包含 {x, y, z} 坐标\r\n   *                           数组长度应与子网格数量匹配\r\n   */\r\n  setPositions(positions) {\r\n    if (!Array.isArray(positions)) {\r\n      console.warn('SuperellipsePositioner: positions 必须是数组');\r\n      return;\r\n    }\r\n    \r\n    if (positions.length !== this.explodeEffect.blocks.length) {\r\n      console.warn(`SuperellipsePositioner: 位置数组长度 (${positions.length}) 与子网格数量 (${this.explodeEffect.blocks.length}) 不匹配`);\r\n      return;\r\n    }\r\n    \r\n    // 确保子网格处于分解状态并可见\r\n    if (!this.explodeEffect.exploded) {\r\n      this.explodeEffect.toggle(true);\r\n    }\r\n    \r\n    // 停止任何正在进行的动画\r\n    this.explodeEffect.tweens.forEach(tween => tween.stop());\r\n    this.explodeEffect.tweens = [];\r\n    \r\n    // 批量设置位置\r\n    positions.forEach((position, index) => {\r\n      if (index < this.explodeEffect.blocks.length) {\r\n        const block = this.explodeEffect.blocks[index];\r\n        \r\n        // 验证位置对象\r\n        if (typeof position === 'object' && position !== null) {\r\n          if (typeof position.x === 'number') block.mesh.position.x = position.x;\r\n          if (typeof position.y === 'number') block.mesh.position.y = position.y;\r\n          if (typeof position.z === 'number') block.mesh.position.z = position.z;\r\n        }\r\n      }\r\n    });\r\n    \r\n    this.isPositioned = true;\r\n  }\r\n  \r\n  /**\r\n   * 设置单个子网格位置\r\n   * @param {number} index - 子网格索引 (0-3)\r\n   * @param {Object} position - 位置对象 {x, y, z}\r\n   */\r\n  setPosition(index, position) {\r\n    if (index < 0 || index >= this.explodeEffect.blocks.length) {\r\n      console.warn(`SuperellipsePositioner: 索引 ${index} 超出范围 (0-${this.explodeEffect.blocks.length - 1})`);\r\n      return;\r\n    }\r\n    \r\n    if (typeof position !== 'object' || position === null) {\r\n      console.warn('SuperellipsePositioner: position 必须是对象');\r\n      return;\r\n    }\r\n    \r\n    // 确保子网格处于分解状态并可见\r\n    if (!this.explodeEffect.exploded) {\r\n      this.explodeEffect.toggle(true);\r\n    }\r\n    \r\n    const block = this.explodeEffect.blocks[index];\r\n    if (typeof position.x === 'number') block.mesh.position.x = position.x;\r\n    if (typeof position.y === 'number') block.mesh.position.y = position.y;\r\n    if (typeof position.z === 'number') block.mesh.position.z = position.z;\r\n    \r\n    this.isPositioned = true;\r\n  }\r\n  \r\n  /**\r\n   * 获取所有子网格的当前位置\r\n   * @returns {Array} 位置数组\r\n   */\r\n  getPositions() {\r\n    return this.explodeEffect.blocks.map(block => ({\r\n      x: block.mesh.position.x,\r\n      y: block.mesh.position.y,\r\n      z: block.mesh.position.z\r\n    }));\r\n  }\r\n  \r\n  /**\r\n   * 获取指定子网格的位置\r\n   * @param {number} index - 子网格索引\r\n   * @returns {Object|null} 位置对象或null\r\n   */\r\n  getPosition(index) {\r\n    if (index < 0 || index >= this.explodeEffect.blocks.length) {\r\n      console.warn(`SuperellipsePositioner: 索引 ${index} 超出范围`);\r\n      return null;\r\n    }\r\n    \r\n    const block = this.explodeEffect.blocks[index];\r\n    return {\r\n      x: block.mesh.position.x,\r\n      y: block.mesh.position.y,\r\n      z: block.mesh.position.z\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 恢复到原始位置\r\n   */\r\n  restoreOriginalPositions() {\r\n    this.explodeEffect.blocks.forEach((block, index) => {\r\n      const originalPos = this.originalPositions.get(index);\r\n      if (originalPos) {\r\n        block.mesh.position.set(originalPos.x, originalPos.y, originalPos.z);\r\n      }\r\n    });\r\n    \r\n    this.isPositioned = false;\r\n  }\r\n  \r\n  /**\r\n   * 应用位置偏移\r\n   * @param {Object} offset - 偏移量 {x, y, z}\r\n   */\r\n  applyOffset(offset) {\r\n    if (typeof offset !== 'object' || offset === null) {\r\n      console.warn('SuperellipsePositioner: offset 必须是对象');\r\n      return;\r\n    }\r\n    \r\n    const offsetX = typeof offset.x === 'number' ? offset.x : 0;\r\n    const offsetY = typeof offset.y === 'number' ? offset.y : 0;\r\n    const offsetZ = typeof offset.z === 'number' ? offset.z : 0;\r\n    \r\n    this.explodeEffect.blocks.forEach(block => {\r\n      block.mesh.position.x += offsetX;\r\n      block.mesh.position.y += offsetY;\r\n      block.mesh.position.z += offsetZ;\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 重置所有子网格到爆炸效果的默认分解位置\r\n   */\r\n  resetToExplodedPositions() {\r\n    this.explodeEffect.blocks.forEach(block => {\r\n      const explodedPos = this.explodeEffect.calculateExplodedPosition(block);\r\n      block.mesh.position.copy(explodedPos);\r\n    });\r\n    \r\n    this.isPositioned = false;\r\n  }\r\n  \r\n  /**\r\n   * 获取子网格数量\r\n   * @returns {number} 子网格数量\r\n   */\r\n  getBlockCount() {\r\n    return this.explodeEffect.blocks.length;\r\n  }\r\n  \r\n  /**\r\n   * 检查是否已经应用了自定义定位\r\n   * @returns {boolean} 是否已定位\r\n   */\r\n  isCustomPositioned() {\r\n    return this.isPositioned;\r\n  }\r\n}\r\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\SuperellipseExplodeEffect.js\n\n\n\n\n\n\n\n/**\n * 超椭圆爆炸分解效果类\n * 将超椭圆模型分解成4个象限分块，模拟积木组装/分解效果\n */\nclass SuperellipseExplodeEffect {\n  /**\n   * 构造函数\n   * @param {THREE.Mesh} superellipseMesh - 超椭圆网格对象\n   * @param {THREE.Group} parentGroup - 父级组对象\n   */\n  constructor(superellipseMesh, parentGroup) {\n    this.originalMesh = superellipseMesh;\n    this.parentGroup = parentGroup;\n    this.exploded = false;\n    this.blocks = [];\n    this.tweens = [];\n    this.originalVisible = superellipseMesh.visible;\n    \n    // 分解参数\n    this.config = {\n      // 分解距离系数\n      explodeDistance: 2.0,\n      // 动画持续时间 - 与其他组件保持一致\n      animationDuration: 1200\n    };\n    \n    this.createBlocks();\n    \n    // 初始化位置器\n    this.positioner = new SuperellipsePositioner(this);\n  }\n  \n  /**\n   * 创建分块\n   */\n  createBlocks() {\n    // 获取原始几何体\n    const originalGeometry = this.originalMesh.geometry;\n    \n    // 使用统一组件材质管理器获取爆炸材质\n    const blockMaterial = unifiedComponentMaterial.getMaterial('exploded');\n    \n    // 创建4个象限分块\n    for (let i = 0; i < 4; i++) {\n      const block = this.createQuadrantBlock(originalGeometry, blockMaterial, i);\n      \n      // 设置初始位置和旋转\n      block.position.copy(this.originalMesh.position);\n      block.rotation.copy(this.originalMesh.rotation);\n      \n      // 初始时隐藏积木块\n      block.visible = false;\n      \n      // 计算象限的中心角度（用于分解方向）\n      const centerAngle = i * Math.PI / 2 + Math.PI / 4; // 每个象限的中心角度\n      \n      this.blocks.push({\n        mesh: block,\n        originalPosition: block.position.clone(),\n        originalRotation: block.rotation.clone(),\n        quadrantIndex: i,\n        centerAngle: centerAngle\n      });\n      \n      this.parentGroup.add(block);\n    }\n  }\n  \n  /**\n   * 创建象限分块\n   * @param {THREE.BufferGeometry} originalGeometry - 原始几何体\n   * @param {THREE.Material} material - 材质\n   * @param {number} quadrantIndex - 象限索引 (0-3)\n   */\n  createQuadrantBlock(originalGeometry, material, quadrantIndex) {\n    // 获取原始几何体的顶点数据\n    const positions = originalGeometry.attributes.position.array;\n    const normals = originalGeometry.attributes.normal ? originalGeometry.attributes.normal.array : null;\n    const uvs = originalGeometry.attributes.uv ? originalGeometry.attributes.uv.array : null;\n    const indices = originalGeometry.index ? originalGeometry.index.array : null;\n    \n    // 创建新的几何体数据数组\n    const newVertices = [];\n    const newNormals = [];\n    const newUvs = [];\n    const newIndices = [];\n    const vertexMap = new Map(); // 用于映射旧顶点索引到新顶点索引\n    \n    // 计算实际几何体边界框\n    const boundingBox = this.calculateGeometryBoundingBox(originalGeometry);\n    \n    // 定义基于实际边界的象限边界\n    const quadrantBounds = this.getQuadrantBoundsWithGeometry(quadrantIndex, boundingBox);\n    \n    // 处理顶点数据\n    if (indices) {\n      // 有索引的几何体\n      for (let i = 0; i < indices.length; i += 3) {\n        const triangleVertices = [];\n        const triangleInQuadrant = [];\n        \n        // 检查三角形的每个顶点\n        for (let j = 0; j < 3; j++) {\n          const vertexIndex = indices[i + j];\n          const x = positions[vertexIndex * 3];\n          const y = positions[vertexIndex * 3 + 1];\n          \n          triangleVertices.push({ index: vertexIndex, x, y });\n          triangleInQuadrant.push(this.isPointInQuadrant(x, y, quadrantBounds));\n        }\n        \n        // 更智能的三角形分配：基于三角形重心来决定归属\n        const triangleCenter = this.calculateTriangleCenter(triangleVertices);\n        const triangleBelongsToQuadrant = this.isPointInQuadrant(\n          triangleCenter.x, \n          triangleCenter.y, \n          quadrantBounds\n        );\n        \n        // 如果三角形重心在当前象限，或者所有顶点都在象限边界上，则包含整个三角形\n        if (triangleBelongsToQuadrant || triangleInQuadrant.every(inQuadrant => inQuadrant)) {\n          for (let j = 0; j < 3; j++) {\n            const vertex = triangleVertices[j];\n            const oldIndex = vertex.index;\n            \n            if (!vertexMap.has(oldIndex)) {\n              // 添加新顶点\n              const newIndex = newVertices.length / 3;\n              vertexMap.set(oldIndex, newIndex);\n              \n              // 复制顶点位置\n              newVertices.push(\n                positions[oldIndex * 3],\n                positions[oldIndex * 3 + 1],\n                positions[oldIndex * 3 + 2]\n              );\n              \n              // 复制法向量\n              if (normals) {\n                newNormals.push(\n                  normals[oldIndex * 3],\n                  normals[oldIndex * 3 + 1],\n                  normals[oldIndex * 3 + 2]\n                );\n              }\n              \n              // 复制UV坐标\n              if (uvs) {\n                newUvs.push(\n                  uvs[oldIndex * 2],\n                  uvs[oldIndex * 2 + 1]\n                );\n              }\n            }\n            \n            newIndices.push(vertexMap.get(oldIndex));\n          }\n        }\n      }\n    } else {\n      // 无索引的几何体\n      for (let i = 0; i < positions.length; i += 9) { // 每个三角形3个顶点，每个顶点3个坐标\n        const triangleInQuadrant = [];\n        \n        // 检查三角形的每个顶点\n        for (let j = 0; j < 3; j++) {\n          const x = positions[i + j * 3];\n          const y = positions[i + j * 3 + 1];\n          triangleInQuadrant.push(this.isPointInQuadrant(x, y, quadrantBounds));\n        }\n        \n        // 如果三角形的任何顶点在当前象限，则包含整个三角形\n        if (triangleInQuadrant.some(inQuadrant => inQuadrant)) {\n          for (let j = 0; j < 3; j++) {\n            const baseIdx = i + j * 3;\n            \n            // 复制顶点位置\n            newVertices.push(\n              positions[baseIdx],\n              positions[baseIdx + 1],\n              positions[baseIdx + 2]\n            );\n            \n            // 复制法向量\n            if (normals) {\n              newNormals.push(\n                normals[baseIdx],\n                normals[baseIdx + 1],\n                normals[baseIdx + 2]\n              );\n            }\n            \n            // 复制UV坐标\n            if (uvs) {\n              const uvIdx = (i / 3) * 2 + j * 2; // UV索引计算\n              newUvs.push(\n                uvs[uvIdx],\n                uvs[uvIdx + 1]\n              );\n            }\n          }\n        }\n      }\n    }\n    \n    // 创建新的几何体\n    const blockGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY();\n    \n    if (newVertices.length > 0) {\n      blockGeometry.setAttribute('position', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(newVertices, 3));\n      \n      if (newNormals.length > 0) {\n        blockGeometry.setAttribute('normal', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(newNormals, 3));\n      }\n      \n      if (newUvs.length > 0) {\n        blockGeometry.setAttribute('uv', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(newUvs, 2));\n      }\n      \n      if (newIndices.length > 0) {\n        blockGeometry.setIndex(newIndices);\n      }\n      \n      // 计算边界盒和法向量\n      blockGeometry.computeBoundingBox();\n      if (newNormals.length === 0) {\n        blockGeometry.computeVertexNormals();\n      }\n    } else {\n      // 如果没有顶点，创建一个简单的占位几何体\n      console.warn(`Quadrant ${quadrantIndex} has no vertices, creating placeholder geometry`);\n      const planeGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* PlaneGeometry */.bdM(0.1, 0.1);\n      blockGeometry.copy(planeGeometry);\n    }\n    \n    // 创建网格\n    const mesh = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(blockGeometry, material);\n    \n    return mesh;\n  }\n  \n  /**\n   * 计算几何体边界框\n   * @param {THREE.BufferGeometry} geometry - 几何体\n   */\n  calculateGeometryBoundingBox(geometry) {\n    geometry.computeBoundingBox();\n    const box = geometry.boundingBox;\n    \n    return {\n      minX: box.min.x,\n      maxX: box.max.x,\n      minY: box.min.y,\n      maxY: box.max.y,\n      minZ: box.min.z,\n      maxZ: box.max.z,\n      centerX: (box.min.x + box.max.x) / 2,\n      centerY: (box.min.y + box.max.y) / 2,\n      centerZ: (box.min.z + box.max.z) / 2\n    };\n  }\n\n  /**\n   * 获取基于实际几何体的象限边界\n   * @param {number} quadrantIndex - 象限索引 (0-3)\n   * @param {Object} boundingBox - 几何体边界框\n   */\n  getQuadrantBoundsWithGeometry(quadrantIndex, boundingBox) {\n    const { centerX, centerY, minX, maxX, minY, maxY } = boundingBox;\n    \n    switch (quadrantIndex) {\n      case 0: // 第一象限 (+x, +y) - 右上\n        return { \n          minX: centerX, maxX: maxX, \n          minY: centerY, maxY: maxY \n        };\n      case 1: // 第二象限 (-x, +y) - 左上\n        return { \n          minX: minX, maxX: centerX, \n          minY: centerY, maxY: maxY \n        };\n      case 2: // 第三象限 (-x, -y) - 左下\n        return { \n          minX: minX, maxX: centerX, \n          minY: minY, maxY: centerY \n        };\n      case 3: // 第四象限 (+x, -y) - 右下\n        return { \n          minX: centerX, maxX: maxX, \n          minY: minY, maxY: centerY \n        };\n      default:\n        return { \n          minX: minX, maxX: maxX, \n          minY: minY, maxY: maxY \n        };\n    }\n  }\n\n  /**\n   * 获取象限边界（旧版本，保留用于兼容）\n   * @param {number} quadrantIndex - 象限索引 (0-3)\n   */\n  getQuadrantBounds(quadrantIndex) {\n    switch (quadrantIndex) {\n      case 0: // 第一象限 (+x, +y)\n        return { minX: 0, maxX: Infinity, minY: 0, maxY: Infinity };\n      case 1: // 第二象限 (-x, +y)\n        return { minX: -Infinity, maxX: 0, minY: 0, maxY: Infinity };\n      case 2: // 第三象限 (-x, -y)\n        return { minX: -Infinity, maxX: 0, minY: -Infinity, maxY: 0 };\n      case 3: // 第四象限 (+x, -y)\n        return { minX: 0, maxX: Infinity, minY: -Infinity, maxY: 0 };\n      default:\n        return { minX: -Infinity, maxX: Infinity, minY: -Infinity, maxY: Infinity };\n    }\n  }\n  \n  /**\n   * 计算三角形重心\n   * @param {Array} triangleVertices - 三角形顶点数组\n   */\n  calculateTriangleCenter(triangleVertices) {\n    const centerX = (triangleVertices[0].x + triangleVertices[1].x + triangleVertices[2].x) / 3;\n    const centerY = (triangleVertices[0].y + triangleVertices[1].y + triangleVertices[2].y) / 3;\n    \n    return { x: centerX, y: centerY };\n  }\n\n  /**\n   * 检查点是否在指定象限内\n   * @param {number} x - X坐标\n   * @param {number} y - Y坐标\n   * @param {Object} bounds - 象限边界\n   */\n  isPointInQuadrant(x, y, bounds) {\n    return x >= bounds.minX && x <= bounds.maxX && \n           y >= bounds.minY && y <= bounds.maxY;\n  }\n  \n  /**\n   * 计算基于几何体尺寸的分解位置\n   */\n  calculateExplodedPosition(block) {\n    // 使用固定的分解位置坐标\n    const offsets = [\n      { x: 1, y: 1.5, z: 1 },    // 第一象限\n      { x: 1, y: -2.5, z: 1 },   // 第二象限\n      { x: 1, y: -2.5, z: -1 },  // 第三象限\n      { x: 1, y: 1.5, z: -1 }    // 第四象限\n    ];\n    \n    // 确保索引有效\n    if (block.quadrantIndex >= 0 && block.quadrantIndex < offsets.length) {\n      const offset = offsets[block.quadrantIndex];\n      return {\n        x: block.originalPosition.x + offset.x,\n        y: block.originalPosition.y + offset.y,\n        z: block.originalPosition.z + offset.z\n      };\n    }\n    \n    // 回退到原始位置\n    return block.originalPosition;\n  }\n  \n  /**\n   * 切换爆炸效果\n   */\n  toggle(explode = !this.exploded) {\n    this.exploded = explode;\n    \n    // 停止所有正在进行的动画\n    this.tweens.forEach(tween => tween.stop());\n    this.tweens = [];\n    \n    if (this.exploded) {\n      // 爆炸：隐藏原始网格，显示积木块\n      this.originalMesh.visible = false;\n      this.explodeBlocks();\n    } else {\n      // 合并：重新组装积木块，显示原始网格\n      this.assembleBlocks();\n    }\n    \n    return this.exploded;\n  }\n  \n  /**\n   * 分解积木块\n   */\n  explodeBlocks() {\n    this.animateBlocks(true); // true表示分解\n  }\n  \n  /**\n   * 组装积木块\n   */\n  assembleBlocks() {\n    this.animateBlocks(false); // false表示组装\n  }\n  \n  /**\n   * 统一的动画处理函数\n   * @param {boolean} explode - true为分解，false为组装\n   */\n  animateBlocks(explode) {\n    let completedAnimations = 0;\n    const totalAnimations = this.blocks.length;\n    \n    this.blocks.forEach((block, index) => {\n      // 显示或隐藏积木块的逻辑\n      if (explode) {\n        block.mesh.visible = true;\n      }\n      \n      // 计算目标位置和旋转\n      const targetPosition = explode \n        ? this.calculateExplodedPosition(block) \n        : block.originalPosition;\n      const targetRotation = block.originalRotation;\n      \n      // 统一延迟时间：分解使用100ms间隔\n      const delay = explode ? index * 100 : (this.blocks.length - index - 1) * 80;\n      \n      // 统一动画持续时间：合并动画更快\n      const duration = explode ? this.config.animationDuration : this.config.animationDuration * 0.8;\n      \n      // 统一缓动函数：分解用Back.Out，合并用Back.In\n      const easing = explode ? D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.Out : D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Easing */.GS.Back.In;\n      \n      // 创建位置动画\n      const positionTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(block.mesh.position, tweenGroup)\n        .to({\n          x: targetPosition.x,\n          y: targetPosition.y,\n          z: targetPosition.z\n        }, duration)\n        .delay(delay)\n        .easing(easing)\n        .onComplete(() => {\n          if (!explode) {\n            completedAnimations++;\n            // 组装完成后的处理\n            if (completedAnimations === totalAnimations) {\n              this.blocks.forEach(b => b.mesh.visible = false);\n              this.originalMesh.visible = this.originalVisible;\n              console.log('超椭圆组装完成，显示原始网格');\n            }\n          }\n        })\n        .start();\n      \n      // 创建旋转动画\n      const rotationTween = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Tween */.K(block.mesh.rotation, tweenGroup)\n        .to({\n          x: targetRotation.x,\n          y: targetRotation.y,\n          z: targetRotation.z\n        }, duration)\n        .delay(delay)\n        .easing(easing)\n        .start();\n      \n      this.tweens.push(positionTween, rotationTween);\n    });\n  }\n  \n  /**\n   * 清理资源\n   */\n  dispose() {\n    // 停止所有动画\n    this.tweens.forEach(tween => tween.stop());\n    this.tweens = [];\n    \n    // 移除积木块\n    this.blocks.forEach(block => {\n      this.parentGroup.remove(block.mesh);\n      block.mesh.geometry.dispose();\n      // 材质可能是共享的，不直接dispose\n      if (block.mesh.material !== this.originalMesh.material) {\n        block.mesh.material.dispose();\n      }\n    });\n    \n    this.blocks = [];\n  }\n  \n  /**\n   * 获取爆炸状态\n   */\n  isExploded() {\n    return this.exploded;\n  }\n}\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\components\\CRTShell.js\n\n\n\n\n\n\n\n\n\n/**\n * CRT正方形透明外壳组件\n * 用于包裹整个CRT模型的透明保护壳\n */\nclass CRTShell {\n  constructor() {\n    this.shellGroup = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Group */.YJl();\n    this.shellGroup.name = 'CRTShell';\n    \n    // 创建两个圆柱体的材质\n    this.cylinder1Material = null;\n    this.cylinder2Material = null;\n    \n    // 旋转曲线连接\n    this.cylinderConnection = null;\n    \n    // 超椭圆形状渐变\n    this.superellipseTransition = null;\n    \n    // cylinder2爆炸效果\n    this.cylinder2ExplodeEffect = null;\n    \n    // 旋转曲线连接爆炸效果\n    this.rotationCurveExplodeEffect = null;\n    \n    // 超椭圆形状渐变爆炸效果\n    this.superellipseExplodeEffect = null;\n    \n    this.createShell();\n  }\n\n  /**\n   * 创建正方形透明外壳（删除靠近荧光屏的右侧面）\n   */\n  createShell() {\n    // 立方体外壳材质已删除，不再需要\n    // this.shellMaterial = new THREE.MeshPhongMaterial({\n    //   transparent: true,\n    //   opacity: CONFIG.shell.opacity,\n    //   side: THREE.DoubleSide,\n    //   depthWrite: false\n    // });\n\n    // 立方体外壳已被删除 - 只保留圆柱体和过渡效果\n    // const shellGeometry = this.createOpenBoxGeometry(\n    //   CONFIG.shell.size.width,\n    //   CONFIG.shell.size.height,\n    //   CONFIG.shell.size.depth\n    // );\n    // const shell = new THREE.Mesh(shellGeometry, this.shellMaterial);\n    // \n    // // 设置位置居中\n    // shell.position.set(4.5, 0, 0); // 稍微向前偏移以居中包裹CRT\n    // \n    // this.shellGroup.add(shell);\n    \n    // 创建两个独立的圆柱体\n    this.createCylinder1();\n    this.createCylinder2();\n    \n    // 创建旋转曲线连接\n    this.createRotationCurveConnection();\n    \n    // 创建超椭圆形状渐变\n    this.createSuperellipseTransition();\n    \n    // 设置初始可见性\n    this.shellGroup.visible = CONFIG.shell.visible;\n  }\n\n  /**\n   * 创建开放式盒子几何体（去掉右侧面，即X正方向的面）\n   * @param {number} width - 宽度\n   * @param {number} height - 高度 \n   * @param {number} depth - 深度\n   * @returns {THREE.BufferGeometry} 几何体\n   */\n  createOpenBoxGeometry(width, height, depth) {\n    const geometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY();\n    \n    const w = width / 2;\n    const h = height / 2;\n    const d = depth / 2;\n    \n    // 定义顶点位置 - 立方体的8个顶点\n    const vertices = [\n      // 左侧面 (X = -w)\n      -w, -h, -d,  -w, -h,  d,  -w,  h,  d,\n      -w, -h, -d,  -w,  h,  d,  -w,  h, -d,\n      \n      // 右侧面被删除 - 不添加这个面\n      \n      // 顶面 (Y = h)\n      -w,  h, -d,  -w,  h,  d,   w,  h,  d,\n      -w,  h, -d,   w,  h,  d,   w,  h, -d,\n      \n      // 底面 (Y = -h)\n      -w, -h, -d,   w, -h, -d,   w, -h,  d,\n      -w, -h, -d,   w, -h,  d,  -w, -h,  d,\n      \n      // 前面 (Z = d)\n      -w, -h,  d,   w, -h,  d,   w,  h,  d,\n      -w, -h,  d,   w,  h,  d,  -w,  h,  d,\n      \n      // 后面 (Z = -d)\n      -w, -h, -d,  -w,  h, -d,   w,  h, -d,\n      -w, -h, -d,   w,  h, -d,   w, -h, -d\n    ];\n    \n    // 定义法向量\n    const normals = [\n      // 左侧面\n      -1, 0, 0,  -1, 0, 0,  -1, 0, 0,\n      -1, 0, 0,  -1, 0, 0,  -1, 0, 0,\n      \n      // 顶面\n      0, 1, 0,  0, 1, 0,  0, 1, 0,\n      0, 1, 0,  0, 1, 0,  0, 1, 0,\n      \n      // 底面\n      0, -1, 0,  0, -1, 0,  0, -1, 0,\n      0, -1, 0,  0, -1, 0,  0, -1, 0,\n      \n      // 前面\n      0, 0, 1,  0, 0, 1,  0, 0, 1,\n      0, 0, 1,  0, 0, 1,  0, 0, 1,\n      \n      // 后面\n      0, 0, -1,  0, 0, -1,  0, 0, -1,\n      0, 0, -1,  0, 0, -1,  0, 0, -1\n    ];\n    \n    // 定义UV坐标\n    const uvs = [\n      // 左侧面\n      0, 0,  1, 0,  1, 1,\n      0, 0,  1, 1,  0, 1,\n      \n      // 顶面\n      0, 0,  1, 0,  1, 1,\n      0, 0,  1, 1,  0, 1,\n      \n      // 底面\n      0, 0,  1, 0,  1, 1,\n      0, 0,  1, 1,  0, 1,\n      \n      // 前面\n      0, 0,  1, 0,  1, 1,\n      0, 0,  1, 1,  0, 1,\n      \n      // 后面\n      0, 0,  1, 0,  1, 1,\n      0, 0,  1, 1,  0, 1\n    ];\n    \n    geometry.setAttribute('position', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(vertices, 3));\n    geometry.setAttribute('normal', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(normals, 3));\n    geometry.setAttribute('uv', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(uvs, 2));\n    \n    return geometry;\n  }\n\n  /**\n   * 创建开放式圆柱体几何体（沿X轴方向，去掉右端圆形面）\n   * @param {number} radius - 圆柱体半径\n   * @param {number} height - 圆柱体长度（沿X轴）\n   * @param {number} radialSegments - 径向分段数\n   * @returns {THREE.BufferGeometry} 几何体\n   */\n  createOpenCylinderGeometry(radius, height, radialSegments = 32) {\n    // 使用Three.js标准圆柱体几何体作为基础，确保法向量和光照计算正确\n    // 注意：openEnded设为false，这样两端都有封闭面，然后我们手动移除右端面\n    const baseGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* CylinderGeometry */.Ho_(radius, radius, height, radialSegments, 1, false);\n    \n    // 旋转90度使圆柱体沿X轴方向\n    baseGeometry.rotateZ(Math.PI / 2);\n    \n    // 获取几何体属性\n    const positions = baseGeometry.getAttribute('position');\n    const normals = baseGeometry.getAttribute('normal');\n    const uvs = baseGeometry.getAttribute('uv');\n    const indices = baseGeometry.getIndex();\n    \n    // 创建新的几何体，只保留侧面和左端面\n    const newGeometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BufferGeometry */.LoY();\n    \n    // 复制侧面顶点（Three.js圆柱体的侧面已经有正确的法向量）\n    const newPositions = [];\n    const newNormals = [];\n    const newUvs = [];\n    const newIndices = [];\n    \n    const posArray = positions.array;\n    const normArray = normals.array;\n    const uvArray = uvs.array;\n    const indexArray = indices.array;\n    \n    // 复制所有顶点和法向量（Three.js已经计算好了）\n    for (let i = 0; i < posArray.length; i += 3) {\n      newPositions.push(posArray[i], posArray[i + 1], posArray[i + 2]);\n      newNormals.push(normArray[i], normArray[i + 1], normArray[i + 2]);\n    }\n    \n    for (let i = 0; i < uvArray.length; i += 2) {\n      newUvs.push(uvArray[i], uvArray[i + 1]);\n    }\n    \n    // 过滤索引，只保留侧面和左端面，去掉右端面\n    const halfHeight = height / 2;\n    for (let i = 0; i < indexArray.length; i += 3) {\n      const i1 = indexArray[i] * 3;\n      const i2 = indexArray[i + 1] * 3;\n      const i3 = indexArray[i + 2] * 3;\n      \n      // 检查三角形是否在右端面（X > halfHeight - 0.01）\n      const x1 = posArray[i1];\n      const x2 = posArray[i2];\n      const x3 = posArray[i3];\n      \n      // 如果三角形不在右端面，则保留\n      if (!(x1 > halfHeight - 0.01 && x2 > halfHeight - 0.01 && x3 > halfHeight - 0.01)) {\n        newIndices.push(indexArray[i], indexArray[i + 1], indexArray[i + 2]);\n      }\n    }\n    \n    // 设置几何体属性\n    newGeometry.setAttribute('position', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(newPositions, 3));\n    newGeometry.setAttribute('normal', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(newNormals, 3));\n    newGeometry.setAttribute('uv', new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Float32BufferAttribute */.qtW(newUvs, 2));\n    newGeometry.setIndex(newIndices);\n    \n    // 重新计算法向量以确保光照正确\n    newGeometry.computeVertexNormals();\n    \n    return newGeometry;\n  }\n\n  /**\n   * 创建第一个圆柱体组件\n   */\n  createCylinder1() {\n    const config = CONFIG.shell.cylinder1;\n    \n    // 使用统一组件材质管理器获取标准材质，确保颜色一致性\n    this.cylinder1Material = unifiedComponentMaterial.getMaterial('standard');\n    \n    // 创建圆柱体几何体（使用独立的半径参数）\n    const cylinder1Geometry = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* CylinderGeometry */.Ho_(config.radius, config.radius, config.height, 32);\n    const cylinder1 = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(cylinder1Geometry, this.cylinder1Material);\n    \n    // 设置圆柱体位置和旋转\n    cylinder1.position.set(config.position.x, config.position.y, config.position.z);\n    cylinder1.rotation.set(config.rotation.x, config.rotation.y, config.rotation.z);\n    \n    // 设置可见性\n    cylinder1.visible = config.visible;\n    \n    // 添加到组中\n    this.shellGroup.add(cylinder1);\n    \n    // 保存圆柱体引用以便后续操作\n    this.cylinder1 = cylinder1;\n  }\n\n  /**\n   * 创建第二个圆柱体组件（去掉右侧圆形面）\n   */\n  createCylinder2() {\n    const config = CONFIG.shell.cylinder2;\n    \n    // 使用统一组件材质管理器获取标准材质，确保颜色一致性\n    this.cylinder2Material = unifiedComponentMaterial.getMaterial('standard');\n    \n    // 创建开放式圆柱体几何体（去掉右侧圆形面）\n    const cylinder2Geometry = this.createOpenCylinderGeometry(config.radius, config.height, 32);\n    const cylinder2 = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(cylinder2Geometry, this.cylinder2Material);\n    \n    // 设置圆柱体位置和旋转\n    cylinder2.position.set(config.position.x, config.position.y, config.position.z);\n    cylinder2.rotation.set(config.rotation.x, config.rotation.y, config.rotation.z);\n    \n    // 设置可见性\n    cylinder2.visible = config.visible;\n    \n    // 添加到组中\n    this.shellGroup.add(cylinder2);\n    \n    // 保存圆柱体引用以便后续操作\n    this.cylinder2 = cylinder2;\n    \n    // 创建cylinder2的爆炸效果\n    this.createCylinder2ExplodeEffect();\n  }\n\n  /**\n   * 创建旋转曲线连接\n   */\n  createRotationCurveConnection() {\n    const config = CONFIG.shell.rotationCurveConnection;\n    \n    if (!config || !config.visible) {\n      return;\n    }\n    \n    \n    // 创建圆柱体连接\n    this.cylinderConnection = new CylinderConnection(\n      CONFIG.shell.cylinder1,\n      CONFIG.shell.cylinder2,\n      config\n    );\n    \n    // 添加到组中\n    this.shellGroup.add(this.cylinderConnection.getConnection());\n    \n    // 创建旋转曲线连接爆炸效果\n    this.createConnectionExplodeEffect();\n  }\n\n  /**\n   * 创建超椭圆形状渐变\n   */\n  createSuperellipseTransition() {\n    const config = CONFIG.shell.superellipseTransition;\n    \n    if (!config || !config.visible) {\n      return;\n    }\n    \n    \n    // 准备起始配置（第一个圆柱体）\n    const startConfig = {\n      position: CONFIG.shell.cylinder1.position,\n      radius: CONFIG.shell.cylinder1.radius\n    };\n    \n    // 准备结束配置（适配荧光屏尺寸）\n    const endConfig = {\n      position: { x: 4.5, y: 0, z: 0 }, // 立方体中心位置\n      size: {\n        width: CONFIG.components.screen.width,   // 荧光屏宽度：4\n        height: CONFIG.components.screen.height, // 荧光屏高度：3\n        depth: CONFIG.shell.size.depth           // 保持原深度：4\n      }\n    };\n    \n    // 创建形状渐变\n    this.superellipseTransition = new SuperellipseTransition(\n      startConfig,\n      endConfig,\n      config\n    );\n    \n    // 添加到组中\n    this.shellGroup.add(this.superellipseTransition.getTransition());\n    \n    // 创建超椭圆形状渐变爆炸效果\n    this.createSuperellipseExplodeEffect();\n  }\n\n  /**\n   * 创建旋转曲线连接爆炸效果\n   */\n  createConnectionExplodeEffect() {\n    if (!this.cylinderConnection) {\n      console.warn('CylinderConnection not found, cannot create explode effect');\n      return;\n    }\n    \n    // 清理旧的爆炸效果实例\n    if (this.rotationCurveExplodeEffect) {\n      this.rotationCurveExplodeEffect.dispose();\n      this.rotationCurveExplodeEffect = null;\n    }\n    \n    // 获取连接网格（第一个连接网格）\n    const connectionMeshes = this.cylinderConnection.connectionMeshes;\n    if (!connectionMeshes || connectionMeshes.length === 0) {\n      console.warn('No connection meshes found');\n      return;\n    }\n    \n    // 创建爆炸效果实例\n    this.rotationCurveExplodeEffect = new RotationCurveExplodeEffect(\n      connectionMeshes[0], // 使用第一个连接网格\n      this.shellGroup\n    );\n  }\n\n  /**\n   * 创建cylinder2爆炸效果\n   */\n  createCylinder2ExplodeEffect() {\n    if (!this.cylinder2) {\n      console.warn('Cylinder2 not found, cannot create explode effect');\n      return;\n    }\n    \n    // 清理旧的爆炸效果实例\n    if (this.cylinder2ExplodeEffect) {\n      this.cylinder2ExplodeEffect.dispose();\n      this.cylinder2ExplodeEffect = null;\n    }\n    \n    // 创建爆炸效果实例\n    this.cylinder2ExplodeEffect = new Cylinder2ExplodeEffect(\n      this.cylinder2,\n      this.shellGroup\n    );\n  }\n\n  /**\n   * 创建超椭圆形状渐变爆炸效果\n   */\n  createSuperellipseExplodeEffect() {\n    if (!this.superellipseTransition) {\n      console.warn('SuperellipseTransition not found, cannot create explode effect');\n      return;\n    }\n    \n    // 清理旧的爆炸效果实例\n    if (this.superellipseExplodeEffect) {\n      this.superellipseExplodeEffect.dispose();\n      this.superellipseExplodeEffect = null;\n    }\n    \n    // 获取超椭圆的网格（第一个网格）\n    const transitionMeshes = this.superellipseTransition.meshes;\n    if (!transitionMeshes || transitionMeshes.length === 0) {\n      console.warn('No superellipse meshes found');\n      return;\n    }\n    \n    // 创建爆炸效果实例\n    this.superellipseExplodeEffect = new SuperellipseExplodeEffect(\n      transitionMeshes[0], // 使用第一个网格\n      this.shellGroup\n    );\n  }\n\n  /**\n   * 切换cylinder2爆炸效果\n   * @param {boolean} explode - 是否爆炸，默认为切换状态\n   * @returns {boolean} 当前爆炸状态\n   */\n  toggleCylinder2Explode(explode) {\n    if (!this.cylinder2ExplodeEffect) {\n      console.warn('Cylinder2 explode effect not initialized');\n      return false;\n    }\n    \n    return this.cylinder2ExplodeEffect.toggle(explode);\n  }\n\n  /**\n   * 获取cylinder2爆炸状态\n   * @returns {boolean} 是否处于爆炸状态\n   */\n  isCylinder2Exploded() {\n    return this.cylinder2ExplodeEffect ? this.cylinder2ExplodeEffect.isExploded() : false;\n  }\n\n  /**\n   * 切换旋转曲线连接爆炸效果\n   * @param {boolean} explode - 是否爆炸，默认为切换状态\n   * @returns {boolean} 当前爆炸状态\n   */\n  toggleConnectionExplode(explode) {\n    if (!this.rotationCurveExplodeEffect) {\n      console.warn('RotationCurve explode effect not initialized');\n      return false;\n    }\n    \n    return this.rotationCurveExplodeEffect.toggle(explode);\n  }\n\n  /**\n   * 获取旋转曲线连接爆炸状态\n   * @returns {boolean} 是否处于爆炸状态\n   */\n  isConnectionExploded() {\n    return this.rotationCurveExplodeEffect ? this.rotationCurveExplodeEffect.isExploded() : false;\n  }\n\n  /**\n   * 切换超椭圆形状渐变爆炸效果\n   * @param {boolean} explode - 是否爆炸，默认为切换状态\n   * @returns {boolean} 当前爆炸状态\n   */\n  toggleSuperellipseExplode(explode) {\n    if (!this.superellipseExplodeEffect) {\n      console.warn('Superellipse explode effect not initialized');\n      return false;\n    }\n    \n    return this.superellipseExplodeEffect.toggle(explode);\n  }\n\n  /**\n   * 获取超椭圆形状渐变爆炸状态\n   * @returns {boolean} 是否处于爆炸状态\n   */\n  isSuperellipseExploded() {\n    return this.superellipseExplodeEffect ? this.superellipseExplodeEffect.isExploded() : false;\n  }\n\n  /**\n   * 获取外壳组\n   */\n  getShell() {\n    return this.shellGroup;\n  }\n\n  /**\n   * 设置外壳可见性\n   */\n  setVisible(visible) {\n    this.shellGroup.visible = visible;\n  }\n\n  /**\n   * 设置外壳透明度\n   */\n  setOpacity(opacity) {\n    // 立方体外壳已删除，此方法不再有效\n    // this.shellMaterial.opacity = Math.max(0, Math.min(1, opacity));\n  }\n\n\n  /**\n   * 设置外壳位置\n   */\n  setPosition(x, y, z) {\n    this.shellGroup.position.set(x, y, z);\n  }\n\n  /**\n   * 设置第一个圆柱体位置\n   */\n  setCylinder1Position(x, y, z) {\n    if (this.cylinder1) {\n      this.cylinder1.position.set(x, y, z);\n    }\n  }\n\n  /**\n   * 设置第二个圆柱体位置\n   */\n  setCylinder2Position(x, y, z) {\n    if (this.cylinder2) {\n      this.cylinder2.position.set(x, y, z);\n    }\n  }\n\n  /**\n   * 获取外壳当前位置\n   */\n  getPosition() {\n    return this.shellGroup.position.clone();\n  }\n\n  /**\n   * 更新动画 - 外壳设置为静态，无动画效果\n   */\n  update(deltaTime) {\n    // 外壳保持静态，不进行任何动画更新\n    // 如果需要动画效果，可以在这里添加\n  }\n\n  /**\n   * 更新配置 - 实现响应式配置更新\n   */\n  updateConfig() {\n    // 立方体外壳材质已删除，不再需要更新\n    // if (this.shellMaterial) {\n    //   this.shellMaterial.opacity = CONFIG.shell.opacity;\n    // }\n    \n    // 更新第一个圆柱体配置\n    if (this.cylinder1Material && CONFIG.shell.cylinder1) {\n      this.cylinder1Material.color.setHex(parseInt(CONFIG.shell.cylinder1.color));\n      this.cylinder1Material.opacity = CONFIG.shell.cylinder1.opacity;\n    }\n    if (this.cylinder1 && CONFIG.shell.cylinder1) {\n      this.cylinder1.visible = CONFIG.shell.cylinder1.visible;\n      this.cylinder1.position.set(\n        CONFIG.shell.cylinder1.position.x,\n        CONFIG.shell.cylinder1.position.y,\n        CONFIG.shell.cylinder1.position.z\n      );\n      this.cylinder1.rotation.set(\n        CONFIG.shell.cylinder1.rotation.x,\n        CONFIG.shell.cylinder1.rotation.y,\n        CONFIG.shell.cylinder1.rotation.z\n      );\n    }\n    \n    // 更新第二个圆柱体配置\n    if (this.cylinder2Material && CONFIG.shell.cylinder2) {\n      this.cylinder2Material.color.setHex(parseInt(CONFIG.shell.cylinder2.color));\n      this.cylinder2Material.opacity = CONFIG.shell.cylinder2.opacity;\n    }\n    if (this.cylinder2 && CONFIG.shell.cylinder2) {\n      this.cylinder2.visible = CONFIG.shell.cylinder2.visible;\n      this.cylinder2.position.set(\n        CONFIG.shell.cylinder2.position.x,\n        CONFIG.shell.cylinder2.position.y,\n        CONFIG.shell.cylinder2.position.z\n      );\n      this.cylinder2.rotation.set(\n        CONFIG.shell.cylinder2.rotation.x,\n        CONFIG.shell.cylinder2.rotation.y,\n        CONFIG.shell.cylinder2.rotation.z\n      );\n    }\n    \n    // 更新旋转曲线连接配置\n    if (this.cylinderConnection && CONFIG.shell.rotationCurveConnection) {\n      this.cylinderConnection.updateConfig(\n        CONFIG.shell.cylinder1,\n        CONFIG.shell.cylinder2,\n        CONFIG.shell.rotationCurveConnection\n      );\n    } else if (!this.cylinderConnection && CONFIG.shell.rotationCurveConnection?.visible) {\n      // 如果连接不存在但配置中要求显示，则创建连接\n      // 注意：这里不应该重复创建，因为可能导致重复模型\n      console.warn('CylinderConnection not found, but config requires it to be visible');\n    }\n    \n    // 更新超椭圆形状渐变配置\n    if (this.superellipseTransition && CONFIG.shell.superellipseTransition) {\n      const startConfig = {\n        position: CONFIG.shell.cylinder1.position,\n        radius: CONFIG.shell.cylinder1.radius\n      };\n      const endConfig = {\n        position: { x: 4.5, y: 0, z: 0 },\n        size: {\n          width: CONFIG.components.screen.width,   // 荧光屏宽度：4\n          height: CONFIG.components.screen.height, // 荧光屏高度：3\n          depth: CONFIG.shell.size.depth           // 保持原深度：4\n        }\n      };\n      this.superellipseTransition.updateConfig(\n        startConfig,\n        endConfig,\n        CONFIG.shell.superellipseTransition\n      );\n    } else if (!this.superellipseTransition && CONFIG.shell.superellipseTransition?.visible) {\n      // 如果形状渐变不存在但配置中要求显示，则创建渐变\n      // 注意：这里不应该重复创建，因为可能导致重复模型\n      console.warn('SuperellipseTransition not found, but config requires it to be visible');\n    }\n    \n    // 更新可见性\n    this.shellGroup.visible = CONFIG.shell.visible;\n  }\n\n  /**\n   * 设置第一个圆柱体旋转\n   */\n  setCylinder1Rotation(x, y, z) {\n    if (this.cylinder1) {\n      this.cylinder1.rotation.set(x, y, z);\n    }\n  }\n\n  /**\n   * 设置第二个圆柱体旋转\n   */\n  setCylinder2Rotation(x, y, z) {\n    if (this.cylinder2) {\n      this.cylinder2.rotation.set(x, y, z);\n    }\n  }\n\n  /**\n   * 获取第一个圆柱体当前旋转\n   */\n  getCylinder1Rotation() {\n    return this.cylinder1 ? this.cylinder1.rotation.clone() : new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Euler */.O9p();\n  }\n\n  /**\n   * 获取第二个圆柱体当前旋转\n   */\n  getCylinder2Rotation() {\n    return this.cylinder2 ? this.cylinder2.rotation.clone() : new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Euler */.O9p();\n  }\n\n  /**\n   * 设置第一个圆柱体可见性\n   */\n  setCylinder1Visible(visible) {\n    if (this.cylinder1) {\n      this.cylinder1.visible = visible;\n    }\n  }\n\n  /**\n   * 设置第二个圆柱体可见性\n   */\n  setCylinder2Visible(visible) {\n    if (this.cylinder2) {\n      this.cylinder2.visible = visible;\n    }\n  }\n\n  /**\n   * 设置第一个圆柱体颜色\n   */\n  setCylinder1Color(color) {\n    if (this.cylinder1Material) {\n      this.cylinder1Material.color.setHex(color);\n    }\n  }\n\n  /**\n   * 设置第二个圆柱体颜色\n   */\n  setCylinder2Color(color) {\n    if (this.cylinder2Material) {\n      this.cylinder2Material.color.setHex(color);\n    }\n  }\n\n  /**\n   * 设置第一个圆柱体透明度\n   */\n  setCylinder1Opacity(opacity) {\n    if (this.cylinder1Material) {\n      this.cylinder1Material.opacity = Math.max(0, Math.min(1, opacity));\n    }\n  }\n\n  /**\n   * 设置第二个圆柱体透明度\n   */\n  setCylinder2Opacity(opacity) {\n    if (this.cylinder2Material) {\n      this.cylinder2Material.opacity = Math.max(0, Math.min(1, opacity));\n    }\n  }\n\n  /**\n   * 设置旋转曲线连接的位置偏移\n   * @param {number} x - X轴偏移\n   * @param {number} y - Y轴偏移\n   * @param {number} z - Z轴偏移\n   */\n  setConnectionPositionOffset(x, y, z) {\n    if (this.cylinderConnection) {\n      this.cylinderConnection.setPositionOffset(x, y, z);\n    }\n  }\n\n  /**\n   * 设置旋转曲线连接的旋转偏移\n   * @param {number} x - X轴旋转偏移（弧度）\n   * @param {number} y - Y轴旋转偏移（弧度）\n   * @param {number} z - Z轴旋转偏移（弧度）\n   */\n  setConnectionRotationOffset(x, y, z) {\n    if (this.cylinderConnection) {\n      this.cylinderConnection.setRotationOffset(x, y, z);\n    }\n  }\n\n  /**\n   * 直接设置旋转曲线连接的位置\n   * @param {number} x - X坐标\n   * @param {number} y - Y坐标\n   * @param {number} z - Z坐标\n   */\n  setConnectionPosition(x, y, z) {\n    if (this.cylinderConnection) {\n      this.cylinderConnection.setPosition(x, y, z);\n    }\n  }\n\n  /**\n   * 直接设置旋转曲线连接的旋转\n   * @param {number} x - X轴旋转（弧度）\n   * @param {number} y - Y轴旋转（弧度）\n   * @param {number} z - Z轴旋转（弧度）\n   */\n  setConnectionRotation(x, y, z) {\n    if (this.cylinderConnection) {\n      this.cylinderConnection.setRotation(x, y, z);\n    }\n  }\n\n  /**\n   * 获取旋转曲线连接的当前位置\n   */\n  getConnectionPosition() {\n    return this.cylinderConnection ? this.cylinderConnection.getPosition() : new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0();\n  }\n\n  /**\n   * 获取旋转曲线连接的当前旋转\n   */\n  getConnectionRotation() {\n    return this.cylinderConnection ? this.cylinderConnection.getRotation() : new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Euler */.O9p();\n  }\n\n  /**\n   * 获取旋转曲线连接的位置偏移\n   */\n  getConnectionPositionOffset() {\n    return this.cylinderConnection ? this.cylinderConnection.getPositionOffset() : { x: 0, y: 0, z: 0 };\n  }\n\n  /**\n   * 获取旋转曲线连接的旋转偏移\n   */\n  getConnectionRotationOffset() {\n    return this.cylinderConnection ? this.cylinderConnection.getRotationOffset() : { x: 0, y: 0, z: 0 };\n  }\n\n  /**\n   * 设置旋转曲线连接可见性\n   */\n  setConnectionVisible(visible) {\n    if (this.cylinderConnection) {\n      this.cylinderConnection.setVisible(visible);\n    }\n  }\n\n  /**\n   * 设置旋转曲线连接颜色\n   */\n  setConnectionColor(color) {\n    if (this.cylinderConnection) {\n      this.cylinderConnection.setColor(color);\n    }\n  }\n\n  /**\n   * 设置旋转曲线连接透明度\n   */\n  setConnectionOpacity(opacity) {\n    if (this.cylinderConnection) {\n      this.cylinderConnection.setOpacity(opacity);\n    }\n  }\n\n  /**\n   * 设置超椭圆形状渐变的位置偏移\n   * @param {number} x - X轴偏移\n   * @param {number} y - Y轴偏移\n   * @param {number} z - Z轴偏移\n   */\n  setTransitionPositionOffset(x, y, z) {\n    if (this.superellipseTransition) {\n      this.superellipseTransition.setPositionOffset(x, y, z);\n    }\n  }\n\n  /**\n   * 设置超椭圆形状渐变的旋转偏移\n   * @param {number} x - X轴旋转偏移（弧度）\n   * @param {number} y - Y轴旋转偏移（弧度）\n   * @param {number} z - Z轴旋转偏移（弧度）\n   */\n  setTransitionRotationOffset(x, y, z) {\n    if (this.superellipseTransition) {\n      this.superellipseTransition.setRotationOffset(x, y, z);\n    }\n  }\n\n  /**\n   * 直接设置超椭圆形状渐变的位置\n   * @param {number} x - X坐标\n   * @param {number} y - Y坐标\n   * @param {number} z - Z坐标\n   */\n  setTransitionPosition(x, y, z) {\n    if (this.superellipseTransition) {\n      this.superellipseTransition.setPosition(x, y, z);\n    }\n  }\n\n  /**\n   * 直接设置超椭圆形状渐变的旋转\n   * @param {number} x - X轴旋转（弧度）\n   * @param {number} y - Y轴旋转（弧度）\n   * @param {number} z - Z轴旋转（弧度）\n   */\n  setTransitionRotation(x, y, z) {\n    if (this.superellipseTransition) {\n      this.superellipseTransition.setRotation(x, y, z);\n    }\n  }\n\n  /**\n   * 获取超椭圆形状渐变的当前位置\n   */\n  getTransitionPosition() {\n    return this.superellipseTransition ? this.superellipseTransition.getPosition() : new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0();\n  }\n\n  /**\n   * 获取超椭圆形状渐变的当前旋转\n   */\n  getTransitionRotation() {\n    return this.superellipseTransition ? this.superellipseTransition.getRotation() : new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Euler */.O9p();\n  }\n\n  /**\n   * 获取超椭圆形状渐变的位置偏移\n   */\n  getTransitionPositionOffset() {\n    return this.superellipseTransition ? this.superellipseTransition.getPositionOffset() : { x: 0, y: 0, z: 0 };\n  }\n\n  /**\n   * 获取超椭圆形状渐变的旋转偏移\n   */\n  getTransitionRotationOffset() {\n    return this.superellipseTransition ? this.superellipseTransition.getRotationOffset() : { x: 0, y: 0, z: 0 };\n  }\n\n  /**\n   * 设置超椭圆形状渐变可见性\n   */\n  setTransitionVisible(visible) {\n    if (this.superellipseTransition) {\n      this.superellipseTransition.setVisible(visible);\n    }\n  }\n\n  /**\n   * 设置超椭圆形状渐变颜色\n   */\n  setTransitionColor(color) {\n    if (this.superellipseTransition) {\n      this.superellipseTransition.setColor(color);\n    }\n  }\n\n  /**\n   * 设置超椭圆形状渐变透明度\n   */\n  setTransitionOpacity(opacity) {\n    if (this.superellipseTransition) {\n      this.superellipseTransition.setOpacity(opacity);\n    }\n  }\n\n  /**\n   * 动态更新超椭圆指数（用于动画效果）\n   * @param {number} startExponent - 起始指数（圆形：2.0）\n   * @param {number} endExponent - 结束指数（方形：8.0+）\n   */\n  updateTransitionExponents(startExponent, endExponent) {\n    if (this.superellipseTransition) {\n      this.superellipseTransition.updateExponents(startExponent, endExponent);\n    }\n  }\n\n  /**\n   * 销毁资源\n   */\n  dispose() {\n    // 立方体外壳材质已删除，不需要清理\n    // if (this.shellMaterial) {\n    //   this.shellMaterial.dispose();\n    // }\n    \n    if (this.cylinder1Material) {\n      this.cylinder1Material.dispose();\n    }\n    \n    if (this.cylinder2Material) {\n      this.cylinder2Material.dispose();\n    }\n    \n    // 清理旋转曲线连接\n    if (this.cylinderConnection) {\n      this.cylinderConnection.dispose();\n      this.cylinderConnection = null;\n    }\n    \n    // 清理超椭圆形状渐变\n    if (this.superellipseTransition) {\n      this.superellipseTransition.dispose();\n      this.superellipseTransition = null;\n    }\n    \n    // 清理cylinder2爆炸效果\n    if (this.cylinder2ExplodeEffect) {\n      this.cylinder2ExplodeEffect.dispose();\n      this.cylinder2ExplodeEffect = null;\n    }\n    \n    // 清理旋转曲线连接爆炸效果\n    if (this.rotationCurveExplodeEffect) {\n      this.rotationCurveExplodeEffect.dispose();\n      this.rotationCurveExplodeEffect = null;\n    }\n    \n    // 清理超椭圆形状渐变爆炸效果\n    if (this.superellipseExplodeEffect) {\n      this.superellipseExplodeEffect.dispose();\n      this.superellipseExplodeEffect = null;\n    }\n    \n    this.shellGroup.traverse((child) => {\n      if (child.geometry) child.geometry.dispose();\n      if (child.material) child.material.dispose();\n    });\n    \n    // 清理圆柱体引用\n    this.cylinder1 = null;\n    this.cylinder2 = null;\n  }\n}\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\materials\\MaterialManager.js\n\r\n\r\n\r\n/**\r\n * 材质管理器类\r\n * 负责创建和管理所有3D材质，包括贴图加载\r\n */\r\nclass MaterialManager {\r\n  constructor() {\r\n    this.textureLoader = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* TextureLoader */.Tap();\r\n    this.materials = {};\r\n    this.textures = {};\r\n  }\r\n\r\n  /**\r\n   * 初始化所有材质\r\n   * @returns {Promise} 返回Promise，在所有贴图加载完成后解析\r\n   */\r\n  async initializeMaterials() {\r\n    console.log('正在初始化材质...');\r\n    \r\n    try {\r\n      // 加载金属贴图\r\n      await this.loadMetalTextures();\r\n      \r\n      // 创建所有材质\r\n      this.createMetalMaterial();\r\n      this.createPlateMaterial();\r\n      this.createScreenMaterial();\r\n      this.createGlowPointMaterial();\r\n      \r\n      console.log('材质初始化完成');\r\n      return this.materials;\r\n    } catch (error) {\r\n      console.error('材质初始化失败:', error);\r\n      // 如果贴图加载失败，创建无贴图的材质\r\n      this.createFallbackMaterials();\r\n      return this.materials;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载金属贴图\r\n   * @returns {Promise} 贴图加载Promise\r\n   */\r\n  async loadMetalTextures() {\r\n    const loadPromises = [];\r\n    \r\n    // 加载电子枪金属贴图\r\n    const metalConfig = CONFIG.materials.metal;\r\n    if (metalConfig.textures) {\r\n      if (metalConfig.textures.map) {\r\n        loadPromises.push(this.loadTexture('metalMap', metalConfig.textures.map));\r\n      }\r\n      \r\n      if (metalConfig.textures.normalMap) {\r\n        loadPromises.push(this.loadTexture('metalNormal', metalConfig.textures.normalMap));\r\n      }\r\n      \r\n      if (metalConfig.textures.roughnessMap) {\r\n        loadPromises.push(this.loadTexture('metalRoughness', metalConfig.textures.roughnessMap));\r\n      }\r\n      \r\n      if (metalConfig.textures.metalnessMap) {\r\n        loadPromises.push(this.loadTexture('metalMetalness', metalConfig.textures.metalnessMap));\r\n      }\r\n    }\r\n    \r\n    // 加载偏转板贴图\r\n    const plateConfig = CONFIG.materials.plate;\r\n    if (plateConfig.textures) {\r\n      if (plateConfig.textures.map) {\r\n        loadPromises.push(this.loadTexture('plateMap', plateConfig.textures.map));\r\n      }\r\n      \r\n      if (plateConfig.textures.normalMap) {\r\n        loadPromises.push(this.loadTexture('plateNormal', plateConfig.textures.normalMap));\r\n      }\r\n      \r\n      if (plateConfig.textures.roughnessMap) {\r\n        loadPromises.push(this.loadTexture('plateRoughness', plateConfig.textures.roughnessMap));\r\n      }\r\n      \r\n      if (plateConfig.textures.metalnessMap) {\r\n        loadPromises.push(this.loadTexture('plateMetalness', plateConfig.textures.metalnessMap));\r\n      }\r\n    }\r\n    \r\n    await Promise.all(loadPromises);\r\n  }\r\n\r\n  /**\r\n   * 加载单个贴图\r\n   * @param {string} name - 贴图名称\r\n   * @param {string} path - 贴图路径\r\n   * @returns {Promise} 贴图加载Promise\r\n   */\r\n  loadTexture(name, path) {\r\n    return new Promise((resolve, reject) => {\r\n      this.textureLoader.load(\r\n        path,\r\n        (texture) => {\r\n          // 设置贴图参数\r\n          texture.wrapS = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* RepeatWrapping */.GJx;\r\n          texture.wrapT = D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* RepeatWrapping */.GJx;\r\n          texture.flipY = false;\r\n          \r\n          this.textures[name] = texture;\r\n          console.log(`贴图加载成功: ${name} (${path})`);\r\n          resolve(texture);\r\n        },\r\n        (progress) => {\r\n          console.log(`贴图加载进度: ${name} - ${(progress.loaded / progress.total * 100)}%`);\r\n        },\r\n        (error) => {\r\n          console.warn(`贴图加载失败: ${name} (${path})`, error);\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 创建金属材质（电子枪）\r\n   */\r\n  createMetalMaterial() {\r\n    const metalConfig = CONFIG.materials.metal;\r\n    \r\n    const materialProps = {\r\n      color: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(metalConfig.color),\r\n      metalness: metalConfig.metalness,\r\n      roughness: metalConfig.roughness,\r\n      envMapIntensity: 1.0\r\n    };\r\n\r\n    // 如果有贴图，添加到材质\r\n    if (this.textures.metalMap) {\r\n      materialProps.map = this.textures.metalMap;\r\n    }\r\n    \r\n    if (this.textures.metalNormal) {\r\n      materialProps.normalMap = this.textures.metalNormal;\r\n      materialProps.normalScale = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(1, 1);\r\n    }\r\n    \r\n    if (this.textures.metalRoughness) {\r\n      materialProps.roughnessMap = this.textures.metalRoughness;\r\n    }\r\n    \r\n    if (this.textures.metalMetalness) {\r\n      materialProps.metalnessMap = this.textures.metalMetalness;\r\n    }\r\n\r\n    this.materials.metal = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j(materialProps);\r\n  }\r\n\r\n  /**\r\n   * 创建偏转板材质\r\n   */\r\n  createPlateMaterial() {\r\n    const plateConfig = CONFIG.materials.plate;\r\n    \r\n    const materialProps = {\r\n      color: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(plateConfig.color),\r\n      metalness: plateConfig.metalness,\r\n      roughness: plateConfig.roughness,\r\n      envMapIntensity: 1.0  // 与电子枪保持一致\r\n    };\r\n\r\n    // 如果有贴图，添加到材质\r\n    if (this.textures.plateMap) {\r\n      materialProps.map = this.textures.plateMap;\r\n    }\r\n    \r\n    if (this.textures.plateNormal) {\r\n      materialProps.normalMap = this.textures.plateNormal;\r\n      materialProps.normalScale = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector2 */.I9Y(1, 1);\r\n    }\r\n    \r\n    if (this.textures.plateRoughness) {\r\n      materialProps.roughnessMap = this.textures.plateRoughness;\r\n    }\r\n    \r\n    if (this.textures.plateMetalness) {\r\n      materialProps.metalnessMap = this.textures.plateMetalness;\r\n    }\r\n\r\n    this.materials.plate = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j(materialProps);\r\n    \r\n    // 调试输出偏转板材质信息\r\n    console.log('🔧 偏转板材质创建完成:', {\r\n      hasMap: !!materialProps.map,\r\n      hasNormalMap: !!materialProps.normalMap,\r\n      color: materialProps.color.getHexString(),\r\n      metalness: materialProps.metalness,\r\n      roughness: materialProps.roughness,\r\n      envMapIntensity: materialProps.envMapIntensity\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 创建荧光屏材质\r\n   */\r\n  createScreenMaterial() {\r\n    const screenConfig = CONFIG.materials.screen;\r\n    \r\n    this.materials.screen = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j({\r\n      color: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(screenConfig.color),\r\n      emissive: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(CONFIG.screen.color),\r\n      emissiveIntensity: CONFIG.screen.intensity,\r\n      roughness: screenConfig.roughness,\r\n      side: D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* DoubleSide */.$EB,\r\n      transparent: true,        // 启用透明度，允许粒子透过\r\n      opacity: 0.9,            // 设置轻微透明度\r\n      depthTest: true,         // 启用深度测试\r\n      depthWrite: false        // 禁用深度写入，允许后面的粒子显示\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 创建发光点材质\r\n   */\r\n  createGlowPointMaterial() {\r\n    this.materials.glowPoint = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshBasicMaterial */.V9B({\r\n      color: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(CONFIG.dotLight.color),\r\n      transparent: true,\r\n      opacity: CONFIG.materials.glow.opacity\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 创建备用材质（当贴图加载失败时使用）\r\n   */\r\n  createFallbackMaterials() {\r\n    console.log('创建备用材质（无贴图）');\r\n    \r\n    this.materials.metal = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j({\r\n      color: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(CONFIG.materials.metal.color),\r\n      metalness: CONFIG.materials.metal.metalness,\r\n      roughness: CONFIG.materials.metal.roughness,\r\n      envMapIntensity: 1.0\r\n    });\r\n\r\n    this.materials.plate = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* MeshStandardMaterial */._4j({\r\n      color: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(CONFIG.materials.plate.color),\r\n      metalness: CONFIG.materials.plate.metalness,\r\n      roughness: CONFIG.materials.plate.roughness,\r\n      envMapIntensity: 1.0  // 与电子枪保持一致\r\n    });\r\n\r\n    this.createScreenMaterial();\r\n    this.createGlowPointMaterial();\r\n  }\r\n\r\n  /**\r\n   * 获取指定材质\r\n   * @param {string} name - 材质名称\r\n   * @returns {THREE.Material} 材质对象\r\n   */\r\n  getMaterial(name) {\r\n    return this.materials[name];\r\n  }\r\n\r\n  /**\r\n   * 更新材质属性\r\n   * @param {string} materialName - 材质名称\r\n   * @param {Object} properties - 要更新的属性\r\n   */\r\n  updateMaterial(materialName, properties) {\r\n    const material = this.materials[materialName];\r\n    if (material) {\r\n      Object.assign(material, properties);\r\n      material.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 释放所有材质和贴图资源\r\n   */\r\n  dispose() {\r\n    // 释放贴图\r\n    Object.values(this.textures).forEach(texture => {\r\n      texture.dispose();\r\n    });\r\n\r\n    // 释放材质\r\n    Object.values(this.materials).forEach(material => {\r\n      material.dispose();\r\n    });\r\n\r\n    this.textures = {};\r\n    this.materials = {};\r\n  }\r\n}\r\n\n;// D:\\Users\\asus\\Desktop\\web项目\\demo1\\src\\main.js\n// ===== 基础导入 =====\n // 三维库\n // 轨道控制器\n // 动画库\n\n// ===== 导入 switcher 模块（ES6 导入，并在 DOM 就绪后初始化） =====\n\n\n\n// ===== 导入自定义模块 =====\n\n\n  // 配置文件\n  // GUI控制器\n  // UI控制器\n  // 波形生成器\n  // 电子束\n  // 荧光屏\n  // 标签系统\n  // 分解视图\n  // 演示动画\n  // CRT外壳\n  // 材质管理器\n  // 统一组件材质管理器\n\n// ===== 全局变量 =====\nlet scene, camera, renderer, controls;  // 场景、相机、渲染器、控制器\nlet electronBeam, waveformGenerator, screenController;  // 电子束、波形生成器、荧光屏控制器\nlet guiController, uiController;  // GUI控制器、UI控制器\nlet labelSystem, explodedView, demoAnimation;  // 标签系统、分解视图、演示动画\nlet crtShell;  // CRT外壳\nlet materialManager;  // 材质管理器\n\n// 创建 TWEEN Group 管理动画（解决 TWEEN.update() 弃用问题）\nconst tweenGroup = new D_Users_asus_Desktop_web_demo1_node_modules_tweenjs_tween_js_dist_tween_esm/* Group */.YJ();\n\n// ===== 热重载支持 =====\nif (false) // removed by dead control flow\n{}\n\n// ===== 场景对象引用 =====\nlet gun, gunHead, v1, v2, h1, h2, screen;  // 电子枪、电子枪头、垂直偏转板、水平偏转板、荧光屏    \n\n// ===== 工具函数 =====\n/**\n * 解析颜色值，支持多种格式\n * @param {string|number} color - 颜色值（可以是 \"#ffffff\", \"0xffffff\", RGB等格式）\n * @returns {number|null} - 解析后的十六进制数值，失败返回null\n */\nfunction parseColor(color) {\n  try {\n    if (typeof color === 'number') {\n      return color;\n    }\n    \n    if (typeof color === 'string') {\n      // 处理十六进制格式 \"0xffffff\"\n      if (color.startsWith('0x')) {\n        return parseInt(color, 16);\n      }\n      \n      // 处理CSS十六进制格式 \"#ffffff\"\n      if (color.startsWith('#')) {\n        return parseInt(color.replace('#', '0x'), 16);\n      }\n      \n      // 处理纯十六进制字符串 \"ffffff\"\n      if (/^[0-9a-fA-F]{6}$/.test(color)) {\n        return parseInt('0x' + color, 16);\n      }\n      \n      // 尝试直接解析\n      const parsed = parseInt(color, 16);\n      if (!isNaN(parsed)) {\n        return parsed;\n      }\n    }\n    \n    console.warn('无法解析颜色值:', color);\n    return null;\n  } catch (error) {\n    console.error('颜色解析错误:', error, '输入值:', color);\n    return null;\n  }\n}\n\n// ===== 初始化函数 =====\nasync function init() {\n  console.log('初始化应用...');\n  initScene(); // 初始化场景\n  initCamera(); // 初始化相机\n  initRenderer(); // 初始化渲染器\n  initControls(); // 初始化控制器\n  initLights(); // 初始化光源\n  initGrid(); // 初始化网格\n  await initMaterials(); // 初始化材质（异步）\n  initComponents(); // 初始化组件\n  console.log('初始化标签系统...');\n  initLabelSystem(); // 初始化标签系统\n  console.log('初始化分解视图...');\n  initExplodedView(); // 初始化分解视图\n  console.log('初始化GUI...');\n  initGui(); // 初始化GUI（需要在演示动画之前初始化）\n  console.log('初始化演示动画...');\n  initDemoAnimation(); // 初始化演示动画\n  console.log('初始化UI控制器...');\n  initUIController(); // 初始化UI控制器\n  \n  // 初始化波形显示\n  updateScreenWaveform();\n  \n  // 初始化电子束（确保启动时就有电子束显示）\n  updateElectronBeam();\n  \n  // 开始动画循环\n  animate(); // 开始动画循环\n  \n  // 窗口自适应\n  window.addEventListener('resize', onWindowResize);   // 窗口大小调整事件监听\n  \n  console.log('应用初始化完成');\n}\n\n// ===== 场景初始化 =====\nfunction initScene() {\n  scene = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Scene */.Z58(); // 创建场景\n  scene.background = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Color */.Q1f(CONFIG.scene.background); // 设置场景背景颜色\n}\n\n// ===== 相机初始化 =====\nfunction initCamera() {\n  camera = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* PerspectiveCamera */.ubm( // 透视相机\n    CONFIG.camera.fov, // 视角\n    window.innerWidth / window.innerHeight, // 宽高比\n    CONFIG.camera.near, // 近截面\n    CONFIG.camera.far // 远截面\n  );\n  camera.position.set(CONFIG.camera.position.x, CONFIG.camera.position.y, CONFIG.camera.position.z); // 设置相机位置\n}\n\n// ===== 渲染器初始化 =====\nfunction initRenderer() {\n  renderer = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* WebGLRenderer */.JeP({ antialias: true }); // 创建渲染器\n  \n  // 高DPI屏幕适配\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  renderer.setPixelRatio(Math.min(devicePixelRatio, 2)); // 限制最大DPI比率为2\n  renderer.setSize(window.innerWidth, window.innerHeight); // 设置渲染器大小\n  \n  document.body.appendChild(renderer.domElement); // 将渲染器添加到文档中\n}\n\n// ===== 控制器初始化 =====\nfunction initControls() { \n  controls = new D_Users_asus_Desktop_web_demo1_node_modules_three_examples_jsm_controls_OrbitControls/* OrbitControls */.N(camera, renderer.domElement); // 创建控制器\n  controls.enableDamping = true; // 启用阻尼\n}\n\n// ===== 光源初始化 =====\nfunction initLights() { \n  // 环境光 - 为金属材质提供基础照明\n  scene.add(new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* AmbientLight */.$p8(0xffffff, 0.4)); \n  \n  // 主要定向光 - 模拟太阳光，增强金属反射效果\n  const directionalLight = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* DirectionalLight */.ZyN(0xffffff, 0.8);\n  directionalLight.position.set(10, 10, 5);\n  directionalLight.castShadow = true;\n  scene.add(directionalLight);\n  \n  // 补充点光源 - 从不同角度照亮金属表面\n  const pointLight1 = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* PointLight */.HiM(0xffffff, 0.6);\n  pointLight1.position.set(-10, 8, 8);\n  scene.add(pointLight1);\n  \n  // 第二个点光源 - 增加金属材质的高光效果\n  const pointLight2 = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* PointLight */.HiM(0xf0f0f0, 0.4);\n  pointLight2.position.set(5, -5, 10);\n  scene.add(pointLight2);\n}\n\n// ===== 网格地面初始化 =====\nfunction initGrid() {\n  const grid = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* GridHelper */.fTw(\n    CONFIG.scene.grid.size, \n    CONFIG.scene.grid.divisions, \n    CONFIG.scene.grid.color1, \n    CONFIG.scene.grid.color2\n  ); // 创建网格\n  grid.position.set(\n    CONFIG.scene.grid.position.x, \n    CONFIG.scene.grid.position.y, \n    CONFIG.scene.grid.position.z\n  ); // 设置网格位置\n  scene.add(grid); // 将网格添加到场景中\n}\n\n// ===== 材质初始化 =====\nasync function initMaterials() {\n  console.log('初始化材质管理器...');\n  materialManager = new MaterialManager();\n  await materialManager.initializeMaterials();\n  \n  console.log('初始化统一组件材质管理器...');\n  await unifiedComponentMaterial.initialize();\n  \n  console.log('材质初始化完成');\n}\n\n// ===== 组件初始化 =====\nfunction initComponents() {\n  // 从材质管理器获取材质\n  const metalMat = materialManager.getMaterial('metal');\n  const plateMat = materialManager.getMaterial('plate');\n  const screenMat = materialManager.getMaterial('screen');\n  const glowPointMat = materialManager.getMaterial('glowPoint');\n\n  // 电子枪\n  gun = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(\n    new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* CylinderGeometry */.Ho_(CONFIG.components.gun.radius, 0.3, CONFIG.components.gun.height, 32),\n    metalMat\n  );\n  gun.rotation.z = Math.PI / 2;\n  gun.position.set(CONFIG.components.gun.position.x, CONFIG.components.gun.position.y, CONFIG.components.gun.position.z);\n  scene.add(gun);\n\n  gunHead = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(\n    new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* CylinderGeometry */.Ho_(CONFIG.components.gunHead.radius, CONFIG.components.gunHead.radius, CONFIG.components.gunHead.height, 32),\n    metalMat\n  );\n  gunHead.rotation.z = Math.PI / 2;\n  gunHead.position.set(CONFIG.components.gunHead.position.x, CONFIG.components.gunHead.position.y, CONFIG.components.gunHead.position.z);\n  scene.add(gunHead);\n\n  // 垂直偏转板\n  const vGeom = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BoxGeometry */.iNn(CONFIG.components.verticalPlates.width, CONFIG.components.verticalPlates.height, CONFIG.components.verticalPlates.depth);\n  v1 = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(vGeom, plateMat);\n  v2 = v1.clone();\n\n  v1.rotation.x = Math.PI / 2;\n  v2.rotation.x = Math.PI / 2;\n  // 再绕 Z 轴 90°\n  v1.rotation.y += Math.PI / 2;\n  v2.rotation.y += Math.PI / 2;\n\n  v1.position.set(CONFIG.components.verticalPlates.positions[0].x, CONFIG.components.verticalPlates.positions[0].y, CONFIG.components.verticalPlates.positions[0].z);\n  v2.position.set(CONFIG.components.verticalPlates.positions[1].x, CONFIG.components.verticalPlates.positions[1].y, CONFIG.components.verticalPlates.positions[1].z);\n  scene.add(v1, v2);\n\n  // 水平偏转板\n  const hGeom = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* BoxGeometry */.iNn(CONFIG.components.horizontalPlates.width, CONFIG.components.horizontalPlates.height, CONFIG.components.horizontalPlates.depth);\n  h1 = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(hGeom, plateMat);\n  h2 = h1.clone();\n\n  h1.rotation.x = -Math.PI / 2;\n  h2.rotation.x = -Math.PI / 2;\n\n  h1.position.set(CONFIG.components.horizontalPlates.positions[0].x, CONFIG.components.horizontalPlates.positions[0].y, CONFIG.components.horizontalPlates.positions[0].z);\n  h2.position.set(CONFIG.components.horizontalPlates.positions[1].x, CONFIG.components.horizontalPlates.positions[1].y, CONFIG.components.horizontalPlates.positions[1].z);\n  scene.add(h1, h2);\n\n  // 荧光屏\n  screen = new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Mesh */.eaF(new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* PlaneGeometry */.bdM(CONFIG.components.screen.width, CONFIG.components.screen.height), screenMat); // 创建荧光屏\n  screen.position.set(CONFIG.components.screen.position.x, CONFIG.components.screen.position.y, CONFIG.components.screen.position.z); // 设置荧光屏位置\n  screen.rotation.y = -Math.PI / 2; // 设置荧光屏旋转\n  screen.renderOrder = 1; // 设置渲染顺序，确保在电子粒子之前渲染\n  scene.add(screen); // 将荧光屏添加到场景中\n   \n  \n  // 初始化电子束控制器\n  electronBeam = new ElectronBeam(scene);\n  \n  // 初始化波形生成器\n  waveformGenerator = new WaveformGenerator();\n  \n  // 设置波形重置回调，在新周期开始时清除回扫线\n  waveformGenerator.setWaveformResetCallback(() => {\n    if (electronBeam) {\n      electronBeam.startNewTraceSegment();\n    }\n  });\n  \n  // 初始化荧光屏控制器\n  screenController = new Screen(scene, screen);\n  \n  // 初始化CRT外壳\n  crtShell = new CRTShell();\n  scene.add(crtShell.getShell());\n  \n  // 初始化连接位置演示（使其在全局可用）\n  window.connectionDemo = new ConnectionPositionDemo(crtShell);\n  \n  // 初始化超椭圆形状渐变演示（使其在全局可用）\n  window.transitionDemo = new SuperellipseTransitionDemo(crtShell);\n}\n\n// ===== 标签系统初始化 =====\nfunction initLabelSystem() {\n  // 创建标签系统\n  labelSystem = new LabelSystem(scene, document.body);\n  \n  // 为各组件添加标签\n  const componentLabels = [\n    { id: 'gun', target: gun, text: CONFIG.descriptions.gun.name, offset: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0.5, 0), description: CONFIG.descriptions.gun.description },\n    { id: 'gunHead', target: gunHead, text: CONFIG.descriptions.gunHead.name, offset: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0.3, 0), description: CONFIG.descriptions.gunHead.description },\n    { id: 'v1', target: v1, text: CONFIG.descriptions.v1.name, offset: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0.3, 0), description: CONFIG.descriptions.v1.description },\n    { id: 'v2', target: v2, text: CONFIG.descriptions.v2.name, offset: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, -0.3, 0), description: CONFIG.descriptions.v2.description },\n    { id: 'h1', target: h1, text: CONFIG.descriptions.h1.name, offset: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0, 0.3), description: CONFIG.descriptions.h1.description },\n    { id: 'h2', target: h2, text: CONFIG.descriptions.h2.name, offset: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0, 0, -0.3), description: CONFIG.descriptions.h2.description },\n    { id: 'screen', target: screen, text: CONFIG.descriptions.screen.name, offset: new D_Users_asus_Desktop_web_demo1_node_modules_three_build_three_module/* Vector3 */.Pq0(0.1, 0.5, 0), description: CONFIG.descriptions.screen.description }\n  ];\n  \n  // 创建标签\n  componentLabels.forEach(label => {\n    labelSystem.createLabel(label.id, label.text, label.target, label.offset, label.description);\n  });\n}\n\n// ===== 分解视图初始化 =====\nfunction initExplodedView() {\n  // 创建分解视图控制器\n  // 注意：这些组件不参与分解动画，但需要引用以支持相机聚焦功能\n  explodedView = new ExplodedView({\n    // 添加主要组件的引用，用于相机聚焦功能\n    // 这些组件不会有分解动画，但可以被聚焦\n    gun: gun,\n    gunHead: gunHead, \n    v1: v1,\n    v2: v2,\n    h1: h1,\n    h2: h2,\n    screen: screen\n    // CRT外壳(crtShell)有自己的内部分解机制，不在此处理\n  });\n}\n\n// ===== 演示动画初始化 =====\nfunction initDemoAnimation() {\n  // 创建演示动画控制器\n  demoAnimation = new DemoAnimation(\n    scene,\n    {\n      gun,\n      gunHead,\n      v1,\n      v2,\n      h1,\n      h2,\n      screen: screenController,  // 传递Screen类实例而不是THREE.js网格对象\n      electronBeam,\n      crtShell  // 添加crtShell组件\n    },\n    {\n      camera,\n      controls,\n      screenController,\n      guiController,  // 传递GUI控制器，用于演示时折叠面板\n      onDeflectionChange: (deflectionParams) => {\n        updateElectronBeam();\n      },\n      onWaveformChange: (waveformParams) => {\n        updateElectronBeam();\n        updateScreenWaveform();\n      }\n    }\n  );\n  \n  // 设置全局引用供波形生成器使用\n  window.demoAnimation = demoAnimation;\n  \n  // ===== 视角查看器 - 在控制台查看当前摄像头位置和目标 =====\n  window.getView = function() {\n    if (!camera || !controls) {\n      console.warn('⚠️ 摄像头或控制器未初始化');\n      return null;\n    }\n    \n    const viewInfo = {\n      position: { \n        x: Math.round(camera.position.x * 100) / 100,\n        y: Math.round(camera.position.y * 100) / 100, \n        z: Math.round(camera.position.z * 100) / 100 \n      },\n      target: { \n        x: Math.round(controls.target.x * 100) / 100,\n        y: Math.round(controls.target.y * 100) / 100, \n        z: Math.round(controls.target.z * 100) / 100 \n      }\n    };\n    \n    console.log('📷 当前视角信息:');\n    console.log('位置 (position):', viewInfo.position);\n    console.log('目标 (target):', viewInfo.target);\n    console.log('---');\n    console.log('复制用代码:');\n    console.log(`position: { x: ${viewInfo.position.x}, y: ${viewInfo.position.y}, z: ${viewInfo.position.z} }`);\n    console.log(`target: { x: ${viewInfo.target.x}, y: ${viewInfo.target.y}, z: ${viewInfo.target.z} }`);\n    \n    return viewInfo;\n  };\n}\n\n// ===== GUI初始化 =====\nfunction initGui() {\n  guiController = new GuiController({\n    onBeamChange: (beamParams) => {\n      electronBeam.updateMaterial();\n    },\n    onDeflectionChange: (deflectionParams) => {\n      updateElectronBeam();\n    },\n    onWaveformChange: (waveformParams) => {\n      // 波形参数变化时，需要更新电子束\n      updateElectronBeam();\n      // 同时更新荧光屏上的波形显示\n      updateScreenWaveform();\n    },\n    onScreenChange: (screenParams) => {\n      screenController.updateMaterial();\n    },\n    onShellChange: (shellParams) => {\n      if (crtShell) {\n        crtShell.setVisible(shellParams.visible);\n        crtShell.setOpacity(shellParams.opacity);\n        \n        \n        // 处理第一个圆柱体\n        if (shellParams.cylinder1) {\n          if (shellParams.cylinder1.hasOwnProperty('visible')) {\n            crtShell.setCylinder1Visible(shellParams.cylinder1.visible);\n          }\n          if (shellParams.cylinder1.hasOwnProperty('opacity')) {\n            crtShell.setCylinder1Opacity(shellParams.cylinder1.opacity);\n          }\n          if (shellParams.cylinder1.color) {\n            const cylinder1Color = parseColor(shellParams.cylinder1.color);\n            if (cylinder1Color !== null) {\n              crtShell.setCylinder1Color(cylinder1Color);\n            }\n          }\n          if (shellParams.cylinder1.position) {\n            crtShell.setCylinder1Position(\n              shellParams.cylinder1.position.x,\n              shellParams.cylinder1.position.y,\n              shellParams.cylinder1.position.z\n            );\n          }\n          if (shellParams.cylinder1.rotation) {\n            crtShell.setCylinder1Rotation(\n              shellParams.cylinder1.rotation.x,\n              shellParams.cylinder1.rotation.y,\n              shellParams.cylinder1.rotation.z\n            );\n          }\n        }\n        \n        // 处理第二个圆柱体\n        if (shellParams.cylinder2) {\n          if (shellParams.cylinder2.hasOwnProperty('visible')) {\n            crtShell.setCylinder2Visible(shellParams.cylinder2.visible);\n          }\n          if (shellParams.cylinder2.hasOwnProperty('opacity')) {\n            crtShell.setCylinder2Opacity(shellParams.cylinder2.opacity);\n          }\n          if (shellParams.cylinder2.color) {\n            const cylinder2Color = parseColor(shellParams.cylinder2.color);\n            if (cylinder2Color !== null) {\n              crtShell.setCylinder2Color(cylinder2Color);\n            }\n          }\n          if (shellParams.cylinder2.position) {\n            crtShell.setCylinder2Position(\n              shellParams.cylinder2.position.x,\n              shellParams.cylinder2.position.y,\n              shellParams.cylinder2.position.z\n            );\n          }\n          if (shellParams.cylinder2.rotation) {\n            crtShell.setCylinder2Rotation(\n              shellParams.cylinder2.rotation.x,\n              shellParams.cylinder2.rotation.y,\n              shellParams.cylinder2.rotation.z\n            );\n          }\n        }\n        \n        // 注意：这里不需要调用updateConfig()，因为上面的set方法已经更新了相应的状态\n        // 调用updateConfig()会导致重复创建组件，造成重复模型问题\n        // crtShell.updateConfig();\n      }\n    }\n  });\n}\n\n// ===== UI控制器初始化 =====\nfunction initUIController() {\n  // 创建UI控制器\n  uiController = new UIController({\n    components: {\n      gun,\n      gunHead,\n      v1,\n      v2,\n      h1,\n      h2,\n      screen,\n      crtShell\n    },\n    controllers: {\n      camera,\n      controls,\n      labelSystem,\n      explodedView,\n      demoAnimation,\n      screenController,\n      onDeflectionChange: (deflectionParams) => {\n        updateElectronBeam();\n      },\n      onWaveformChange: (waveformParams) => {\n        updateElectronBeam();\n        updateScreenWaveform();\n      }\n    }\n  });\n}\n\n// ===== 更新电子束 =====\nfunction updateElectronBeam() {\n  let deflectionParams;\n  \n  // 如果波形启用，计算波形产生的偏转电压\n  if (CONFIG.waveform.enabled) {\n    const deflectionVoltage = waveformGenerator.calculateDeflectionVoltage(\n      CONFIG.waveform,\n      CONFIG.deflection\n    );\n    deflectionParams = {\n      horizontal: { voltage: deflectionVoltage.horizontal },\n      vertical: { voltage: deflectionVoltage.vertical }\n    };\n  } else {\n    // 直接使用控制面板上的电压值\n    deflectionParams = CONFIG.deflection;\n  }\n  \n  // 更新电子束路径\n  electronBeam.updateBeamPath(deflectionParams);\n  \n  // 更新荧光屏和动态光点\n  updateScreenAndGlowPoint();\n}\n\n/**\n * 更新荧光屏波形显示\n * 在波形参数改变时清除旧的显示内容\n */\nfunction updateScreenWaveform() {\n  // 清除荧光屏上的所有荧光点\n  if (screenController) {\n    screenController.clearAllGlowPoints();\n  }\n  \n  // 清除电子束的轨迹点\n  if (electronBeam) {\n    electronBeam.clearAllTraces();\n  }\n  \n  // 重置波形生成器的时间，避免波形不连续\n  // 这确保新的波形参数能从干净的状态开始显示\n  if (waveformGenerator) {\n    waveformGenerator.resetTime();\n  }\n  \n  console.log('波形参数变化：已清除旧的波形显示，准备显示新波形');\n}\n\n/**\n * 更新荧光屏和动态光点\n */\nfunction updateScreenAndGlowPoint() {\n  const lastBeamPoint = electronBeam.beamPoints[electronBeam.beamPoints.length - 1];\n  \n  // 更新荧光屏上的点\n  screenController.addGlowPoint(lastBeamPoint);\n  \n}\n\n// ===== 窗口大小调整 =====\nfunction onWindowResize() {\n  // 获取实际显示尺寸，考虑DPI缩放\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const width = window.innerWidth;\n  const height = window.innerHeight;\n  \n  camera.aspect = width / height;\n  camera.updateProjectionMatrix();\n  \n  // 设置渲染器尺寸，考虑高DPI\n  renderer.setSize(width, height);\n  renderer.setPixelRatio(Math.min(devicePixelRatio, 2)); // 限制最大DPI比率为2\n  \n  // 更新标签系统\n  if (labelSystem) {\n    labelSystem.resize(width, height);\n  }\n  \n  // 更新UI控制器\n  if (uiController) {\n    uiController.resize(width, height);\n  }\n}\n\n// ===== 动画循环 =====\nfunction animate(timestamp) {\n  requestAnimationFrame(animate);\n  \n  // 更新控制器\n  controls.update();\n  \n  // 更新波形生成器\n  waveformGenerator.update(timestamp);\n  \n  // 持续更新电子束（无论波形是否启用都要更新）\n  // 这确保了电子束始终可见并响应参数变化\n  updateElectronBeam();\n  \n  // 更新荧光屏效果\n  screenController.update();\n  \n  // 更新CRT外壳\n  if (crtShell) {\n    crtShell.update(timestamp);\n  }\n  \n  // 更新分解视图\n  if (explodedView) {\n    explodedView.update();\n  }\n  \n  // 更新演示动画\n  if (demoAnimation) {\n    demoAnimation.update();\n  }\n  \n  // 更新标签系统\n  if (labelSystem) {\n    labelSystem.update(camera);\n  }\n  \n  // 更新TWEEN（使用新的 Group API）\n  tweenGroup.update();\n  \n  // 渲染场景\n  renderer.render(scene, camera);\n}\n\n// ===== 启动应用 =====\ninit().catch(error => {\n  console.error('应用初始化失败:', error);\n});\n\n// ===== 初始化右上角切换控件（内部页） =====\nconst bootInternalSwitcher = () => {\n  if (typeof document !== 'undefined') {\n    renderSwitcher('internal');\n  }\n};\nif (typeof document !== 'undefined' && document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', bootInternalSwitcher);\n} else {\n  bootInternalSwitcher();\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTYyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ3hEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDM0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDeFBBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ3RTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeGxCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDblJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JpQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ2pTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQy9SQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdjRDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3JQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzlWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNyT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDelRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3BNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN0ZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2xnQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNyU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBYUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcY29udHJvbGxlcnNcXHN3aXRjaGVyLmNzcz9iODA5Iiwid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXHdpZGdldHNcXHN3aXRjaGVyLmpzP2ExMTUiLCJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcY29uZmlnTG9hZGVyLmpzP2QxMWUiLCJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcZXhhbXBsZXNcXENvbm5lY3Rpb25Qb3NpdGlvbkRlbW8uanM/ZGZhZCIsIndlYnBhY2s6Ly9vc2NpbGxvc2NvcGUtc2ltdWxhdG9yL0Q6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxcd2Vi6aG555uuXFxkZW1vMVxcc3JjXFxleGFtcGxlc1xcU3VwZXJlbGxpcHNlVHJhbnNpdGlvbkRlbW8uanM/ZmE4NCIsIndlYnBhY2s6Ly9vc2NpbGxvc2NvcGUtc2ltdWxhdG9yL0Q6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxcd2Vi6aG555uuXFxkZW1vMVxcc3JjXFxjb250cm9sbGVyc1xcR3VpQ29udHJvbGxlci5qcz8zMjY0Iiwid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXGNvbnRyb2xsZXJzXFxVSUNvbnRyb2xsZXIuanM/OWE5NyIsIndlYnBhY2s6Ly9vc2NpbGxvc2NvcGUtc2ltdWxhdG9yL0Q6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxcd2Vi6aG555uuXFxkZW1vMVxcc3JjXFxjb21wb25lbnRzXFxXYXZlZm9ybUdlbmVyYXRvci5qcz9mNGYyIiwid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXGNvbXBvbmVudHNcXEVsZWN0cm9uQmVhbS5qcz9iMTQwIiwid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXGNvbXBvbmVudHNcXFNjcmVlbi5qcz83OTU2Iiwid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXGNvbXBvbmVudHNcXExhYmVsU3lzdGVtLmpzPzU4OGEiLCJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcY29tcG9uZW50c1xcRXhwbG9kZWRWaWV3LmpzPzNkMDMiLCJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcdXRpbHNcXFBhcnRpY2xlUG9vbC5qcz82MjNkIiwid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXGNvbXBvbmVudHNcXERlbW9BbmltYXRpb24uanM/MTU1ZSIsIndlYnBhY2s6Ly9vc2NpbGxvc2NvcGUtc2ltdWxhdG9yL0Q6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxcd2Vi6aG555uuXFxkZW1vMVxcc3JjXFxnZW9tZXRyeVxcUm90YXRpb25DdXJ2ZUdlb21ldHJ5LmpzP2MzOTIiLCJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcbWF0ZXJpYWxzXFxVbmlmaWVkQ29tcG9uZW50TWF0ZXJpYWwuanM/MmU1MyIsIndlYnBhY2s6Ly9vc2NpbGxvc2NvcGUtc2ltdWxhdG9yL0Q6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxcd2Vi6aG555uuXFxkZW1vMVxcc3JjXFxjb21wb25lbnRzXFxDeWxpbmRlckNvbm5lY3Rpb24uanM/NTMwNCIsIndlYnBhY2s6Ly9vc2NpbGxvc2NvcGUtc2ltdWxhdG9yL0Q6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxcd2Vi6aG555uuXFxkZW1vMVxcc3JjXFxjb21wb25lbnRzXFxTdXBlcmVsbGlwc2VUcmFuc2l0aW9uLmpzPzIzYzciLCJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcY29tcG9uZW50c1xcQ3lsaW5kZXIyRXhwbG9kZUVmZmVjdC5qcz82Y2ExIiwid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXGNvbXBvbmVudHNcXFJvdGF0aW9uQ3VydmVFeHBsb2RlRWZmZWN0LmpzPzliOTYiLCJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcdXRpbHNcXFN1cGVyZWxsaXBzZVBvc2l0aW9uZXIuanM/ZGU3YiIsIndlYnBhY2s6Ly9vc2NpbGxvc2NvcGUtc2ltdWxhdG9yL0Q6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxcd2Vi6aG555uuXFxkZW1vMVxcc3JjXFxjb21wb25lbnRzXFxTdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0LmpzP2M1YTYiLCJ3ZWJwYWNrOi8vb3NjaWxsb3Njb3BlLXNpbXVsYXRvci9EOlxcVXNlcnNcXGFzdXNcXERlc2t0b3BcXHdlYumhueebrlxcZGVtbzFcXHNyY1xcY29tcG9uZW50c1xcQ1JUU2hlbGwuanM/ZmNlZCIsIndlYnBhY2s6Ly9vc2NpbGxvc2NvcGUtc2ltdWxhdG9yL0Q6XFxVc2Vyc1xcYXN1c1xcRGVza3RvcFxcd2Vi6aG555uuXFxkZW1vMVxcc3JjXFxtYXRlcmlhbHNcXE1hdGVyaWFsTWFuYWdlci5qcz80NmNkIiwid2VicGFjazovL29zY2lsbG9zY29wZS1zaW11bGF0b3IvRDpcXFVzZXJzXFxhc3VzXFxEZXNrdG9wXFx3ZWLpobnnm65cXGRlbW8xXFxzcmNcXG1haW4uanM/NzFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3dpdGNoZXIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5vcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3dpdGNoZXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICcuLi9jb250cm9sbGVycy9zd2l0Y2hlci5jc3MnO1xyXG4vLyDmuLLmn5Plj7PkuIrop5LliIfmjaLmjqfku7ZcclxuLy8gY3VycmVudDogJ2V4dGVybmFsJyB8ICdpbnRlcm5hbCdcclxuLy8gb3B0aW9uczogeyB0aWxlPzogc3RyaW5nLCBpY29uPzogc3RyaW5nLCBnYXA/OiBzdHJpbmcsIGV4dHJhPzogc3RyaW5nIH1cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclN3aXRjaGVyKGN1cnJlbnQsIG9wdGlvbnMgPSB7fSl7XHJcbiAgY29uc3QgbmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XHJcbiAgbmF2LmNsYXNzTmFtZSA9ICdzd2l0Y2hlcic7XHJcbiAgbmF2LnNldEF0dHJpYnV0ZSgncm9sZScsICd0YWJsaXN0Jyk7XHJcbiAgbmF2LnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICfpobXpnaLliIfmjaInKTtcclxuXHJcbiAgLy8g5YWB6K646YCa6L+HIENTUyDlj5jph4/oh6rlrprkuYnlsLrlr7gv6Ze06LedXHJcbiAgaWYgKG9wdGlvbnMudGlsZSkgIG5hdi5zdHlsZS5zZXRQcm9wZXJ0eSgnLS10aWxlJywgb3B0aW9ucy50aWxlKTtcclxuICBpZiAob3B0aW9ucy5pY29uKSAgbmF2LnN0eWxlLnNldFByb3BlcnR5KCctLWljb24nLCBvcHRpb25zLmljb24pO1xyXG4gIGlmIChvcHRpb25zLmdhcCkgICBuYXYuc3R5bGUuc2V0UHJvcGVydHkoJy0tc3dpdGNoZXItZ2FwJywgb3B0aW9ucy5nYXApO1xyXG4gIGlmIChvcHRpb25zLmV4dHJhKSBuYXYuc3R5bGUuc2V0UHJvcGVydHkoJy0tc3dpdGNoZXItZXh0cmEnLCBvcHRpb25zLmV4dHJhKTtcclxuXHJcbiAgY29uc3QgZXh0ZXJuYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbiAgZXh0ZXJuYWwuY2xhc3NOYW1lID0gJ3RpbGUgbGVmdCc7XHJcbiAgZXh0ZXJuYWwuaWQgPSAndGFiLWV4dGVybmFsJztcclxuICBleHRlcm5hbC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAndGFiJyk7XHJcbiAgZXh0ZXJuYWwuc2V0QXR0cmlidXRlKCdocmVmJywgJ2luZGV4Lmh0bWwnKTtcclxuICBleHRlcm5hbC5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgJ+WklumDqO+8iOmdouadvy/npLrms6LlmajvvIknKTtcclxuICBleHRlcm5hbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtc2VsZWN0ZWQnLCBTdHJpbmcoY3VycmVudCA9PT0gJ2V4dGVybmFsJykpO1xyXG4gIGV4dGVybmFsLmlubmVySFRNTCA9ICc8c3BhbiBjbGFzcz1cInNyLW9ubHlcIj7lpJbpg6g8L3NwYW4+JytcclxuICAgICc8c3ZnIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj4nK1xyXG4gICAgJyAgPHJlY3QgY2xhc3M9XCJzdHJva2VcIiB4PVwiM1wiIHk9XCI0XCIgd2lkdGg9XCIxOFwiIGhlaWdodD1cIjE0XCIgcng9XCIxLjVcIi8+JytcclxuICAgICcgIDxyZWN0IGNsYXNzPVwic3Ryb2tlXCIgeD1cIjVcIiB5PVwiNlwiIHdpZHRoPVwiMTBcIiBoZWlnaHQ9XCI4XCIgcng9XCIwLjVcIi8+JytcclxuICAgICcgIDxjaXJjbGUgY2xhc3M9XCJzdHJva2VcIiBjeD1cIjE4XCIgY3k9XCI5XCIgcj1cIjEuM1wiLz4nK1xyXG4gICAgJyAgPGNpcmNsZSBjbGFzcz1cInN0cm9rZVwiIGN4PVwiMThcIiBjeT1cIjEzXCIgcj1cIjEuM1wiLz4nK1xyXG4gICAgJzwvc3ZnPic7XHJcblxyXG4gIGNvbnN0IGludGVybmFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gIGludGVybmFsLmNsYXNzTmFtZSA9ICd0aWxlIHJpZ2h0JztcclxuICBpbnRlcm5hbC5pZCA9ICd0YWItaW50ZXJuYWwnO1xyXG4gIGludGVybmFsLnNldEF0dHJpYnV0ZSgncm9sZScsICd0YWInKTtcclxuICBpbnRlcm5hbC5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCAnaW50ZXJuYWwuaHRtbCcpO1xyXG4gIGludGVybmFsLnNldEF0dHJpYnV0ZSgndGl0bGUnLCAn5YaF6YOo5Y6f55CG77yI5rOi5b2iL+eUtei3r++8iScpO1xyXG4gIGludGVybmFsLnNldEF0dHJpYnV0ZSgnYXJpYS1zZWxlY3RlZCcsIFN0cmluZyhjdXJyZW50ID09PSAnaW50ZXJuYWwnKSk7XHJcbiAgaW50ZXJuYWwuaW5uZXJIVE1MID0gJzxzcGFuIGNsYXNzPVwic3Itb25seVwiPuWGhemDqOWOn+eQhjwvc3Bhbj4nK1xyXG4gICAgJzxzdmcgdmlld0JveD1cIjAgMCAyNCAyNFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPicrXHJcbiAgICAnICA8cGF0aCBjbGFzcz1cInN0cm9rZVwiIGQ9XCJNMiAxMmMyLTYgNCA2IDYgMHM0IDYgNiAwIDQgNiA2IDBcIi8+JytcclxuICAgICcgIDxjaXJjbGUgY2xhc3M9XCJkb3RcIiBjeD1cIjE5XCIgY3k9XCI2XCIgcj1cIjEuMVwiLz4nK1xyXG4gICAgJzwvc3ZnPic7XHJcblxyXG4gIG5hdi5hcHBlbmRDaGlsZChleHRlcm5hbCk7XHJcbiAgbmF2LmFwcGVuZENoaWxkKGludGVybmFsKTtcclxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG5hdik7XHJcbn1cclxuXHJcbi8vIOWFvOWuue+8muWQjOaXtuaMguWIsCB3aW5kb3cg5Lul6YG/5YWN5Y6G5Y+y6LCD55So5oql6ZSZXHJcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gIHdpbmRvdy5yZW5kZXJTd2l0Y2hlciA9IHJlbmRlclN3aXRjaGVyO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG4iLCIvLyDphY3nva7liqDovb3lmaggLSDku45KU09O5Yqg6L295bm25aSE55CG6YWN572uXHJcbmltcG9ydCBjb25maWdEYXRhIGZyb20gJy4vY29uZmlnLmpzb24nO1xyXG5cclxuLy8g6YCS5b2S5aSE55CG5a+56LGh77yM5bCG5a2X56ym5Liy5b2i5byP55qE5Y2B5YWt6L+b5Yi26aKc6Imy6L2s5o2i5Li65pWw5a2XXHJcbmZ1bmN0aW9uIHByb2Nlc3NDb25maWcob2JqKSB7XHJcbiAgaWYgKHR5cGVvZiBvYmogPT09ICdzdHJpbmcnICYmIG9iai5zdGFydHNXaXRoKCcweCcpKSB7XHJcbiAgICAvLyDovazmjaLljYHlha3ov5vliLblrZfnrKbkuLLkuLrmlbDlrZdcclxuICAgIHJldHVybiBwYXJzZUludChvYmosIDE2KTtcclxuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xyXG4gICAgLy8g5aSE55CG5pWw57uEXHJcbiAgICByZXR1cm4gb2JqLm1hcChwcm9jZXNzQ29uZmlnKTtcclxuICB9IGVsc2UgaWYgKG9iaiAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xyXG4gICAgLy8g5aSE55CG5a+56LGhXHJcbiAgICBjb25zdCBwcm9jZXNzZWQgPSB7fTtcclxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKG9iaikpIHtcclxuICAgICAgcHJvY2Vzc2VkW2tleV0gPSBwcm9jZXNzQ29uZmlnKHZhbHVlKTtcclxuICAgIH1cclxuICAgIHJldHVybiBwcm9jZXNzZWQ7XHJcbiAgfVxyXG4gIHJldHVybiBvYmo7XHJcbn1cclxuXHJcbi8vIOWkhOeQhumFjee9ruaVsOaNrlxyXG5jb25zdCBwcm9jZXNzZWRDb25maWcgPSBwcm9jZXNzQ29uZmlnKGNvbmZpZ0RhdGEpO1xyXG5cclxuLy8g5a+85Ye65aSE55CG5ZCO55qE6YWN572uXHJcbmV4cG9ydCBjb25zdCBDT05GSUcgPSBwcm9jZXNzZWRDb25maWcuQ09ORklHO1xyXG5leHBvcnQgY29uc3QgV0FWRUZPUk1fVFlQRVMgPSBwcm9jZXNzZWRDb25maWcuV0FWRUZPUk1fVFlQRVM7XHJcbiIsIi8qKlxyXG4gKiDml4vovazmm7Lnur/ov57mjqXkvY3nva7mjqfliLbmvJTnpLpcclxuICog5bGV56S65aaC5L2V5Zyo5Luj56CB5Lit5Yqo5oCB56e75Yqo5ZKM5peL6L2s6L+e5o6lXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIENvbm5lY3Rpb25Qb3NpdGlvbkRlbW8ge1xyXG4gIGNvbnN0cnVjdG9yKGNydFNoZWxsKSB7XHJcbiAgICB0aGlzLmNydFNoZWxsID0gY3J0U2hlbGw7XHJcbiAgICB0aGlzLmFuaW1hdGlvbklkID0gbnVsbDtcclxuICAgIHRoaXMuaXNBbmltYXRpbmcgPSBmYWxzZTtcclxuICAgIFxyXG4gICAgLy8g5Y6f5aeL5YGP56e76YePXHJcbiAgICB0aGlzLm9yaWdpbmFsUG9zaXRpb25PZmZzZXQgPSB7IHg6IDAsIHk6IDAsIHo6IDAgfTtcclxuICAgIHRoaXMub3JpZ2luYWxSb3RhdGlvbk9mZnNldCA9IHsgeDogMCwgeTogMCwgejogMCB9O1xyXG4gICAgXHJcbiAgICAvLyDliqjnlLvlj4LmlbBcclxuICAgIHRoaXMudGltZSA9IDA7XHJcbiAgICB0aGlzLmFuaW1hdGlvblNwZWVkID0gMC4wMTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOW8gOWni+S9jee9ruWKqOeUu+a8lOekulxyXG4gICAqL1xyXG4gIHN0YXJ0UG9zaXRpb25BbmltYXRpb24oKSB7XHJcbiAgICBpZiAodGhpcy5pc0FuaW1hdGluZykgcmV0dXJuO1xyXG4gICAgXHJcbiAgICB0aGlzLmlzQW5pbWF0aW5nID0gdHJ1ZTtcclxuICAgIHRoaXMudGltZSA9IDA7XHJcbiAgICBcclxuICAgIC8vIOS/neWtmOWOn+Wni+WBj+enu+mHj1xyXG4gICAgdGhpcy5vcmlnaW5hbFBvc2l0aW9uT2Zmc2V0ID0gdGhpcy5jcnRTaGVsbC5nZXRDb25uZWN0aW9uUG9zaXRpb25PZmZzZXQoKTtcclxuICAgIHRoaXMub3JpZ2luYWxSb3RhdGlvbk9mZnNldCA9IHRoaXMuY3J0U2hlbGwuZ2V0Q29ubmVjdGlvblJvdGF0aW9uT2Zmc2V0KCk7XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCfwn46sIOW8gOWni+aXi+i9rOabsue6v+i/nuaOpeS9jee9ruWKqOeUu+a8lOekuicpO1xyXG4gICAgdGhpcy5hbmltYXRlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlgZzmraLkvY3nva7liqjnlLvmvJTnpLpcclxuICAgKi9cclxuICBzdG9wUG9zaXRpb25BbmltYXRpb24oKSB7XHJcbiAgICBpZiAoIXRoaXMuaXNBbmltYXRpbmcpIHJldHVybjtcclxuICAgIFxyXG4gICAgdGhpcy5pc0FuaW1hdGluZyA9IGZhbHNlO1xyXG4gICAgaWYgKHRoaXMuYW5pbWF0aW9uSWQpIHtcclxuICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRpb25JZCk7XHJcbiAgICAgIHRoaXMuYW5pbWF0aW9uSWQgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyDmgaLlpI3ljp/lp4vlgY/np7vph49cclxuICAgIHRoaXMuY3J0U2hlbGwuc2V0Q29ubmVjdGlvblBvc2l0aW9uT2Zmc2V0KFxyXG4gICAgICB0aGlzLm9yaWdpbmFsUG9zaXRpb25PZmZzZXQueCxcclxuICAgICAgdGhpcy5vcmlnaW5hbFBvc2l0aW9uT2Zmc2V0LnksXHJcbiAgICAgIHRoaXMub3JpZ2luYWxQb3NpdGlvbk9mZnNldC56XHJcbiAgICApO1xyXG4gICAgdGhpcy5jcnRTaGVsbC5zZXRDb25uZWN0aW9uUm90YXRpb25PZmZzZXQoXHJcbiAgICAgIHRoaXMub3JpZ2luYWxSb3RhdGlvbk9mZnNldC54LFxyXG4gICAgICB0aGlzLm9yaWdpbmFsUm90YXRpb25PZmZzZXQueSxcclxuICAgICAgdGhpcy5vcmlnaW5hbFJvdGF0aW9uT2Zmc2V0LnpcclxuICAgICk7XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCfij7nvuI8g5YGc5q2i5peL6L2s5puy57q/6L+e5o6l5L2N572u5Yqo55S75ryU56S6Jyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliqjnlLvlvqrnjq9cclxuICAgKi9cclxuICBhbmltYXRlKCkge1xyXG4gICAgaWYgKCF0aGlzLmlzQW5pbWF0aW5nKSByZXR1cm47XHJcbiAgICBcclxuICAgIHRoaXMudGltZSArPSB0aGlzLmFuaW1hdGlvblNwZWVkO1xyXG4gICAgXHJcbiAgICAvLyDorqHnrpfliqjmgIHkvY3nva7lgY/np7tcclxuICAgIGNvbnN0IHBvc2l0aW9uT2Zmc2V0ID0ge1xyXG4gICAgICB4OiB0aGlzLm9yaWdpbmFsUG9zaXRpb25PZmZzZXQueCArIE1hdGguc2luKHRoaXMudGltZSkgKiAwLjUsXHJcbiAgICAgIHk6IHRoaXMub3JpZ2luYWxQb3NpdGlvbk9mZnNldC55ICsgTWF0aC5jb3ModGhpcy50aW1lICogMC44KSAqIDAuMyxcclxuICAgICAgejogdGhpcy5vcmlnaW5hbFBvc2l0aW9uT2Zmc2V0LnogKyBNYXRoLnNpbih0aGlzLnRpbWUgKiAxLjIpICogMC4yXHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAvLyDorqHnrpfliqjmgIHml4vovazlgY/np7tcclxuICAgIGNvbnN0IHJvdGF0aW9uT2Zmc2V0ID0ge1xyXG4gICAgICB4OiB0aGlzLm9yaWdpbmFsUm90YXRpb25PZmZzZXQueCArIE1hdGguc2luKHRoaXMudGltZSAqIDAuNykgKiAwLjIsXHJcbiAgICAgIHk6IHRoaXMub3JpZ2luYWxSb3RhdGlvbk9mZnNldC55ICsgTWF0aC5jb3ModGhpcy50aW1lICogMC45KSAqIDAuMTUsXHJcbiAgICAgIHo6IHRoaXMub3JpZ2luYWxSb3RhdGlvbk9mZnNldC56ICsgTWF0aC5zaW4odGhpcy50aW1lICogMS4xKSAqIDAuMVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgLy8g5bqU55So5YGP56e7XHJcbiAgICB0aGlzLmNydFNoZWxsLnNldENvbm5lY3Rpb25Qb3NpdGlvbk9mZnNldChcclxuICAgICAgcG9zaXRpb25PZmZzZXQueCxcclxuICAgICAgcG9zaXRpb25PZmZzZXQueSxcclxuICAgICAgcG9zaXRpb25PZmZzZXQuelxyXG4gICAgKTtcclxuICAgIHRoaXMuY3J0U2hlbGwuc2V0Q29ubmVjdGlvblJvdGF0aW9uT2Zmc2V0KFxyXG4gICAgICByb3RhdGlvbk9mZnNldC54LFxyXG4gICAgICByb3RhdGlvbk9mZnNldC55LFxyXG4gICAgICByb3RhdGlvbk9mZnNldC56XHJcbiAgICApO1xyXG4gICAgXHJcbiAgICB0aGlzLmFuaW1hdGlvbklkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHRoaXMuYW5pbWF0ZSgpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOa8lOekuuS4jeWQjOeahOS9jee9rumihOiuvlxyXG4gICAqL1xyXG4gIGRlbW9uc3RyYXRlUG9zaXRpb25QcmVzZXRzKCkge1xyXG4gICAgY29uc29sZS5sb2coJ/Cfjq8g5ryU56S65peL6L2s5puy57q/6L+e5o6l5L2N572u6aKE6K6+Jyk7XHJcbiAgICBcclxuICAgIGNvbnN0IHByZXNldHMgPSBbXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAn6buY6K6k5L2N572uJyxcclxuICAgICAgICBwb3NpdGlvbjogeyB4OiAwLCB5OiAwLCB6OiAwIH0sXHJcbiAgICAgICAgcm90YXRpb246IHsgeDogMCwgeTogMCwgejogMCB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAn5ZCR5LiK5YGP56e7JyxcclxuICAgICAgICBwb3NpdGlvbjogeyB4OiAwLCB5OiAwLjUsIHo6IDAgfSxcclxuICAgICAgICByb3RhdGlvbjogeyB4OiAwLCB5OiAwLCB6OiAwIH1cclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIG5hbWU6ICflkJHlj7PlgY/np7snLFxyXG4gICAgICAgIHBvc2l0aW9uOiB7IHg6IDAuNSwgeTogMCwgejogMCB9LFxyXG4gICAgICAgIHJvdGF0aW9uOiB7IHg6IDAsIHk6IDAsIHo6IDAgfVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbmFtZTogJ+WQkeWJjeWBj+enuycsXHJcbiAgICAgICAgcG9zaXRpb246IHsgeDogMCwgeTogMCwgejogMC41IH0sXHJcbiAgICAgICAgcm90YXRpb246IHsgeDogMCwgeTogMCwgejogMCB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAn5peL6L2s5YC+5pacJyxcclxuICAgICAgICBwb3NpdGlvbjogeyB4OiAwLCB5OiAwLCB6OiAwIH0sXHJcbiAgICAgICAgcm90YXRpb246IHsgeDogMC4zLCB5OiAwLjIsIHo6IDAuMSB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAn5aSN5ZCI5Y+Y5o2iJyxcclxuICAgICAgICBwb3NpdGlvbjogeyB4OiAwLjMsIHk6IDAuMiwgejogMC4xIH0sXHJcbiAgICAgICAgcm90YXRpb246IHsgeDogMC4yLCB5OiAwLjMsIHo6IDAuMSB9XHJcbiAgICAgIH1cclxuICAgIF07XHJcbiAgICBcclxuICAgIGxldCBjdXJyZW50SW5kZXggPSAwO1xyXG4gICAgXHJcbiAgICBjb25zdCBzd2l0Y2hQcmVzZXQgPSAoKSA9PiB7XHJcbiAgICAgIGlmIChjdXJyZW50SW5kZXggPj0gcHJlc2V0cy5sZW5ndGgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygn4pyFIOS9jee9rumihOiuvua8lOekuuWujOaIkCcpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgY29uc3QgcHJlc2V0ID0gcHJlc2V0c1tjdXJyZW50SW5kZXhdO1xyXG4gICAgICBjb25zb2xlLmxvZyhg8J+TjSDliIfmjaLliLDpooTorr46ICR7cHJlc2V0Lm5hbWV9YCk7XHJcbiAgICAgIFxyXG4gICAgICB0aGlzLmNydFNoZWxsLnNldENvbm5lY3Rpb25Qb3NpdGlvbk9mZnNldChcclxuICAgICAgICBwcmVzZXQucG9zaXRpb24ueCxcclxuICAgICAgICBwcmVzZXQucG9zaXRpb24ueSxcclxuICAgICAgICBwcmVzZXQucG9zaXRpb24uelxyXG4gICAgICApO1xyXG4gICAgICB0aGlzLmNydFNoZWxsLnNldENvbm5lY3Rpb25Sb3RhdGlvbk9mZnNldChcclxuICAgICAgICBwcmVzZXQucm90YXRpb24ueCxcclxuICAgICAgICBwcmVzZXQucm90YXRpb24ueSxcclxuICAgICAgICBwcmVzZXQucm90YXRpb24uelxyXG4gICAgICApO1xyXG4gICAgICBcclxuICAgICAgY3VycmVudEluZGV4Kys7XHJcbiAgICAgIHNldFRpbWVvdXQoc3dpdGNoUHJlc2V0LCAyMDAwKTsgLy8g5q+PMuenkuWIh+aNouS4gOS4qumihOiuvlxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgc3dpdGNoUHJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmiYvliqjorr7nva7ov57mjqXkvY3nva5cclxuICAgKi9cclxuICBzZXRDb25uZWN0aW9uUG9zaXRpb24oeCwgeSwgeikge1xyXG4gICAgY29uc29sZS5sb2coYPCfjq8g5omL5Yqo6K6+572u6L+e5o6l5L2N572uOiAoJHt4fSwgJHt5fSwgJHt6fSlgKTtcclxuICAgIHRoaXMuY3J0U2hlbGwuc2V0Q29ubmVjdGlvblBvc2l0aW9uT2Zmc2V0KHgsIHksIHopO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5omL5Yqo6K6+572u6L+e5o6l5peL6L2sXHJcbiAgICovXHJcbiAgc2V0Q29ubmVjdGlvblJvdGF0aW9uKHgsIHksIHopIHtcclxuICAgIGNvbnNvbGUubG9nKGDwn5SEIOaJi+WKqOiuvue9rui/nuaOpeaXi+i9rDogKCR7eH0sICR7eX0sICR7en0pIOW8p+W6pmApO1xyXG4gICAgdGhpcy5jcnRTaGVsbC5zZXRDb25uZWN0aW9uUm90YXRpb25PZmZzZXQoeCwgeSwgeik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDojrflj5blvZPliY3ov57mjqXlj5jmjaLkv6Hmga9cclxuICAgKi9cclxuICBnZXRDb25uZWN0aW9uVHJhbnNmb3JtKCkge1xyXG4gICAgY29uc3QgcG9zaXRpb24gPSB0aGlzLmNydFNoZWxsLmdldENvbm5lY3Rpb25Qb3NpdGlvbk9mZnNldCgpO1xyXG4gICAgY29uc3Qgcm90YXRpb24gPSB0aGlzLmNydFNoZWxsLmdldENvbm5lY3Rpb25Sb3RhdGlvbk9mZnNldCgpO1xyXG4gICAgY29uc3QgYWN0dWFsUG9zaXRpb24gPSB0aGlzLmNydFNoZWxsLmdldENvbm5lY3Rpb25Qb3NpdGlvbigpO1xyXG4gICAgY29uc3QgYWN0dWFsUm90YXRpb24gPSB0aGlzLmNydFNoZWxsLmdldENvbm5lY3Rpb25Sb3RhdGlvbigpO1xyXG4gICAgXHJcbiAgICBjb25zdCBpbmZvID0ge1xyXG4gICAgICBwb3NpdGlvbk9mZnNldDogcG9zaXRpb24sXHJcbiAgICAgIHJvdGF0aW9uT2Zmc2V0OiByb3RhdGlvbixcclxuICAgICAgYWN0dWFsUG9zaXRpb246IHtcclxuICAgICAgICB4OiBhY3R1YWxQb3NpdGlvbi54LFxyXG4gICAgICAgIHk6IGFjdHVhbFBvc2l0aW9uLnksXHJcbiAgICAgICAgejogYWN0dWFsUG9zaXRpb24uelxyXG4gICAgICB9LFxyXG4gICAgICBhY3R1YWxSb3RhdGlvbjoge1xyXG4gICAgICAgIHg6IGFjdHVhbFJvdGF0aW9uLngsXHJcbiAgICAgICAgeTogYWN0dWFsUm90YXRpb24ueSxcclxuICAgICAgICB6OiBhY3R1YWxSb3RhdGlvbi56XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCfwn5OKIOW9k+WJjei/nuaOpeWPmOaNouS/oeaBrzonLCBpbmZvKTtcclxuICAgIHJldHVybiBpbmZvO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6YeN572u6L+e5o6l5Yiw6buY6K6k5L2N572uXHJcbiAgICovXHJcbiAgcmVzZXRDb25uZWN0aW9uVHJhbnNmb3JtKCkge1xyXG4gICAgY29uc29sZS5sb2coJ/CflIQg6YeN572u6L+e5o6l5Yiw6buY6K6k5L2N572uJyk7XHJcbiAgICB0aGlzLmNydFNoZWxsLnNldENvbm5lY3Rpb25Qb3NpdGlvbk9mZnNldCgwLCAwLCAwKTtcclxuICAgIHRoaXMuY3J0U2hlbGwuc2V0Q29ubmVjdGlvblJvdGF0aW9uT2Zmc2V0KDAsIDAsIDApO1xyXG4gIH1cclxufVxyXG5cclxuLy8g5L2/55So56S65L6L77yI5Zyo5rWP6KeI5Zmo5o6n5Yi25Y+w5Lit77yJ77yaXHJcbi8qXHJcbi8vIOWBh+iuvuS9oOW3sue7j+acieS6hiBjcnRTaGVsbCDlrp7kvotcclxuY29uc3QgZGVtbyA9IG5ldyBDb25uZWN0aW9uUG9zaXRpb25EZW1vKGNydFNoZWxsKTtcclxuXHJcbi8vIOW8gOWni+WKqOeUu+a8lOekulxyXG5kZW1vLnN0YXJ0UG9zaXRpb25BbmltYXRpb24oKTtcclxuXHJcbi8vIOWBnOatouWKqOeUu1xyXG5kZW1vLnN0b3BQb3NpdGlvbkFuaW1hdGlvbigpO1xyXG5cclxuLy8g5ryU56S65L2N572u6aKE6K6+XHJcbmRlbW8uZGVtb25zdHJhdGVQb3NpdGlvblByZXNldHMoKTtcclxuXHJcbi8vIOaJi+WKqOiuvue9ruS9jee9rlxyXG5kZW1vLnNldENvbm5lY3Rpb25Qb3NpdGlvbigwLjUsIDAuMywgMC4yKTtcclxuXHJcbi8vIOaJi+WKqOiuvue9ruaXi+i9rFxyXG5kZW1vLnNldENvbm5lY3Rpb25Sb3RhdGlvbigwLjEsIDAuMiwgMC4xKTtcclxuXHJcbi8vIOiOt+WPluW9k+WJjeWPmOaNouS/oeaBr1xyXG5kZW1vLmdldENvbm5lY3Rpb25UcmFuc2Zvcm0oKTtcclxuXHJcbi8vIOmHjee9ruWIsOm7mOiupOS9jee9rlxyXG5kZW1vLnJlc2V0Q29ubmVjdGlvblRyYW5zZm9ybSgpO1xyXG4qL1xyXG4iLCIvKipcclxuICog6LaF5qSt5ZyG5b2i54q25riQ5Y+Y5ryU56S657G7XHJcbiAqIOaPkOS+m+W9oueKtua4kOWPmOeahOS6pOS6kuaOp+WItuWSjOWKqOeUu+a8lOekulxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFN1cGVyZWxsaXBzZVRyYW5zaXRpb25EZW1vIHtcclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKiBAcGFyYW0ge0NSVFNoZWxsfSBjcnRTaGVsbCAtIENSVOWkluWjs+WunuS+i1xyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKGNydFNoZWxsKSB7XHJcbiAgICB0aGlzLmNydFNoZWxsID0gY3J0U2hlbGw7XHJcbiAgICB0aGlzLmFuaW1hdGlvbklkID0gbnVsbDtcclxuICAgIHRoaXMuYW5pbWF0aW9uU3RhcnRUaW1lID0gMDtcclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coJ/Cfjqgg6LaF5qSt5ZyG5b2i54q25riQ5Y+Y5ryU56S65bey5Yid5aeL5YyWJyk7XHJcbiAgICBjb25zb2xlLmxvZygn8J+TliDlj6/nlKjmlrnms5XvvJonKTtcclxuICAgIGNvbnNvbGUubG9nKCcgIOKAoiBzdGFydE1vcnBoQW5pbWF0aW9uKCkgLSDlvIDlp4vlvaLnirblj5jlvaLliqjnlLsnKTtcclxuICAgIGNvbnNvbGUubG9nKCcgIOKAoiBzdG9wTW9ycGhBbmltYXRpb24oKSAtIOWBnOatouWKqOeUuycpO1xyXG4gICAgY29uc29sZS5sb2coJyAg4oCiIGRlbW9uc3RyYXRlRXhwb25lbnRzKCkgLSDmvJTnpLrkuI3lkIzmjIfmlbDmlYjmnpwnKTtcclxuICAgIGNvbnNvbGUubG9nKCcgIOKAoiBzZXRUcmFuc2l0aW9uUG9zaXRpb24oeCx5LHopIC0g6K6+572u5L2N572uJyk7XHJcbiAgICBjb25zb2xlLmxvZygnICDigKIgc2V0VHJhbnNpdGlvbkV4cG9uZW50cyhzdGFydCxlbmQpIC0g6K6+572u5oyH5pWw6IyD5Zu0Jyk7XHJcbiAgICBjb25zb2xlLmxvZygnICDigKIgcmVzZXRUcmFuc2l0aW9uKCkgLSDph43nva7liLDpu5jorqTnirbmgIEnKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOW8gOWni+W9oueKtuWPmOW9ouWKqOeUu1xyXG4gICAqIOWKqOaAgeaUueWPmOi2heakreWchuaMh+aVsO+8jOWunueOsOS7juWchuW9ouWIsOaWueW9oueahOi/nue7reWPmOW9olxyXG4gICAqL1xyXG4gIHN0YXJ0TW9ycGhBbmltYXRpb24oKSB7XHJcbiAgICBjb25zb2xlLmxvZygn8J+OrCDlvIDlp4votoXmpK3lnIblvaLnirblj5jlvaLliqjnlLsuLi4nKTtcclxuICAgIFxyXG4gICAgdGhpcy5zdG9wTW9ycGhBbmltYXRpb24oKTsgLy8g56Gu5L+d5rKh5pyJ6YeN5aSN5Yqo55S7XHJcbiAgICB0aGlzLmFuaW1hdGlvblN0YXJ0VGltZSA9IERhdGUubm93KCk7XHJcbiAgICBcclxuICAgIGNvbnN0IGFuaW1hdGUgPSAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGVsYXBzZWQgPSAoRGF0ZS5ub3coKSAtIHRoaXMuYW5pbWF0aW9uU3RhcnRUaW1lKSAvIDEwMDA7XHJcbiAgICAgIGNvbnN0IHBlcmlvZCA9IDYuMDsgLy8g5Yqo55S75ZGo5pyf77yI56eS77yJXHJcbiAgICAgIFxyXG4gICAgICAvLyDkvb/nlKjmraPlvKbms6LliJvlu7rlubPmu5HnmoTmjIfmlbDlj5jljJZcclxuICAgICAgY29uc3QgdCA9IChNYXRoLnNpbihlbGFwc2VkICogMiAqIE1hdGguUEkgLyBwZXJpb2QpICsgMSkgLyAyOyAvLyAw5YiwMeS5i+mXtFxyXG4gICAgICBcclxuICAgICAgLy8g5oyH5pWw6IyD5Zu077yaMi4w77yI5ZyG5b2i77yJ5YiwIDEyLjDvvIjlsJbplJDmlrnlvaLvvIlcclxuICAgICAgY29uc3Qgc3RhcnRFeHBvbmVudCA9IDIuMCArIHQgKiAxMC4wO1xyXG4gICAgICBjb25zdCBlbmRFeHBvbmVudCA9IDIuMCArICgxIC0gdCkgKiAxMC4wO1xyXG4gICAgICBcclxuICAgICAgLy8g5pu05paw5b2i54q25riQ5Y+YXHJcbiAgICAgIHRoaXMuY3J0U2hlbGwudXBkYXRlVHJhbnNpdGlvbkV4cG9uZW50cyhzdGFydEV4cG9uZW50LCBlbmRFeHBvbmVudCk7XHJcbiAgICAgIFxyXG4gICAgICAvLyDlkIzml7bosIPmlbTkvY3nva7kuqfnlJ/ms6LliqjmlYjmnpxcclxuICAgICAgY29uc3QgcG9zaXRpb25XYXZlID0gTWF0aC5zaW4oZWxhcHNlZCAqIDQpICogMC4yO1xyXG4gICAgICB0aGlzLmNydFNoZWxsLnNldFRyYW5zaXRpb25Qb3NpdGlvbk9mZnNldCgxLjIgKyBwb3NpdGlvbldhdmUsIDAsIDApO1xyXG4gICAgICBcclxuICAgICAgdGhpcy5hbmltYXRpb25JZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIGFuaW1hdGUoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWBnOatouW9oueKtuWPmOW9ouWKqOeUu1xyXG4gICAqL1xyXG4gIHN0b3BNb3JwaEFuaW1hdGlvbigpIHtcclxuICAgIGlmICh0aGlzLmFuaW1hdGlvbklkKSB7XHJcbiAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0aW9uSWQpO1xyXG4gICAgICB0aGlzLmFuaW1hdGlvbklkID0gbnVsbDtcclxuICAgICAgY29uc29sZS5sb2coJ+KPue+4jyDlvaLnirblj5jlvaLliqjnlLvlt7LlgZzmraInKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOa8lOekuuS4jeWQjOeahOi2heakreWchuaMh+aVsOaViOaenFxyXG4gICAqIOiHquWKqOW+queOr+WxleekuuWQhOenjeW9oueKtlxyXG4gICAqL1xyXG4gIGRlbW9uc3RyYXRlRXhwb25lbnRzKCkge1xyXG4gICAgY29uc29sZS5sb2coJ/Cfjq8g5ryU56S66LaF5qSt5ZyG5oyH5pWw5pWI5p6cLi4uJyk7XHJcbiAgICBcclxuICAgIGNvbnN0IGRlbW9uc3RyYXRpb25zID0gW1xyXG4gICAgICB7IG5hbWU6ICfmoIflh4blnIblvaInLCBzdGFydDogMi4wLCBlbmQ6IDIuMCwgZHVyYXRpb246IDIwMDAgfSxcclxuICAgICAgeyBuYW1lOiAn5qSt5ZyG5b2iJywgc3RhcnQ6IDIuMCwgZW5kOiAyLjUsIGR1cmF0aW9uOiAyMDAwIH0sXHJcbiAgICAgIHsgbmFtZTogJ+WchuinkuaWueW9oicsIHN0YXJ0OiAyLjAsIGVuZDogNi4wLCBkdXJhdGlvbjogMjAwMCB9LFxyXG4gICAgICB7IG5hbWU6ICfmlrnlvaInLCBzdGFydDogMi4wLCBlbmQ6IDguMCwgZHVyYXRpb246IDIwMDAgfSxcclxuICAgICAgeyBuYW1lOiAn5bCW6ZSQ5pa55b2iJywgc3RhcnQ6IDIuMCwgZW5kOiAxMi4wLCBkdXJhdGlvbjogMjAwMCB9LFxyXG4gICAgICB7IG5hbWU6ICfotoXlsJbplJDmlrnlvaInLCBzdGFydDogMi4wLCBlbmQ6IDIwLjAsIGR1cmF0aW9uOiAyMDAwIH0sXHJcbiAgICAgIHsgbmFtZTogJ+aegeerr+aWueW9oicsIHN0YXJ0OiAyLjAsIGVuZDogNTAuMCwgZHVyYXRpb246IDIwMDAgfVxyXG4gICAgXTtcclxuICAgIFxyXG4gICAgbGV0IGN1cnJlbnRJbmRleCA9IDA7XHJcbiAgICBcclxuICAgIGNvbnN0IHNob3dOZXh0ID0gKCkgPT4ge1xyXG4gICAgICBpZiAoY3VycmVudEluZGV4ID49IGRlbW9uc3RyYXRpb25zLmxlbmd0aCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfinIUg5oyH5pWw5ryU56S65a6M5oiQJyk7XHJcbiAgICAgICAgdGhpcy5yZXNldFRyYW5zaXRpb24oKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGNvbnN0IGRlbW8gPSBkZW1vbnN0cmF0aW9uc1tjdXJyZW50SW5kZXhdO1xyXG4gICAgICBjb25zb2xlLmxvZyhg8J+TkCAke2RlbW8ubmFtZX06IOi1t+Wni+aMh+aVsD0ke2RlbW8uc3RhcnR9LCDnu5PmnZ/mjIfmlbA9JHtkZW1vLmVuZH1gKTtcclxuICAgICAgXHJcbiAgICAgIHRoaXMuY3J0U2hlbGwudXBkYXRlVHJhbnNpdGlvbkV4cG9uZW50cyhkZW1vLnN0YXJ0LCBkZW1vLmVuZCk7XHJcbiAgICAgIFxyXG4gICAgICBjdXJyZW50SW5kZXgrKztcclxuICAgICAgc2V0VGltZW91dChzaG93TmV4dCwgZGVtby5kdXJhdGlvbik7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBzaG93TmV4dCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6K6+572u5b2i54q25riQ5Y+Y5L2N572uXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHggLSBY5Z2Q5qCHXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHkgLSBZ5Z2Q5qCHICBcclxuICAgKiBAcGFyYW0ge251bWJlcn0geiAtIFrlnZDmoIdcclxuICAgKi9cclxuICBzZXRUcmFuc2l0aW9uUG9zaXRpb24oeCwgeSwgeikge1xyXG4gICAgdGhpcy5jcnRTaGVsbC5zZXRUcmFuc2l0aW9uUG9zaXRpb24oeCwgeSwgeik7XHJcbiAgICBjb25zb2xlLmxvZyhg8J+TjSDlvaLnirbmuJDlj5jkvY3nva7orr7nva7kuLo6ICgke3gudG9GaXhlZCgyKX0sICR7eS50b0ZpeGVkKDIpfSwgJHt6LnRvRml4ZWQoMil9KWApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6K6+572u5b2i54q25riQ5Y+Y5L2N572u5YGP56e7XHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHggLSBY6L205YGP56e7XHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHkgLSBZ6L205YGP56e7XHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHogLSBa6L205YGP56e7XHJcbiAgICovXHJcbiAgc2V0VHJhbnNpdGlvblBvc2l0aW9uT2Zmc2V0KHgsIHksIHopIHtcclxuICAgIHRoaXMuY3J0U2hlbGwuc2V0VHJhbnNpdGlvblBvc2l0aW9uT2Zmc2V0KHgsIHksIHopO1xyXG4gICAgY29uc29sZS5sb2coYPCfk40g5b2i54q25riQ5Y+Y5L2N572u5YGP56e76K6+572u5Li6OiAoJHt4LnRvRml4ZWQoMil9LCAke3kudG9GaXhlZCgyKX0sICR7ei50b0ZpeGVkKDIpfSlgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9ruW9oueKtua4kOWPmOaXi+i9rOWBj+enu1xyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOi9tOaXi+i9rOWBj+enu++8iOW8p+W6pu+8iVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB5IC0gWei9tOaXi+i9rOWBj+enu++8iOW8p+W6pu+8iVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB6IC0gWui9tOaXi+i9rOWBj+enu++8iOW8p+W6pu+8iVxyXG4gICAqL1xyXG4gIHNldFRyYW5zaXRpb25Sb3RhdGlvbk9mZnNldCh4LCB5LCB6KSB7XHJcbiAgICB0aGlzLmNydFNoZWxsLnNldFRyYW5zaXRpb25Sb3RhdGlvbk9mZnNldCh4LCB5LCB6KTtcclxuICAgIGNvbnNvbGUubG9nKGDwn5SEIOW9oueKtua4kOWPmOaXi+i9rOWBj+enu+iuvue9ruS4ujogKCR7eC50b0ZpeGVkKDMpfSwgJHt5LnRvRml4ZWQoMyl9LCAke3oudG9GaXhlZCgzKX0pIOW8p+W6pmApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6K6+572u6LaF5qSt5ZyG5oyH5pWwXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0RXhwb25lbnQgLSDotbflp4vmjIfmlbDvvIjlnIblvaLvvJoyLjDvvIlcclxuICAgKiBAcGFyYW0ge251bWJlcn0gZW5kRXhwb25lbnQgLSDnu5PmnZ/mjIfmlbDvvIjmlrnlvaLvvJo4LjAr77yJXHJcbiAgICovXHJcbiAgc2V0VHJhbnNpdGlvbkV4cG9uZW50cyhzdGFydEV4cG9uZW50LCBlbmRFeHBvbmVudCkge1xyXG4gICAgdGhpcy5jcnRTaGVsbC51cGRhdGVUcmFuc2l0aW9uRXhwb25lbnRzKHN0YXJ0RXhwb25lbnQsIGVuZEV4cG9uZW50KTtcclxuICAgIGNvbnNvbGUubG9nKGDwn5OQIOi2heakreWchuaMh+aVsOiuvue9ruS4ujog6LW35aeLPSR7c3RhcnRFeHBvbmVudH0sIOe7k+adnz0ke2VuZEV4cG9uZW50fWApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6K6+572u5b2i54q25riQ5Y+Y5Y+v6KeB5oCnXHJcbiAgICogQHBhcmFtIHtib29sZWFufSB2aXNpYmxlIC0g5piv5ZCm5Y+v6KeBXHJcbiAgICovXHJcbiAgc2V0VHJhbnNpdGlvblZpc2libGUodmlzaWJsZSkge1xyXG4gICAgdGhpcy5jcnRTaGVsbC5zZXRUcmFuc2l0aW9uVmlzaWJsZSh2aXNpYmxlKTtcclxuICAgIGNvbnNvbGUubG9nKGDwn5GB77iPIOW9oueKtua4kOWPmOWPr+ingeaApzogJHt2aXNpYmxlID8gJ+aYvuekuicgOiAn6ZqQ6JePJ31gKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9ruW9oueKtua4kOWPmOminOiJslxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBjb2xvciAtIOminOiJsuWAvO+8iOWNgeWFrei/m+WItu+8iVxyXG4gICAqL1xyXG4gIHNldFRyYW5zaXRpb25Db2xvcihjb2xvcikge1xyXG4gICAgdGhpcy5jcnRTaGVsbC5zZXRUcmFuc2l0aW9uQ29sb3IoY29sb3IpO1xyXG4gICAgY29uc29sZS5sb2coYPCfjqgg5b2i54q25riQ5Y+Y6aKc6Imy6K6+572u5Li6OiAweCR7Y29sb3IudG9TdHJpbmcoMTYpfWApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6K6+572u5b2i54q25riQ5Y+Y6YCP5piO5bqmXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IG9wYWNpdHkgLSDpgI/mmI7luqbvvIgwLTHvvIlcclxuICAgKi9cclxuICBzZXRUcmFuc2l0aW9uT3BhY2l0eShvcGFjaXR5KSB7XHJcbiAgICB0aGlzLmNydFNoZWxsLnNldFRyYW5zaXRpb25PcGFjaXR5KG9wYWNpdHkpO1xyXG4gICAgY29uc29sZS5sb2coYPCflI0g5b2i54q25riQ5Y+Y6YCP5piO5bqm6K6+572u5Li6OiAke29wYWNpdHkudG9GaXhlZCgyKX1gKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluW9k+WJjeW9oueKtua4kOWPmOeKtuaAgeS/oeaBr1xyXG4gICAqL1xyXG4gIGdldFRyYW5zaXRpb25JbmZvKCkge1xyXG4gICAgY29uc3QgcG9zaXRpb24gPSB0aGlzLmNydFNoZWxsLmdldFRyYW5zaXRpb25Qb3NpdGlvbigpO1xyXG4gICAgY29uc3Qgcm90YXRpb24gPSB0aGlzLmNydFNoZWxsLmdldFRyYW5zaXRpb25Sb3RhdGlvbigpO1xyXG4gICAgY29uc3QgcG9zT2Zmc2V0ID0gdGhpcy5jcnRTaGVsbC5nZXRUcmFuc2l0aW9uUG9zaXRpb25PZmZzZXQoKTtcclxuICAgIGNvbnN0IHJvdE9mZnNldCA9IHRoaXMuY3J0U2hlbGwuZ2V0VHJhbnNpdGlvblJvdGF0aW9uT2Zmc2V0KCk7XHJcbiAgICBcclxuICAgIGNvbnN0IGluZm8gPSB7XHJcbiAgICAgIHBvc2l0aW9uOiB7IHg6IHBvc2l0aW9uLngsIHk6IHBvc2l0aW9uLnksIHo6IHBvc2l0aW9uLnogfSxcclxuICAgICAgcm90YXRpb246IHsgeDogcm90YXRpb24ueCwgeTogcm90YXRpb24ueSwgejogcm90YXRpb24ueiB9LFxyXG4gICAgICBwb3NpdGlvbk9mZnNldDogcG9zT2Zmc2V0LFxyXG4gICAgICByb3RhdGlvbk9mZnNldDogcm90T2Zmc2V0XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZygn8J+TiiDlvZPliY3lvaLnirbmuJDlj5jnirbmgIE6JywgaW5mbyk7XHJcbiAgICByZXR1cm4gaW5mbztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOmHjee9ruW9oueKtua4kOWPmOWIsOm7mOiupOeKtuaAgVxyXG4gICAqL1xyXG4gIHJlc2V0VHJhbnNpdGlvbigpIHtcclxuICAgIGNvbnNvbGUubG9nKCfwn5SEIOmHjee9ruW9oueKtua4kOWPmOWIsOm7mOiupOeKtuaAgS4uLicpO1xyXG4gICAgXHJcbiAgICAvLyDlgZzmraLliqjnlLtcclxuICAgIHRoaXMuc3RvcE1vcnBoQW5pbWF0aW9uKCk7XHJcbiAgICBcclxuICAgIC8vIOmHjee9ruaMh+aVsFxyXG4gICAgdGhpcy5jcnRTaGVsbC51cGRhdGVUcmFuc2l0aW9uRXhwb25lbnRzKDIuMCwgOC4wKTtcclxuICAgIFxyXG4gICAgLy8g6YeN572u5L2N572u5YGP56e7XHJcbiAgICB0aGlzLmNydFNoZWxsLnNldFRyYW5zaXRpb25Qb3NpdGlvbk9mZnNldCgxLjIsIDAsIDApO1xyXG4gICAgXHJcbiAgICAvLyDph43nva7ml4vovazlgY/np7tcclxuICAgIHRoaXMuY3J0U2hlbGwuc2V0VHJhbnNpdGlvblJvdGF0aW9uT2Zmc2V0KDAsIDAsIDApO1xyXG4gICAgXHJcbiAgICAvLyDph43nva7lj6/op4HmgKflkozmoLflvI9cclxuICAgIHRoaXMuY3J0U2hlbGwuc2V0VHJhbnNpdGlvblZpc2libGUodHJ1ZSk7XHJcbiAgICB0aGlzLmNydFNoZWxsLnNldFRyYW5zaXRpb25Db2xvcigweDk5ZGRmZik7XHJcbiAgICB0aGlzLmNydFNoZWxsLnNldFRyYW5zaXRpb25PcGFjaXR5KDAuOCk7XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCfinIUg5b2i54q25riQ5Y+Y5bey6YeN572uJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmvJTnpLrkvY3nva7mjqfliLblip/og71cclxuICAgKi9cclxuICBkZW1vbnN0cmF0ZVBvc2l0aW9uQ29udHJvbCgpIHtcclxuICAgIGNvbnNvbGUubG9nKCfwn46vIOa8lOekuuS9jee9ruaOp+WItuWKn+iDvS4uLicpO1xyXG4gICAgXHJcbiAgICBjb25zdCBwb3NpdGlvbnMgPSBbXHJcbiAgICAgIHsgbmFtZTogJ+m7mOiupOS9jee9ricsIG9mZnNldDogeyB4OiAxLjIsIHk6IDAsIHo6IDAgfSB9LFxyXG4gICAgICB7IG5hbWU6ICfkuIrnp7snLCBvZmZzZXQ6IHsgeDogMS4yLCB5OiAwLjUsIHo6IDAgfSB9LFxyXG4gICAgICB7IG5hbWU6ICfkuIvnp7snLCBvZmZzZXQ6IHsgeDogMS4yLCB5OiAtMC41LCB6OiAwIH0gfSxcclxuICAgICAgeyBuYW1lOiAn5YmN56e7Jywgb2Zmc2V0OiB7IHg6IDEuMiwgeTogMCwgejogMC41IH0gfSxcclxuICAgICAgeyBuYW1lOiAn5ZCO56e7Jywgb2Zmc2V0OiB7IHg6IDEuMiwgeTogMCwgejogLTAuNSB9IH0sXHJcbiAgICAgIHsgbmFtZTogJ+W3puenuycsIG9mZnNldDogeyB4OiAwLjcsIHk6IDAsIHo6IDAgfSB9LFxyXG4gICAgICB7IG5hbWU6ICflj7Pnp7snLCBvZmZzZXQ6IHsgeDogMS43LCB5OiAwLCB6OiAwIH0gfVxyXG4gICAgXTtcclxuICAgIFxyXG4gICAgbGV0IGN1cnJlbnRJbmRleCA9IDA7XHJcbiAgICBcclxuICAgIGNvbnN0IHNob3dOZXh0ID0gKCkgPT4ge1xyXG4gICAgICBpZiAoY3VycmVudEluZGV4ID49IHBvc2l0aW9ucy5sZW5ndGgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygn4pyFIOS9jee9ruaOp+WItua8lOekuuWujOaIkCcpO1xyXG4gICAgICAgIHRoaXMucmVzZXRUcmFuc2l0aW9uKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBwb3MgPSBwb3NpdGlvbnNbY3VycmVudEluZGV4XTtcclxuICAgICAgY29uc29sZS5sb2coYPCfk40gJHtwb3MubmFtZX06ICgke3Bvcy5vZmZzZXQueH0sICR7cG9zLm9mZnNldC55fSwgJHtwb3Mub2Zmc2V0Lnp9KWApO1xyXG4gICAgICBcclxuICAgICAgdGhpcy5jcnRTaGVsbC5zZXRUcmFuc2l0aW9uUG9zaXRpb25PZmZzZXQocG9zLm9mZnNldC54LCBwb3Mub2Zmc2V0LnksIHBvcy5vZmZzZXQueik7XHJcbiAgICAgIFxyXG4gICAgICBjdXJyZW50SW5kZXgrKztcclxuICAgICAgc2V0VGltZW91dChzaG93TmV4dCwgMTUwMCk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBzaG93TmV4dCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5byA5aeL6J665peL5L2N572u5Yqo55S7XHJcbiAgICovXHJcbiAgc3RhcnRTcGlyYWxBbmltYXRpb24oKSB7XHJcbiAgICBjb25zb2xlLmxvZygn8J+MgCDlvIDlp4vonrrml4vkvY3nva7liqjnlLsuLi4nKTtcclxuICAgIFxyXG4gICAgdGhpcy5zdG9wTW9ycGhBbmltYXRpb24oKTsgLy8g5YGc5q2i5YW25LuW5Yqo55S7XHJcbiAgICB0aGlzLmFuaW1hdGlvblN0YXJ0VGltZSA9IERhdGUubm93KCk7XHJcbiAgICBcclxuICAgIGNvbnN0IGFuaW1hdGUgPSAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGVsYXBzZWQgPSAoRGF0ZS5ub3coKSAtIHRoaXMuYW5pbWF0aW9uU3RhcnRUaW1lKSAvIDEwMDA7XHJcbiAgICAgIGNvbnN0IGZyZXF1ZW5jeSA9IDAuNTsgLy8g6J665peL6aKR546HXHJcbiAgICAgIFxyXG4gICAgICAvLyDonrrml4vlj4LmlbBcclxuICAgICAgY29uc3QgcmFkaXVzID0gMC4zO1xyXG4gICAgICBjb25zdCBiYXNlWCA9IDEuMjtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHggPSBiYXNlWCArIE1hdGguY29zKGVsYXBzZWQgKiBmcmVxdWVuY3kgKiAyICogTWF0aC5QSSkgKiByYWRpdXM7XHJcbiAgICAgIGNvbnN0IHkgPSBNYXRoLnNpbihlbGFwc2VkICogZnJlcXVlbmN5ICogMiAqIE1hdGguUEkpICogcmFkaXVzO1xyXG4gICAgICBjb25zdCB6ID0gTWF0aC5zaW4oZWxhcHNlZCAqIGZyZXF1ZW5jeSAqIE1hdGguUEkpICogMC4yO1xyXG4gICAgICBcclxuICAgICAgdGhpcy5jcnRTaGVsbC5zZXRUcmFuc2l0aW9uUG9zaXRpb25PZmZzZXQoeCwgeSwgeik7XHJcbiAgICAgIFxyXG4gICAgICAvLyDlkIzml7blj5jljJbmjIfmlbDliJvlu7rmm7TlpI3mnYLnmoTmlYjmnpxcclxuICAgICAgY29uc3QgZXhwV2F2ZSA9IChNYXRoLnNpbihlbGFwc2VkICogMikgKyAxKSAvIDI7XHJcbiAgICAgIGNvbnN0IHN0YXJ0RXhwID0gMi4wICsgZXhwV2F2ZSAqIDYuMDtcclxuICAgICAgY29uc3QgZW5kRXhwID0gOC4wIC0gZXhwV2F2ZSAqIDQuMDtcclxuICAgICAgdGhpcy5jcnRTaGVsbC51cGRhdGVUcmFuc2l0aW9uRXhwb25lbnRzKHN0YXJ0RXhwLCBlbmRFeHApO1xyXG4gICAgICBcclxuICAgICAgdGhpcy5hbmltYXRpb25JZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIGFuaW1hdGUoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0ICogYXMgZGF0IGZyb20gJ2RhdC5ndWknO1xuaW1wb3J0IHsgQ09ORklHLCBXQVZFRk9STV9UWVBFUyB9IGZyb20gJy4uL2NvbmZpZ0xvYWRlcic7XG5cbmV4cG9ydCBjbGFzcyBHdWlDb250cm9sbGVyIHtcbiAgY29uc3RydWN0b3IoY2FsbGJhY2tzID0ge30pIHtcbiAgICAvLyDlk43lupTlvI/lrr3luqborqHnrpcgLSDln7rkuo4yNTYwKjE0NDDmoIflh4blkJHkuIvlhbzlrrlcbiAgICB0aGlzLmdldFJlc3BvbnNpdmVXaWR0aCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgICBjb25zdCBoZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgICBcbiAgICAgIC8vIDJL5YiG6L6o546H5Y+K5Lul5LiKICgyNTYwKjE0NDArKVxuICAgICAgaWYgKHdpZHRoID49IDI1NjAgJiYgaGVpZ2h0ID49IDE0NDApIHJldHVybiA0MDA7XG4gICAgICAvLyDmoIflh4ZGSEQgKDE5MjAqMTA4MClcbiAgICAgIGlmICh3aWR0aCA+PSAxOTIwICYmIGhlaWdodCA+PSAxMDgwKSByZXR1cm4gMzUwO1xuICAgICAgLy8g5Lit562J5YiG6L6o546HICgxMzY2Kjc2OCwgMTYwMCo5MDApXG4gICAgICBpZiAod2lkdGggPj0gMTM2NikgcmV0dXJuIDMwMDtcbiAgICAgIC8vIOWwj+Wxj+W5lSAoMTAyNCo3NjgpXG4gICAgICBpZiAod2lkdGggPj0gMTAyNCkgcmV0dXJuIDI2MDtcbiAgICAgIC8vIOW5s+advyAoNzY4cHgtMTAyM3B4KVxuICAgICAgaWYgKHdpZHRoID49IDc2OCkgcmV0dXJuIDI0MDtcbiAgICAgIC8vIOenu+WKqOiuvuWkhyAoPCA3NjhweClcbiAgICAgIHJldHVybiAyMjA7XG4gICAgfTtcbiAgICBcbiAgICB0aGlzLmd1aSA9IG5ldyBkYXQuR1VJKHsgd2lkdGg6IHRoaXMuZ2V0UmVzcG9uc2l2ZVdpZHRoKCkgfSk7XG4gICAgdGhpcy5jYWxsYmFja3MgPSBjYWxsYmFja3M7XG4gICAgXG4gICAgLy8g5L+d5a2Y5Zue6LCD5Ye95pWwXG4gICAgdGhpcy5vbkJlYW1DaGFuZ2UgPSBjYWxsYmFja3Mub25CZWFtQ2hhbmdlIHx8ICgoKSA9PiB7fSk7XG4gICAgdGhpcy5vbkRlZmxlY3Rpb25DaGFuZ2UgPSBjYWxsYmFja3Mub25EZWZsZWN0aW9uQ2hhbmdlIHx8ICgoKSA9PiB7fSk7XG4gICAgdGhpcy5vbldhdmVmb3JtQ2hhbmdlID0gY2FsbGJhY2tzLm9uV2F2ZWZvcm1DaGFuZ2UgfHwgKCgpID0+IHt9KTtcbiAgICB0aGlzLm9uU2NyZWVuQ2hhbmdlID0gY2FsbGJhY2tzLm9uU2NyZWVuQ2hhbmdlIHx8ICgoKSA9PiB7fSk7XG4gICAgdGhpcy5vblNoZWxsQ2hhbmdlID0gY2FsbGJhY2tzLm9uU2hlbGxDaGFuZ2UgfHwgKCgpID0+IHt9KTtcbiAgICBcbiAgICB0aGlzLmluaXRHdWkoKTtcbiAgICB0aGlzLnNldHVwUmVzcG9uc2l2ZUhhbmRsZXJzKCk7XG4gIH1cbiAgXG4gIGluaXRHdWkoKSB7XG4gICAgLy8g5Yib5bu65ZCE5Liq5o6n5Yi26Z2i5p2/XG4gICAgdGhpcy5pbml0QmVhbUNvbnRyb2xzKCk7XG4gICAgdGhpcy5pbml0RGVmbGVjdGlvbkNvbnRyb2xzKCk7XG4gICAgdGhpcy5pbml0V2F2ZWZvcm1Db250cm9scygpO1xuICAgIHRoaXMuaW5pdFNjcmVlbkNvbnRyb2xzKCk7XG4gICAgdGhpcy5pbml0U2hlbGxDb250cm9scygpO1xuICB9XG4gIFxuICBpbml0QmVhbUNvbnRyb2xzKCkge1xuICAgIGNvbnN0IGJlYW1Gb2xkZXIgPSB0aGlzLmd1aS5hZGRGb2xkZXIoJ+eUteWtkOadn+WPguaVsCcpO1xuICAgIFxuICAgIGJlYW1Gb2xkZXIuYWRkKENPTkZJRy5iZWFtLCAnaW50ZW5zaXR5JywgMCwgMSlcbiAgICAgIC5uYW1lKCflvLrluqYnKVxuICAgICAgLm9uQ2hhbmdlKCgpID0+IHRoaXMub25CZWFtQ2hhbmdlKENPTkZJRy5iZWFtKSk7XG4gICAgICBcbiAgICBiZWFtRm9sZGVyLmFkZENvbG9yKHsgY29sb3I6IENPTkZJRy5iZWFtLmNvbG9yIH0sICdjb2xvcicpXG4gICAgICAubmFtZSgn6aKc6ImyJylcbiAgICAgIC5vbkNoYW5nZSgodmFsdWUpID0+IHtcbiAgICAgICAgQ09ORklHLmJlYW0uY29sb3IgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5vbkJlYW1DaGFuZ2UoQ09ORklHLmJlYW0pO1xuICAgICAgfSk7XG4gICAgICBcbiAgICBiZWFtRm9sZGVyLm9wZW4oKTtcbiAgfVxuICBcbiAgaW5pdERlZmxlY3Rpb25Db250cm9scygpIHtcbiAgICBjb25zdCBkZWZsZWN0aW9uRm9sZGVyID0gdGhpcy5ndWkuYWRkRm9sZGVyKCflgY/ovazmnb/lj4LmlbAnKTtcbiAgICBcbiAgICBkZWZsZWN0aW9uRm9sZGVyLmFkZChDT05GSUcuZGVmbGVjdGlvbi5ob3Jpem9udGFsLCAndm9sdGFnZScsIC01LCA1LCAwLjEpXG4gICAgICAubmFtZSgn5rC05bmz55S15Y6LIChWKScpXG4gICAgICAub25DaGFuZ2UoKCkgPT4gdGhpcy5vbkRlZmxlY3Rpb25DaGFuZ2UoQ09ORklHLmRlZmxlY3Rpb24pKTtcbiAgICAgIFxuICAgIGRlZmxlY3Rpb25Gb2xkZXIuYWRkKENPTkZJRy5kZWZsZWN0aW9uLnZlcnRpY2FsLCAndm9sdGFnZScsIC01LCA1LCAwLjEpXG4gICAgICAubmFtZSgn5Z6C55u055S15Y6LIChWKScpXG4gICAgICAub25DaGFuZ2UoKCkgPT4gdGhpcy5vbkRlZmxlY3Rpb25DaGFuZ2UoQ09ORklHLmRlZmxlY3Rpb24pKTtcbiAgICAgIFxuICAgIGRlZmxlY3Rpb25Gb2xkZXIub3BlbigpO1xuICB9XG4gIFxuICBpbml0V2F2ZWZvcm1Db250cm9scygpIHtcbiAgICBjb25zdCB3YXZlZm9ybUZvbGRlciA9IHRoaXMuZ3VpLmFkZEZvbGRlcign5rOi5b2i5Y+C5pWwJyk7XG4gICAgXG4gICAgLy8g5Yib5bu65rOi5b2i57G75Z6L5LiL5ouJ6I+c5Y2VXG4gICAgY29uc3Qgd2F2ZWZvcm1PcHRpb25zID0ge307XG4gICAgT2JqZWN0LmVudHJpZXMoV0FWRUZPUk1fVFlQRVMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgd2F2ZWZvcm1PcHRpb25zW3ZhbHVlXSA9IGtleTtcbiAgICB9KTtcbiAgICBcbiAgICB3YXZlZm9ybUZvbGRlci5hZGQoQ09ORklHLndhdmVmb3JtLCAnZW5hYmxlZCcpXG4gICAgICAubmFtZSgn5ZCv55So5rOi5b2iJylcbiAgICAgIC5vbkNoYW5nZSgoKSA9PiB0aGlzLm9uV2F2ZWZvcm1DaGFuZ2UoQ09ORklHLndhdmVmb3JtKSk7XG4gICAgICBcbiAgICB3YXZlZm9ybUZvbGRlci5hZGQoQ09ORklHLndhdmVmb3JtLCAndHlwZScsIE9iamVjdC5rZXlzKFdBVkVGT1JNX1RZUEVTKSlcbiAgICAgIC5uYW1lKCfms6LlvaLnsbvlnosnKVxuICAgICAgLm9uQ2hhbmdlKCgpID0+IHRoaXMub25XYXZlZm9ybUNoYW5nZShDT05GSUcud2F2ZWZvcm0pKTtcbiAgICAgIFxuICAgIHdhdmVmb3JtRm9sZGVyLmFkZChDT05GSUcud2F2ZWZvcm0sICdmcmVxdWVuY3knLCAwLjEsIDUsIDAuMSlcbiAgICAgIC5uYW1lKCfpopHnjocgKEh6KScpXG4gICAgICAub25DaGFuZ2UoKCkgPT4gdGhpcy5vbldhdmVmb3JtQ2hhbmdlKENPTkZJRy53YXZlZm9ybSkpO1xuICAgICAgXG4gICAgd2F2ZWZvcm1Gb2xkZXIuYWRkKENPTkZJRy53YXZlZm9ybSwgJ2FtcGxpdHVkZScsIDAsIDUsIDAuMSlcbiAgICAgIC5uYW1lKCfmjK/luYUnKVxuICAgICAgLm9uQ2hhbmdlKCgpID0+IHRoaXMub25XYXZlZm9ybUNoYW5nZShDT05GSUcud2F2ZWZvcm0pKTtcbiAgICAgIFxuICAgIHdhdmVmb3JtRm9sZGVyLm9wZW4oKTtcbiAgfVxuICBcbiAgaW5pdFNjcmVlbkNvbnRyb2xzKCkge1xuICAgIGNvbnN0IHNjcmVlbkZvbGRlciA9IHRoaXMuZ3VpLmFkZEZvbGRlcign6I2n5YWJ5bGP5Y+C5pWwJyk7XG4gICAgXG4gICAgc2NyZWVuRm9sZGVyLmFkZChDT05GSUcuc2NyZWVuLCAncGVyc2lzdGVuY2UnLCAwLCAxLCAwLjAxKVxuICAgICAgLm5hbWUoJ+S9mei+ieaMgee7rScpXG4gICAgICAub25DaGFuZ2UoKCkgPT4gdGhpcy5vblNjcmVlbkNoYW5nZShDT05GSUcuc2NyZWVuKSk7XG4gICAgICBcbiAgICBzY3JlZW5Gb2xkZXIuYWRkQ29sb3IoeyBjb2xvcjogQ09ORklHLnNjcmVlbi5jb2xvciB9LCAnY29sb3InKVxuICAgICAgLm5hbWUoJ+iNp+WFieminOiJsicpXG4gICAgICAub25DaGFuZ2UoKHZhbHVlKSA9PiB7XG4gICAgICAgIENPTkZJRy5zY3JlZW4uY29sb3IgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5vblNjcmVlbkNoYW5nZShDT05GSUcuc2NyZWVuKTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgc2NyZWVuRm9sZGVyLmFkZChDT05GSUcuc2NyZWVuLCAnaW50ZW5zaXR5JywgMCwgMSwgMC4xKVxuICAgICAgLm5hbWUoJ+WPkeWFieW8uuW6picpXG4gICAgICAub25DaGFuZ2UoKCkgPT4gdGhpcy5vblNjcmVlbkNoYW5nZShDT05GSUcuc2NyZWVuKSk7XG4gICAgICBcbiAgICBzY3JlZW5Gb2xkZXIub3BlbigpO1xuICB9XG4gIFxuICBpbml0U2hlbGxDb250cm9scygpIHtcbiAgICBjb25zdCBzaGVsbEZvbGRlciA9IHRoaXMuZ3VpLmFkZEZvbGRlcign5aSW5aOz5Y+C5pWwJyk7XG4gICAgXG4gICAgc2hlbGxGb2xkZXIuYWRkKENPTkZJRy5zaGVsbCwgJ3Zpc2libGUnKVxuICAgICAgLm5hbWUoJ+aYvuekuuWkluWjsycpXG4gICAgICAub25DaGFuZ2UoKCkgPT4gdGhpcy5vblNoZWxsQ2hhbmdlKENPTkZJRy5zaGVsbCkpO1xuICAgICAgXG4gICAgc2hlbGxGb2xkZXIuYWRkKENPTkZJRy5zaGVsbCwgJ29wYWNpdHknLCAwLCAxLCAwLjAxKVxuICAgICAgLm5hbWUoJ+mAj+aYjuW6picpXG4gICAgICAub25DaGFuZ2UoKCkgPT4gdGhpcy5vblNoZWxsQ2hhbmdlKENPTkZJRy5zaGVsbCkpO1xuICAgICAgXG4gIFxuICAgIHNoZWxsRm9sZGVyLm9wZW4oKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiuvue9ruWTjeW6lOW8j+WkhOeQhuWZqFxuICAgKi9cbiAgc2V0dXBSZXNwb25zaXZlSGFuZGxlcnMoKSB7XG4gICAgLy8g6Ziy5oqW5Ye95pWwXG4gICAgbGV0IHJlc2l6ZVRpbWVvdXQ7XG4gICAgY29uc3QgZGVib3VuY2UgPSAoZnVuYywgd2FpdCkgPT4ge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGV4ZWN1dGVkRnVuY3Rpb24oLi4uYXJncykge1xuICAgICAgICBjb25zdCBsYXRlciA9ICgpID0+IHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQocmVzaXplVGltZW91dCk7XG4gICAgICAgICAgZnVuYyguLi5hcmdzKTtcbiAgICAgICAgfTtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHJlc2l6ZVRpbWVvdXQpO1xuICAgICAgICByZXNpemVUaW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XG4gICAgICB9O1xuICAgIH07XG4gICAgXG4gICAgLy8g56qX5Y+j5aSn5bCP5pS55Y+Y5pe26LCD5pW0R1VJ5a695bqmXG4gICAgY29uc3QgaGFuZGxlUmVzaXplID0gZGVib3VuY2UoKCkgPT4ge1xuICAgICAgY29uc3QgbmV3V2lkdGggPSB0aGlzLmdldFJlc3BvbnNpdmVXaWR0aCgpO1xuICAgICAgaWYgKHRoaXMuZ3VpICYmIHRoaXMuZ3VpLmRvbUVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5ndWkud2lkdGggPSBuZXdXaWR0aDtcbiAgICAgICAgLy8g5omL5Yqo5pu05pawR1VJ55qERE9N5qC35byPXG4gICAgICAgIGNvbnN0IGd1aUVsZW1lbnQgPSB0aGlzLmd1aS5kb21FbGVtZW50O1xuICAgICAgICBpZiAoZ3VpRWxlbWVudCkge1xuICAgICAgICAgIGd1aUVsZW1lbnQuc3R5bGUud2lkdGggPSBuZXdXaWR0aCArICdweCc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LCAyNTApO1xuICAgIFxuICAgIC8vIOebkeWQrOeql+WPo+Wkp+Wwj+WPmOWMllxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpO1xuICAgIFxuICAgIC8vIOWtmOWCqOa4heeQhuWHveaVsFxuICAgIHRoaXMuY2xlYW51cCA9ICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpO1xuICAgIH07XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDplIDmr4FHVUnmjqfliLblmahcbiAgICovXG4gIGRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuY2xlYW51cCkge1xuICAgICAgdGhpcy5jbGVhbnVwKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLmd1aSkge1xuICAgICAgdGhpcy5ndWkuZGVzdHJveSgpO1xuICAgIH1cbiAgfVxufSAiLCJpbXBvcnQgKiBhcyBkYXQgZnJvbSAnZGF0Lmd1aSc7XG5pbXBvcnQgeyBDT05GSUcgfSBmcm9tICcuLi9jb25maWdMb2FkZXInO1xuXG4vKipcbiAqIFVJ5o6n5Yi25Zmo57G7XG4gKiDotJ/otKPnrqHnkIbnlYzpnaLlhYPntKDlkozkuqTkupJcbiAqL1xuZXhwb3J0IGNsYXNzIFVJQ29udHJvbGxlciB7XG4gIC8qKlxuICAgKiDmnoTpgKDlh73mlbBcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSDpgInpoblcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuY29tcG9uZW50cyAtIOe7hOS7tuWvueixoVxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucy5jb250cm9sbGVycyAtIOaOp+WItuWZqOWvueixoVxuICAgKi9cbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5jb21wb25lbnRzID0gb3B0aW9ucy5jb21wb25lbnRzIHx8IHt9O1xuICAgIHRoaXMuY29udHJvbGxlcnMgPSBvcHRpb25zLmNvbnRyb2xsZXJzIHx8IHt9O1xuICAgIFxuICAgIC8vIOWIm+W7ulVJ5a655ZmoXG4gICAgdGhpcy5jb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0aGlzLmNvbnRhaW5lci5pZCA9ICd1aS1jb250YWluZXInO1xuICAgIFxuICAgIC8vIOehruS/nURPTeW3suWKoOi9vVxuICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnbG9hZGluZycpIHtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZVVJKCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pbml0aWFsaXplVUkoKTtcbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliJ3lp4vljJZVSe+8iOWcqERPTeWKoOi9veWujOaIkOWQjuiwg+eUqO+8iVxuICAgKi9cbiAgaW5pdGlhbGl6ZVVJKCkge1xuICAgIGNvbnNvbGUubG9nKCfliJ3lp4vljJZVSS4uLicpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5jb250YWluZXIpO1xuICAgIFxuICAgIC8vIOWIneWni+WMllVJXG4gICAgdGhpcy5pbml0U3R5bGVzKCk7XG4gICAgdGhpcy5pbml0VUkoKTtcbiAgICBcbiAgICAvLyDmo4Dmn6Vjb250cm9sbGVyc+aYr+WQpuato+ehruS8oOmAklxuICAgIGNvbnNvbGUubG9nKCfmo4Dmn6XmjqfliLblmag6Jywge1xuICAgICAgbGFiZWxTeXN0ZW06ICEhdGhpcy5jb250cm9sbGVycy5sYWJlbFN5c3RlbSxcbiAgICAgIGV4cGxvZGVkVmlldzogISF0aGlzLmNvbnRyb2xsZXJzLmV4cGxvZGVkVmlldyxcbiAgICAgIGRlbW9BbmltYXRpb246ICEhdGhpcy5jb250cm9sbGVycy5kZW1vQW5pbWF0aW9uXG4gICAgfSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ1VJ5o6n5Yi25Zmo5Yid5aeL5YyW5a6M5oiQJyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliJ3lp4vljJbmoLflvI9cbiAgICovXG4gIGluaXRTdHlsZXMoKSB7XG4gICAgY29uc3Qgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIHN0eWxlLnRleHRDb250ZW50ID0gYFxuICAgICAgI3VpLWNvbnRhaW5lciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLmNvbnRyb2wtcGFuZWwge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogJHtDT05GSUcudWkuY29udHJvbFBhbmVsLnBvc2l0aW9uLmJvdHRvbX07XG4gICAgICAgIHJpZ2h0OiAke0NPTkZJRy51aS5jb250cm9sUGFuZWwucG9zaXRpb24ucmlnaHR9O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NPTkZJRy51aS5jb250cm9sUGFuZWwuYmFja2dyb3VuZENvbG9yfTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogJHtDT05GSUcudWkuY29udHJvbFBhbmVsLmJvcmRlclJhZGl1c307XG4gICAgICAgIHBhZGRpbmc6ICR7Q09ORklHLnVpLmNvbnRyb2xQYW5lbC5wYWRkaW5nfTtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBnYXA6IDEwcHg7XG4gICAgICAgIHotaW5kZXg6ICR7Q09ORklHLnVpLmNvbnRyb2xQYW5lbC56SW5kZXh9O1xuICAgICAgfVxuICAgICAgXG4gICAgICAuY29udHJvbC1wYW5lbCBidXR0b24ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NPTkZJRy51aS5idXR0b24uYmFja2dyb3VuZENvbG9yfTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHBhZGRpbmc6ICR7Q09ORklHLnVpLmJ1dHRvbi5wYWRkaW5nfTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBtYXJnaW46IDJweDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke0NPTkZJRy51aS5idXR0b24uYm9yZGVyUmFkaXVzfTtcbiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xuICAgICAgfVxuICAgICAgXG4gICAgICAuY29udHJvbC1wYW5lbCBidXR0b246aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NPTkZJRy51aS5idXR0b24uaG92ZXJDb2xvcn07XG4gICAgICB9XG4gICAgICBcbiAgICAgIC5jb250cm9sLXBhbmVsIGJ1dHRvbi5hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NPTkZJRy51aS5idXR0b24uYWN0aXZlQ29sb3J9O1xuICAgICAgfVxuICAgICAgXG4gICAgICAuY29udHJvbC1wYW5lbCBidXR0b24ud2FybmluZyB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Q09ORklHLnVpLmJ1dHRvbi53YXJuaW5nQ29sb3J9O1xuICAgICAgfVxuICAgICAgXG4gICAgICAuY29udHJvbC1wYW5lbCAuYnV0dG9uLWdyb3VwIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBnYXA6IDVweDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLmRlbW8tcGFuZWwge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogJHtDT05GSUcudWkuZGVtb1BhbmVsLnBvc2l0aW9uLnRvcH07XG4gICAgICAgIGxlZnQ6ICR7Q09ORklHLnVpLmRlbW9QYW5lbC5wb3NpdGlvbi5sZWZ0fTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtDT05GSUcudWkuZGVtb1BhbmVsLmJhY2tncm91bmRDb2xvcn07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Q09ORklHLnVpLmRlbW9QYW5lbC5ib3JkZXJSYWRpdXN9O1xuICAgICAgICBwYWRkaW5nOiAke0NPTkZJRy51aS5kZW1vUGFuZWwucGFkZGluZ307XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgICAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICAgICAgbWF4LXdpZHRoOiAke0NPTkZJRy51aS5kZW1vUGFuZWwubWF4V2lkdGh9O1xuICAgICAgICB6LWluZGV4OiAke0NPTkZJRy51aS5kZW1vUGFuZWwuekluZGV4fTtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzO1xuICAgICAgfVxuICAgICAgXG4gICAgICAuZGVtby1wYW5lbCBoMiB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLmRlbW8tcGFuZWwgcCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLmRlbW8tcGFuZWwgLnByb2dyZXNzIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogNHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICB9XG4gICAgICBcbiAgICAgIC5kZW1vLXBhbmVsIC5wcm9ncmVzcy1iYXIge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XG4gICAgICAgIHdpZHRoOiAwJTtcbiAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC4zcztcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLmRlbW8tcGFuZWwgLnN0ZXAtaW5mbyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICB9XG4gICAgYDtcbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOWIneWni+WMllVJXG4gICAqL1xuICBpbml0VUkoKSB7XG4gICAgdGhpcy5pbml0Q29udHJvbFBhbmVsKCk7XG4gICAgdGhpcy5pbml0RGVtb1BhbmVsKCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliJ3lp4vljJbmjqfliLbpnaLmnb9cbiAgICovXG4gIGluaXRDb250cm9sUGFuZWwoKSB7XG4gICAgY29uc29sZS5sb2coJ+WIneWni+WMluaOp+WItumdouadvy4uLicpO1xuICAgIFxuICAgIC8vIOWIm+W7uuaOp+WItumdouadv1xuICAgIHRoaXMuY29udHJvbFBhbmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGhpcy5jb250cm9sUGFuZWwuY2xhc3NOYW1lID0gJ2NvbnRyb2wtcGFuZWwnO1xuICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuY29udHJvbFBhbmVsKTtcbiAgICBcbiAgICAvLyDmoIfnrb7mjqfliLZcbiAgICBjb25zdCBsYWJlbEdyb3VwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGFiZWxHcm91cC5jbGFzc05hbWUgPSAnYnV0dG9uLWdyb3VwJztcbiAgICBcbiAgICBjb25zdCBsYWJlbFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGFiZWxUaXRsZS50ZXh0Q29udGVudCA9ICfmoIfnrb7mjqfliLYnO1xuICAgIGxhYmVsVGl0bGUuc3R5bGUubWFyZ2luQm90dG9tID0gJzVweCc7XG4gICAgbGFiZWxHcm91cC5hcHBlbmRDaGlsZChsYWJlbFRpdGxlKTtcbiAgICBcbiAgICBjb25zdCB0b2dnbGVMYWJlbHNCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICB0b2dnbGVMYWJlbHNCdG4udGV4dENvbnRlbnQgPSAn5pi+56S65qCH562+JztcbiAgICB0b2dnbGVMYWJlbHNCdG4ub25jbGljayA9ICgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCfmoIfnrb7mjInpkq7ooqvngrnlh7snKTtcbiAgICAgIHRoaXMudG9nZ2xlTGFiZWxzKCk7XG4gICAgfTtcbiAgICB0b2dnbGVMYWJlbHNCdG4uaWQgPSAndG9nZ2xlLWxhYmVscy1idG4nO1xuICAgIGxhYmVsR3JvdXAuYXBwZW5kQ2hpbGQodG9nZ2xlTGFiZWxzQnRuKTtcbiAgICBcbiAgICB0aGlzLmNvbnRyb2xQYW5lbC5hcHBlbmRDaGlsZChsYWJlbEdyb3VwKTtcbiAgICBcbiAgICAvLyDliIbop6Pop4blm77mjqfliLZcbiAgICBjb25zdCBleHBsb2RlR3JvdXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBleHBsb2RlR3JvdXAuY2xhc3NOYW1lID0gJ2J1dHRvbi1ncm91cCc7XG4gICAgXG4gICAgY29uc3QgZXhwbG9kZVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZXhwbG9kZVRpdGxlLnRleHRDb250ZW50ID0gJ+WIhuino+inhuWbvic7XG4gICAgZXhwbG9kZVRpdGxlLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICc1cHgnO1xuICAgIGV4cGxvZGVHcm91cC5hcHBlbmRDaGlsZChleHBsb2RlVGl0bGUpO1xuICAgIFxuICAgIGNvbnN0IHRvZ2dsZUV4cGxvZGVCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICB0b2dnbGVFeHBsb2RlQnRuLnRleHRDb250ZW50ID0gJ+WIhuino+inhuWbvic7XG4gICAgdG9nZ2xlRXhwbG9kZUJ0bi5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ+WIhuino+inhuWbvuaMiemSruiiq+eCueWHuycpO1xuICAgICAgdGhpcy50b2dnbGVFeHBsb2RlZFZpZXcoKTtcbiAgICB9O1xuICAgIHRvZ2dsZUV4cGxvZGVCdG4uaWQgPSAndG9nZ2xlLWV4cGxvZGUtYnRuJztcbiAgICBleHBsb2RlR3JvdXAuYXBwZW5kQ2hpbGQodG9nZ2xlRXhwbG9kZUJ0bik7XG4gICAgXG4gICAgY29uc3QgcmVzZXRWaWV3QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgcmVzZXRWaWV3QnRuLnRleHRDb250ZW50ID0gJ+mHjee9ruinhuWbvic7XG4gICAgcmVzZXRWaWV3QnRuLm9uY2xpY2sgPSAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygn6YeN572u6KeG5Zu+5oyJ6ZKu6KKr54K55Ye7Jyk7XG4gICAgICB0aGlzLnJlc2V0VmlldygpO1xuICAgIH07XG4gICAgZXhwbG9kZUdyb3VwLmFwcGVuZENoaWxkKHJlc2V0Vmlld0J0bik7XG4gICAgXG4gICAgdGhpcy5jb250cm9sUGFuZWwuYXBwZW5kQ2hpbGQoZXhwbG9kZUdyb3VwKTtcbiAgICBcbiAgICAvLyDnu4Tku7bogZrnhKbmjqfliLZcbiAgICBjb25zdCBmb2N1c0dyb3VwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZm9jdXNHcm91cC5jbGFzc05hbWUgPSAnYnV0dG9uLWdyb3VwJztcbiAgICBcbiAgICBjb25zdCBmb2N1c1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZm9jdXNUaXRsZS50ZXh0Q29udGVudCA9ICfogZrnhKbnu4Tku7YnO1xuICAgIGZvY3VzVGl0bGUuc3R5bGUubWFyZ2luQm90dG9tID0gJzVweCc7XG4gICAgZm9jdXNHcm91cC5hcHBlbmRDaGlsZChmb2N1c1RpdGxlKTtcbiAgICBcbiAgICAvLyDkuLrmr4/kuKrkuLvopoHnu4Tku7bliJvlu7rogZrnhKbmjInpkq5cbiAgICBjb25zdCBjb21wb25lbnRzID0gW1xuICAgICAgeyBrZXk6ICdndW4nLCBuYW1lOiAn55S15a2Q5p6qJyB9LFxuICAgICAgeyBrZXk6ICd2MScsIG5hbWU6ICflnoLnm7TlgY/ovazmnb8nIH0sXG4gICAgICB7IGtleTogJ2gxJywgbmFtZTogJ+awtOW5s+WBj+i9rOadvycgfSxcbiAgICAgIHsga2V5OiAnc2NyZWVuJywgbmFtZTogJ+iNp+WFieWxjycgfVxuICAgIF07XG4gICAgXG4gICAgY29tcG9uZW50cy5mb3JFYWNoKGNvbXAgPT4ge1xuICAgICAgY29uc3QgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICBidG4udGV4dENvbnRlbnQgPSBjb21wLm5hbWU7XG4gICAgICBidG4ub25jbGljayA9ICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ+iBmueEpuWIsOe7hOS7tjonLCBjb21wLmtleSk7XG4gICAgICAgIHRoaXMuZm9jdXNDb21wb25lbnQoY29tcC5rZXkpO1xuICAgICAgfTtcbiAgICAgIGZvY3VzR3JvdXAuYXBwZW5kQ2hpbGQoYnRuKTtcbiAgICB9KTtcbiAgICBcbiAgICB0aGlzLmNvbnRyb2xQYW5lbC5hcHBlbmRDaGlsZChmb2N1c0dyb3VwKTtcbiAgICBcbiAgICAvLyDmvJTnpLrliqjnlLvmjqfliLZcbiAgICBjb25zdCBkZW1vR3JvdXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkZW1vR3JvdXAuY2xhc3NOYW1lID0gJ2J1dHRvbi1ncm91cCc7XG4gICAgXG4gICAgY29uc3QgZGVtb1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZGVtb1RpdGxlLnRleHRDb250ZW50ID0gJ+W3peS9nOWOn+eQhua8lOekuic7XG4gICAgZGVtb1RpdGxlLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICc1cHgnO1xuICAgIGRlbW9Hcm91cC5hcHBlbmRDaGlsZChkZW1vVGl0bGUpO1xuICAgIFxuICAgIGNvbnN0IHN0YXJ0RGVtb0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIHN0YXJ0RGVtb0J0bi50ZXh0Q29udGVudCA9ICflvIDlp4vmvJTnpLonO1xuICAgIHN0YXJ0RGVtb0J0bi5vbmNsaWNrID0gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ+W8gOWni+a8lOekuuaMiemSruiiq+eCueWHuycpO1xuICAgICAgdGhpcy5zdGFydERlbW9BbmltYXRpb24oKTtcbiAgICB9O1xuICAgIHN0YXJ0RGVtb0J0bi5pZCA9ICdzdGFydC1kZW1vLWJ0bic7XG4gICAgZGVtb0dyb3VwLmFwcGVuZENoaWxkKHN0YXJ0RGVtb0J0bik7XG4gICAgXG4gICAgY29uc3Qgc3RvcERlbW9CdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBzdG9wRGVtb0J0bi50ZXh0Q29udGVudCA9ICflgZzmraLmvJTnpLonO1xuICAgIHN0b3BEZW1vQnRuLm9uY2xpY2sgPSAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygn5YGc5q2i5ryU56S65oyJ6ZKu6KKr54K55Ye7Jyk7XG4gICAgICB0aGlzLnN0b3BEZW1vQW5pbWF0aW9uKCk7XG4gICAgfTtcbiAgICBzdG9wRGVtb0J0bi5jbGFzc05hbWUgPSAnd2FybmluZyc7XG4gICAgc3RvcERlbW9CdG4uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICBzdG9wRGVtb0J0bi5pZCA9ICdzdG9wLWRlbW8tYnRuJztcbiAgICBkZW1vR3JvdXAuYXBwZW5kQ2hpbGQoc3RvcERlbW9CdG4pO1xuICAgIFxuICAgIHRoaXMuY29udHJvbFBhbmVsLmFwcGVuZENoaWxkKGRlbW9Hcm91cCk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ+aOp+WItumdouadv+WIneWni+WMluWujOaIkCcpO1xuICB9XG4gIFxuICAvKipcbiAgICog5Yid5aeL5YyW5ryU56S66Z2i5p2/XG4gICAqL1xuICBpbml0RGVtb1BhbmVsKCkge1xuICAgIHRoaXMuZGVtb1BhbmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGhpcy5kZW1vUGFuZWwuY2xhc3NOYW1lID0gJ2RlbW8tcGFuZWwnO1xuICAgIHRoaXMuZGVtb1BhbmVsLnN0eWxlLm9wYWNpdHkgPSAnMCc7XG4gICAgdGhpcy5kZW1vUGFuZWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLmRlbW9QYW5lbCk7XG4gICAgXG4gICAgLy8g5qCH6aKYXG4gICAgdGhpcy5kZW1vVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xuICAgIHRoaXMuZGVtb1BhbmVsLmFwcGVuZENoaWxkKHRoaXMuZGVtb1RpdGxlKTtcbiAgICBcbiAgICAvLyDmj4/ov7BcbiAgICB0aGlzLmRlbW9EZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICB0aGlzLmRlbW9QYW5lbC5hcHBlbmRDaGlsZCh0aGlzLmRlbW9EZXNjcmlwdGlvbik7XG4gICAgXG4gICAgLy8g6L+b5bqm5p2hXG4gICAgY29uc3QgcHJvZ3Jlc3NDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBwcm9ncmVzc0NvbnRhaW5lci5jbGFzc05hbWUgPSAncHJvZ3Jlc3MnO1xuICAgIHRoaXMucHJvZ3Jlc3NCYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0aGlzLnByb2dyZXNzQmFyLmNsYXNzTmFtZSA9ICdwcm9ncmVzcy1iYXInO1xuICAgIHByb2dyZXNzQ29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMucHJvZ3Jlc3NCYXIpO1xuICAgIHRoaXMuZGVtb1BhbmVsLmFwcGVuZENoaWxkKHByb2dyZXNzQ29udGFpbmVyKTtcbiAgICBcbiAgICAvLyDmraXpqqTkv6Hmga9cbiAgICBjb25zdCBzdGVwSW5mbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHN0ZXBJbmZvLmNsYXNzTmFtZSA9ICdzdGVwLWluZm8nO1xuICAgIHRoaXMuc3RlcEN1cnJlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgdGhpcy5zdGVwVG90YWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgc3RlcEluZm8uYXBwZW5kQ2hpbGQodGhpcy5zdGVwQ3VycmVudCk7XG4gICAgc3RlcEluZm8uYXBwZW5kQ2hpbGQodGhpcy5zdGVwVG90YWwpO1xuICAgIHRoaXMuZGVtb1BhbmVsLmFwcGVuZENoaWxkKHN0ZXBJbmZvKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOWIh+aNouagh+etvuaYvuekulxuICAgKi9cbiAgdG9nZ2xlTGFiZWxzKCkge1xuICAgIGNvbnNvbGUubG9nKCfliIfmjaLmoIfnrb7mmL7npLonLCB0aGlzLmNvbnRyb2xsZXJzLmxhYmVsU3lzdGVtKTtcbiAgICBpZiAoIXRoaXMuY29udHJvbGxlcnMubGFiZWxTeXN0ZW0pIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+agh+etvuezu+e7n+acquWIneWni+WMlicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCB2aXNpYmxlID0gIXRoaXMuY29udHJvbGxlcnMubGFiZWxTeXN0ZW0udmlzaWJsZTtcbiAgICBjb25zb2xlLmxvZygn6K6+572u5qCH562+5Y+v6KeB5oCnOicsIHZpc2libGUpO1xuICAgIHRoaXMuY29udHJvbGxlcnMubGFiZWxTeXN0ZW0uc2V0VmlzaWJsZSh2aXNpYmxlKTtcbiAgICBcbiAgICAvLyDmm7TmlrDmjInpkq7mlofmnKxcbiAgICBjb25zdCBidG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9nZ2xlLWxhYmVscy1idG4nKTtcbiAgICBpZiAoYnRuKSB7XG4gICAgICBidG4udGV4dENvbnRlbnQgPSB2aXNpYmxlID8gJ+makOiXj+agh+etvicgOiAn5pi+56S65qCH562+JztcbiAgICAgIGJ0bi5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnLCB2aXNpYmxlKTtcbiAgICAgIGNvbnNvbGUubG9nKCfmjInpkq7nirbmgIHlt7Lmm7TmlrAnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcign5om+5LiN5Yiw5qCH562+5oyJ6ZKuJyk7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog5YiH5o2i5YiG6Kej6KeG5Zu+XG4gICAqL1xuICB0b2dnbGVFeHBsb2RlZFZpZXcoKSB7XG4gICAgY29uc29sZS5sb2coJ+WIh+aNouWIhuino+inhuWbvicsIHRoaXMuY29udHJvbGxlcnMuZXhwbG9kZWRWaWV3KTtcbiAgICBjb25zb2xlLmxvZygn5b2T5YmNY29tcG9uZW50czonLCB0aGlzLmNvbXBvbmVudHMpO1xuICAgIGNvbnNvbGUubG9nKCdjcnRTaGVsbOWtmOWcqD8nLCAhIXRoaXMuY29tcG9uZW50cy5jcnRTaGVsbCk7XG4gICAgXG4gICAgaWYgKCF0aGlzLmNvbnRyb2xsZXJzLmV4cGxvZGVkVmlldykgcmV0dXJuO1xuICAgIFxuICAgIGNvbnN0IGV4cGxvZGVkID0gdGhpcy5jb250cm9sbGVycy5leHBsb2RlZFZpZXcudG9nZ2xlKCk7XG4gICAgY29uc29sZS5sb2coJ+WIhuino+inhuWbvueKtuaAgTonLCBleHBsb2RlZCk7XG4gICAgXG4gICAgLy8g5ZCM5pe25YiH5o2iY3lsaW5kZXIy55qE54iG54K45pWI5p6cXG4gICAgaWYgKHRoaXMuY29tcG9uZW50cy5jcnRTaGVsbCAmJiB0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwudG9nZ2xlQ3lsaW5kZXIyRXhwbG9kZSkge1xuICAgICAgY29uc29sZS5sb2coJ+ato+WcqOiwg+eUqGN5bGluZGVyMueIhueCuOaViOaenC4uLicpO1xuICAgICAgY29uc3QgY3lsaW5kZXIyRXhwbG9kZWQgPSB0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwudG9nZ2xlQ3lsaW5kZXIyRXhwbG9kZShleHBsb2RlZCk7XG4gICAgICBjb25zb2xlLmxvZygnQ3lsaW5kZXIy54iG54K454q25oCBOicsIGN5bGluZGVyMkV4cGxvZGVkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS53YXJuKCfml6Dms5XosIPnlKhjeWxpbmRlcjLniIbngrjmlYjmnpw6Jywge1xuICAgICAgICBjcnRTaGVsbDogISF0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwsXG4gICAgICAgIHRvZ2dsZU1ldGhvZDogISEodGhpcy5jb21wb25lbnRzLmNydFNoZWxsICYmIHRoaXMuY29tcG9uZW50cy5jcnRTaGVsbC50b2dnbGVDeWxpbmRlcjJFeHBsb2RlKVxuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIOWQjOaXtuWIh+aNouaXi+i9rOabsue6v+i/nuaOpeeahOeIhueCuOaViOaenFxuICAgIGlmICh0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwgJiYgdGhpcy5jb21wb25lbnRzLmNydFNoZWxsLnRvZ2dsZUNvbm5lY3Rpb25FeHBsb2RlKSB7XG4gICAgICBjb25zb2xlLmxvZygn5q2j5Zyo6LCD55So5peL6L2s5puy57q/6L+e5o6l54iG54K45pWI5p6cLi4uJyk7XG4gICAgICBjb25zdCBjb25uZWN0aW9uRXhwbG9kZWQgPSB0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwudG9nZ2xlQ29ubmVjdGlvbkV4cGxvZGUoZXhwbG9kZWQpO1xuICAgICAgY29uc29sZS5sb2coJ+aXi+i9rOabsue6v+i/nuaOpeeIhueCuOeKtuaAgTonLCBjb25uZWN0aW9uRXhwbG9kZWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLndhcm4oJ+aXoOazleiwg+eUqOaXi+i9rOabsue6v+i/nuaOpeeIhueCuOaViOaenDonLCB7XG4gICAgICAgIGNydFNoZWxsOiAhIXRoaXMuY29tcG9uZW50cy5jcnRTaGVsbCxcbiAgICAgICAgdG9nZ2xlTWV0aG9kOiAhISh0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwgJiYgdGhpcy5jb21wb25lbnRzLmNydFNoZWxsLnRvZ2dsZUNvbm5lY3Rpb25FeHBsb2RlKVxuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIOWQjOaXtuWIh+aNoui2heakreWchuW9oueKtua4kOWPmOeahOeIhueCuOaViOaenFxuICAgIGlmICh0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwgJiYgdGhpcy5jb21wb25lbnRzLmNydFNoZWxsLnRvZ2dsZVN1cGVyZWxsaXBzZUV4cGxvZGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfmraPlnKjosIPnlKjotoXmpK3lnIblvaLnirbmuJDlj5jniIbngrjmlYjmnpwuLi4nKTtcbiAgICAgIGNvbnN0IHN1cGVyZWxsaXBzZUV4cGxvZGVkID0gdGhpcy5jb21wb25lbnRzLmNydFNoZWxsLnRvZ2dsZVN1cGVyZWxsaXBzZUV4cGxvZGUoZXhwbG9kZWQpO1xuICAgICAgY29uc29sZS5sb2coJ+i2heakreWchuW9oueKtua4kOWPmOeIhueCuOeKtuaAgTonLCBzdXBlcmVsbGlwc2VFeHBsb2RlZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUud2Fybign5peg5rOV6LCD55So6LaF5qSt5ZyG5b2i54q25riQ5Y+Y54iG54K45pWI5p6cOicsIHtcbiAgICAgICAgY3J0U2hlbGw6ICEhdGhpcy5jb21wb25lbnRzLmNydFNoZWxsLFxuICAgICAgICB0b2dnbGVNZXRob2Q6ICEhKHRoaXMuY29tcG9uZW50cy5jcnRTaGVsbCAmJiB0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwudG9nZ2xlU3VwZXJlbGxpcHNlRXhwbG9kZSlcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyDmm7TmlrDmjInpkq7mlofmnKxcbiAgICBjb25zdCBidG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9nZ2xlLWV4cGxvZGUtYnRuJyk7XG4gICAgaWYgKGJ0bikge1xuICAgICAgYnRuLnRleHRDb250ZW50ID0gZXhwbG9kZWQgPyAn5ZCI5bm26KeG5Zu+JyA6ICfliIbop6Pop4blm74nO1xuICAgICAgYnRuLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScsIGV4cGxvZGVkKTtcbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDph43nva7op4blm75cbiAgICovXG4gIHJlc2V0VmlldygpIHtcbiAgICBpZiAoIXRoaXMuY29udHJvbGxlcnMuZXhwbG9kZWRWaWV3KSByZXR1cm47XG4gICAgXG4gICAgdGhpcy5jb250cm9sbGVycy5leHBsb2RlZFZpZXcucmVzZXRWaWV3KFxuICAgICAgdGhpcy5jb250cm9sbGVycy5jYW1lcmEsXG4gICAgICB0aGlzLmNvbnRyb2xsZXJzLmNvbnRyb2xzXG4gICAgKTtcbiAgICBcbiAgICAvLyDph43nva5jeWxpbmRlcjLniIbngrjnirbmgIFcbiAgICBpZiAodGhpcy5jb21wb25lbnRzLmNydFNoZWxsICYmIHRoaXMuY29tcG9uZW50cy5jcnRTaGVsbC50b2dnbGVDeWxpbmRlcjJFeHBsb2RlKSB7XG4gICAgICB0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwudG9nZ2xlQ3lsaW5kZXIyRXhwbG9kZShmYWxzZSk7XG4gICAgICBjb25zb2xlLmxvZygn6YeN572uQ3lsaW5kZXIy54iG54K454q25oCBJyk7XG4gICAgfVxuICAgIFxuICAgIC8vIOmHjee9ruaXi+i9rOabsue6v+i/nuaOpeeIhueCuOeKtuaAgVxuICAgIGlmICh0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwgJiYgdGhpcy5jb21wb25lbnRzLmNydFNoZWxsLnRvZ2dsZUNvbm5lY3Rpb25FeHBsb2RlKSB7XG4gICAgICB0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwudG9nZ2xlQ29ubmVjdGlvbkV4cGxvZGUoZmFsc2UpO1xuICAgICAgY29uc29sZS5sb2coJ+mHjee9ruaXi+i9rOabsue6v+i/nuaOpeeIhueCuOeKtuaAgScpO1xuICAgIH1cbiAgICBcbiAgICAvLyDph43nva7otoXmpK3lnIblvaLnirbmuJDlj5jniIbngrjnirbmgIFcbiAgICBpZiAodGhpcy5jb21wb25lbnRzLmNydFNoZWxsICYmIHRoaXMuY29tcG9uZW50cy5jcnRTaGVsbC50b2dnbGVTdXBlcmVsbGlwc2VFeHBsb2RlKSB7XG4gICAgICB0aGlzLmNvbXBvbmVudHMuY3J0U2hlbGwudG9nZ2xlU3VwZXJlbGxpcHNlRXhwbG9kZShmYWxzZSk7XG4gICAgICBjb25zb2xlLmxvZygn6YeN572u6LaF5qSt5ZyG5b2i54q25riQ5Y+Y54iG54K454q25oCBJyk7XG4gICAgfVxuICAgIFxuICAgIC8vIOabtOaWsOWIhuino+inhuWbvuaMiemSrueKtuaAgVxuICAgIGNvbnN0IGV4cGxvZGVCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9nZ2xlLWV4cGxvZGUtYnRuJyk7XG4gICAgaWYgKGV4cGxvZGVCdG4pIHtcbiAgICAgIGV4cGxvZGVCdG4udGV4dENvbnRlbnQgPSAn5YiG6Kej6KeG5Zu+JztcbiAgICAgIGV4cGxvZGVCdG4uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog6IGa54Sm5Yiw57uE5Lu2XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb21wb25lbnRLZXkgLSDnu4Tku7bplK7lkI1cbiAgICovXG4gIGZvY3VzQ29tcG9uZW50KGNvbXBvbmVudEtleSkge1xuICAgIGNvbnNvbGUubG9nKCdmb2N1c0NvbXBvbmVudOiiq+iwg+eUqO+8jGNvbXBvbmVudEtleTonLCBjb21wb25lbnRLZXkpO1xuICAgIGNvbnNvbGUubG9nKCd0aGlzLmNvbnRyb2xsZXJzOicsIHRoaXMuY29udHJvbGxlcnMpO1xuICAgIGNvbnNvbGUubG9nKCd0aGlzLmNvbnRyb2xsZXJzLmV4cGxvZGVkVmlldzonLCB0aGlzLmNvbnRyb2xsZXJzLmV4cGxvZGVkVmlldyk7XG4gICAgY29uc29sZS5sb2coJ3RoaXMuY29udHJvbGxlcnMuY2FtZXJhOicsIHRoaXMuY29udHJvbGxlcnMuY2FtZXJhKTtcbiAgICBjb25zb2xlLmxvZygndGhpcy5jb250cm9sbGVycy5jb250cm9sczonLCB0aGlzLmNvbnRyb2xsZXJzLmNvbnRyb2xzKTtcbiAgICBcbiAgICBpZiAoIXRoaXMuY29udHJvbGxlcnMuZXhwbG9kZWRWaWV3KSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdleHBsb2RlZFZpZXfmnKrliJ3lp4vljJYnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgaWYgKCF0aGlzLmNvbnRyb2xsZXJzLmNhbWVyYSkge1xuICAgICAgY29uc29sZS5lcnJvcignY2FtZXJh5pyq5Yid5aeL5YyWJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGlmICghdGhpcy5jb250cm9sbGVycy5jb250cm9scykge1xuICAgICAgY29uc29sZS5lcnJvcignY29udHJvbHPmnKrliJ3lp4vljJYnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgY29uc29sZS5sb2coJ+W8gOWni+iwg+eUqGV4cGxvZGVkVmlldy5mb2N1c0NvbXBvbmVudCcpO1xuICAgIHRoaXMuY29udHJvbGxlcnMuZXhwbG9kZWRWaWV3LmZvY3VzQ29tcG9uZW50KFxuICAgICAgY29tcG9uZW50S2V5LFxuICAgICAgdGhpcy5jb250cm9sbGVycy5jYW1lcmEsXG4gICAgICB0aGlzLmNvbnRyb2xsZXJzLmNvbnRyb2xzXG4gICAgKTtcbiAgICBjb25zb2xlLmxvZygnZXhwbG9kZWRWaWV3LmZvY3VzQ29tcG9uZW506LCD55So5a6M5oiQJyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDlvIDlp4vmvJTnpLrliqjnlLtcbiAgICovXG4gIHN0YXJ0RGVtb0FuaW1hdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygnc3RhcnREZW1vQW5pbWF0aW9u6KKr6LCD55SoJyk7XG4gICAgY29uc29sZS5sb2coJ3RoaXMuY29udHJvbGxlcnMuZGVtb0FuaW1hdGlvbjonLCB0aGlzLmNvbnRyb2xsZXJzLmRlbW9BbmltYXRpb24pO1xuICAgIFxuICAgIGlmICghdGhpcy5jb250cm9sbGVycy5kZW1vQW5pbWF0aW9uKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdkZW1vQW5pbWF0aW9u5pyq5Yid5aeL5YyWJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGNvbnNvbGUubG9nKCfmmL7npLrmvJTnpLrpnaLmnb8nKTtcbiAgICAvLyDmmL7npLrmvJTnpLrpnaLmnb9cbiAgICB0aGlzLnNob3dEZW1vUGFuZWwoKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZygn6K6+572u5q2l6aqk5Zue6LCDJyk7XG4gICAgLy8g6K6+572u5q2l6aqk5Zue6LCDXG4gICAgdGhpcy5jb250cm9sbGVycy5kZW1vQW5pbWF0aW9uLm9uU3RlcFN0YXJ0ID0gKHN0ZXBJbmRleCwgc3RlcCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ+atpemqpOWbnuiwg+iiq+inpuWPkTonLCBzdGVwSW5kZXgsIHN0ZXApO1xuICAgICAgdGhpcy51cGRhdGVEZW1vUGFuZWwoc3RlcEluZGV4LCBzdGVwKTtcbiAgICB9O1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCflvIDlp4vmvJTnpLonKTtcbiAgICAvLyDlvIDlp4vmvJTnpLpcbiAgICB0aGlzLmNvbnRyb2xsZXJzLmRlbW9BbmltYXRpb24uc3RhcnQoKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZygn5pu05paw5oyJ6ZKu54q25oCBJyk7XG4gICAgLy8g5pu05paw5oyJ6ZKu54q25oCBXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXJ0LWRlbW8tYnRuJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RvcC1kZW1vLWJ0bicpLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcbiAgICBcbiAgICBjb25zb2xlLmxvZygnc3RhcnREZW1vQW5pbWF0aW9u5a6M5oiQJyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDlgZzmraLmvJTnpLrliqjnlLtcbiAgICovXG4gIHN0b3BEZW1vQW5pbWF0aW9uKCkge1xuICAgIGlmICghdGhpcy5jb250cm9sbGVycy5kZW1vQW5pbWF0aW9uKSByZXR1cm47XG4gICAgXG4gICAgLy8g5YGc5q2i5ryU56S6XG4gICAgdGhpcy5jb250cm9sbGVycy5kZW1vQW5pbWF0aW9uLnN0b3AoKTtcbiAgICBcbiAgICAvLyDpmpDol4/mvJTnpLrpnaLmnb9cbiAgICB0aGlzLmhpZGVEZW1vUGFuZWwoKTtcbiAgICBcbiAgICAvLyDmm7TmlrDmjInpkq7nirbmgIFcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RhcnQtZGVtby1idG4nKS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0b3AtZGVtby1idG4nKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICB9XG4gIFxuICAvKipcbiAgICog5pi+56S65ryU56S66Z2i5p2/XG4gICAqL1xuICBzaG93RGVtb1BhbmVsKCkge1xuICAgIHRoaXMuZGVtb1BhbmVsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5kZW1vUGFuZWwuc3R5bGUub3BhY2l0eSA9ICcxJztcbiAgICB9LCAxMCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDpmpDol4/mvJTnpLrpnaLmnb9cbiAgICovXG4gIGhpZGVEZW1vUGFuZWwoKSB7XG4gICAgdGhpcy5kZW1vUGFuZWwuc3R5bGUub3BhY2l0eSA9ICcwJztcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuZGVtb1BhbmVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfSwgNTAwKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOabtOaWsOa8lOekuumdouadv1xuICAgKiBAcGFyYW0ge251bWJlcn0gc3RlcEluZGV4IC0g5b2T5YmN5q2l6aqk57Si5byVXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBzdGVwIC0g5b2T5YmN5q2l6aqk5a+56LGhXG4gICAqL1xuICB1cGRhdGVEZW1vUGFuZWwoc3RlcEluZGV4LCBzdGVwKSB7XG4gICAgaWYgKCF0aGlzLmNvbnRyb2xsZXJzLmRlbW9BbmltYXRpb24pIHJldHVybjtcbiAgICBcbiAgICBjb25zdCB0b3RhbFN0ZXBzID0gdGhpcy5jb250cm9sbGVycy5kZW1vQW5pbWF0aW9uLmFuaW1hdGlvblN0ZXBzLmxlbmd0aDtcbiAgICBjb25zdCBwcm9ncmVzcyA9ICgoc3RlcEluZGV4ICsgMSkgLyB0b3RhbFN0ZXBzKSAqIDEwMDtcbiAgICBcbiAgICAvLyDmm7TmlrDmoIfpopjlkozmj4/ov7BcbiAgICB0aGlzLmRlbW9UaXRsZS50ZXh0Q29udGVudCA9IHN0ZXAudGl0bGU7XG4gICAgdGhpcy5kZW1vRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBzdGVwLmRlc2NyaXB0aW9uO1xuICAgIFxuICAgIC8vIOabtOaWsOi/m+W6puadoVxuICAgIHRoaXMucHJvZ3Jlc3NCYXIuc3R5bGUud2lkdGggPSBgJHtwcm9ncmVzc30lYDtcbiAgICBcbiAgICAvLyDmm7TmlrDmraXpqqTkv6Hmga9cbiAgICB0aGlzLnN0ZXBDdXJyZW50LnRleHRDb250ZW50ID0gYOatpemqpCAke3N0ZXBJbmRleCArIDF9YDtcbiAgICB0aGlzLnN0ZXBUb3RhbC50ZXh0Q29udGVudCA9IGDlhbEgJHt0b3RhbFN0ZXBzfSDmraVgO1xuICAgIFxuICAgIC8vIOWmguaenOaYr+acgOWQjuS4gOatpe+8jOWHhuWkh+e7k+adn+a8lOekulxuICAgIGlmIChzdGVwSW5kZXggPT09IHRvdGFsU3RlcHMgLSAxKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5zdG9wRGVtb0FuaW1hdGlvbigpO1xuICAgICAgfSwgc3RlcC5kdXJhdGlvbik7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog6LCD5pW0VUnlpKflsI9cbiAgICogQHBhcmFtIHtudW1iZXJ9IHdpZHRoIC0g5a695bqmXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBoZWlnaHQgLSDpq5jluqZcbiAgICovXG4gIHJlc2l6ZSh3aWR0aCwgaGVpZ2h0KSB7XG4gICAgLy8g5aaC5p6c6ZyA6KaB5qC55o2u56qX5Y+j5aSn5bCP6LCD5pW0VUnvvIzlj6/ku6XlnKjov5nph4zlrp7njrBcbiAgfVxufSIsIi8qKlxuICog5rOi5b2i55Sf5oiQ5Zmo57G7XG4gKiDotJ/otKPnlJ/miJDlkITnp43ms6LlvaLlubborqHnrpflgY/ovaznlLXljotcbiAqL1xuZXhwb3J0IGNsYXNzIFdhdmVmb3JtR2VuZXJhdG9yIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy50aW1lID0gMDtcbiAgICB0aGlzLmxhc3RUaW1lc3RhbXAgPSAwO1xuICAgIHRoaXMubGFzdEhvcml6b250YWxQb3NpdGlvbiA9IDA7IC8vIOiusOW9leS4iuS4gOasoeeahOawtOW5s+S9jee9rlxuICAgIHRoaXMub25XYXZlZm9ybVJlc2V0ID0gbnVsbDsgLy8g5rOi5b2i6YeN572u5Zue6LCD5Ye95pWwXG4gIH1cblxuICAvKipcbiAgICog5pu05paw5pe26Ze0XG4gICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lc3RhbXAgLSDlvZPliY3ml7bpl7TmiLNcbiAgICovXG4gIHVwZGF0ZSh0aW1lc3RhbXApIHtcbiAgICAvLyDmt7vliqDpmLLmiqTmo4Dmn6VcbiAgICBpZiAodHlwZW9mIHRpbWVzdGFtcCAhPT0gJ251bWJlcicgfHwgaXNOYU4odGltZXN0YW1wKSkge1xuICAgICAgY29uc29sZS53YXJuKCfms6LlvaLnlJ/miJDlmaggLSDml6DmlYjnmoTml7bpl7TmiLM6JywgdGltZXN0YW1wKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgLy8g6K6h566X5pe26Ze05aKe6YeP77yI56eS77yJXG4gICAgaWYgKHRoaXMubGFzdFRpbWVzdGFtcCA9PT0gMCkge1xuICAgICAgdGhpcy5sYXN0VGltZXN0YW1wID0gdGltZXN0YW1wO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBkZWx0YVRpbWUgPSAodGltZXN0YW1wIC0gdGhpcy5sYXN0VGltZXN0YW1wKSAvIDEwMDA7XG4gICAgXG4gICAgLy8g6Ziy5oqk5byC5bi455qEIGRlbHRhVGltZVxuICAgIGlmIChpc05hTihkZWx0YVRpbWUpIHx8IGRlbHRhVGltZSA8IDAgfHwgZGVsdGFUaW1lID4gMSkge1xuICAgICAgY29uc29sZS53YXJuKCfms6LlvaLnlJ/miJDlmaggLSDlvILluLjnmoTml7bpl7Tlop7ph486JywgZGVsdGFUaW1lLCAn6YeN572u5pe26Ze05oizJyk7XG4gICAgICB0aGlzLmxhc3RUaW1lc3RhbXAgPSB0aW1lc3RhbXA7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIHRoaXMubGFzdFRpbWVzdGFtcCA9IHRpbWVzdGFtcDtcbiAgICBcbiAgICAvLyDmm7TmlrDlhoXpg6jml7bpl7TvvIjlnKjmvJTnpLrliqjnlLvmnJ/pl7Tlh4/mhaI1MCXvvIlcbiAgICBjb25zdCB0aW1lU2NhbGUgPSAod2luZG93LmRlbW9BbmltYXRpb24gJiYgd2luZG93LmRlbW9BbmltYXRpb24uaXNQbGF5aW5nKSA/IDAuNiA6IDEuMDtcbiAgICB0aGlzLnRpbWUgKz0gZGVsdGFUaW1lICogdGltZVNjYWxlO1xuICB9XG5cbiAgLyoqXG4gICAqIOeUn+aIkOazouW9ouWAvFxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIC0g5rOi5b2i5Y+C5pWwXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IC0g5rOi5b2i5YC8ICgtMSDliLAgMSDkuYvpl7QpXG4gICAqL1xuICBnZW5lcmF0ZVdhdmVmb3JtKHBhcmFtcykge1xuICAgIGlmICghcGFyYW1zLmVuYWJsZWQpIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCB7IHR5cGUsIGZyZXF1ZW5jeSwgYW1wbGl0dWRlLCBwaGFzZSB9ID0gcGFyYW1zO1xuICAgIFxuICAgIC8vIOa3u+WKoOmYsuaKpOajgOafpVxuICAgIGlmIChpc05hTih0aGlzLnRpbWUpIHx8IGlzTmFOKGZyZXF1ZW5jeSkgfHwgaXNOYU4oYW1wbGl0dWRlKSB8fCBpc05hTihwaGFzZSkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+azouW9oueUn+aIkOWZqCAtIOajgOa1i+WIsCBOYU4g5Y+C5pWwOicsIHtcbiAgICAgICAgdGltZTogdGhpcy50aW1lLFxuICAgICAgICBmcmVxdWVuY3ksXG4gICAgICAgIGFtcGxpdHVkZSxcbiAgICAgICAgcGhhc2VcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHQgPSB0aGlzLnRpbWUgKiBmcmVxdWVuY3kgKiBNYXRoLlBJICogMiArIHBoYXNlO1xuICAgIFxuICAgIC8vIOajgOafpeiuoeeul+e7k+aenFxuICAgIGlmIChpc05hTih0KSkge1xuICAgICAgY29uc29sZS5lcnJvcign5rOi5b2i55Sf5oiQ5ZmoIC0g5pe26Ze06K6h566X57uT5p6c5Li6IE5hTjonLCB0KTtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBcbiAgICBsZXQgcmVzdWx0ID0gMDtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ3NpbmUnOlxuICAgICAgICByZXN1bHQgPSBNYXRoLnNpbih0KSAqIGFtcGxpdHVkZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzcXVhcmUnOlxuICAgICAgICByZXN1bHQgPSAoTWF0aC5zaW4odCkgPj0gMCA/IDEgOiAtMSkgKiBhbXBsaXR1ZGU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc2F3dG9vdGgnOlxuICAgICAgICByZXN1bHQgPSAoKCh0IC8gKE1hdGguUEkgKiAyKSkgJSAxKSAqIDIgLSAxKSAqIGFtcGxpdHVkZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICd0cmlhbmdsZSc6XG4gICAgICAgIHJlc3VsdCA9IChNYXRoLmFicygoKHQgLyBNYXRoLlBJKSAlIDIpIC0gMSkgKiAyIC0gMSkgKiBhbXBsaXR1ZGU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmVzdWx0ID0gMDtcbiAgICB9XG4gICAgXG4gICAgLy8g5pyA57uI5qOA5p+l57uT5p6cXG4gICAgaWYgKGlzTmFOKHJlc3VsdCkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+azouW9oueUn+aIkOWZqCAtIOazouW9ouiuoeeul+e7k+aenOS4uiBOYU46JywgeyB0eXBlLCB0LCBhbXBsaXR1ZGUsIHJlc3VsdCB9KTtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIFxuICAvKipcbiAgICog6K6h566X5b2T5YmN55qE5YGP6L2s55S15Y6LXG4gICAqIEBwYXJhbSB7T2JqZWN0fSB3YXZlZm9ybVBhcmFtcyAtIOazouW9ouWPguaVsFxuICAgKiBAcGFyYW0ge09iamVjdH0gZGVmbGVjdGlvblBhcmFtcyAtIOWBj+i9rOWPguaVsFxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSAtIOWMheWQq+awtOW5s+WSjOWeguebtOWBj+i9rOeUteWOi+eahOWvueixoVxuICAgKi9cbiAgY2FsY3VsYXRlRGVmbGVjdGlvblZvbHRhZ2Uod2F2ZWZvcm1QYXJhbXMsIGRlZmxlY3Rpb25QYXJhbXMpIHtcbiAgICAvLyDlnKjmvJTnpLrliqjnlLvmnJ/pl7TvvIzkvb/nlKjlm7rlrprnmoTljp/lp4vnlLXljovlgLzku6Xkv53mjIHms6LlvaLkvY3nva7kuI3lj5hcbiAgICBsZXQgYmFzZUhvcml6b250YWwsIGJhc2VWZXJ0aWNhbDtcbiAgICBpZiAod2luZG93LmRlbW9BbmltYXRpb24gJiYgd2luZG93LmRlbW9BbmltYXRpb24uaXNQbGF5aW5nICYmIHdpbmRvdy5kZW1vQW5pbWF0aW9uLm9yaWdpbmFsVm9sdGFnZXMpIHtcbiAgICAgIGJhc2VIb3Jpem9udGFsID0gd2luZG93LmRlbW9BbmltYXRpb24ub3JpZ2luYWxWb2x0YWdlcy5ob3Jpem9udGFsO1xuICAgICAgYmFzZVZlcnRpY2FsID0gd2luZG93LmRlbW9BbmltYXRpb24ub3JpZ2luYWxWb2x0YWdlcy52ZXJ0aWNhbDtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8g6I635Y+W5Z+656GA55S15Y6L5YC877yM5re75Yqg6Ziy5oqkXG4gICAgICBiYXNlSG9yaXpvbnRhbCA9IGRlZmxlY3Rpb25QYXJhbXM/Lmhvcml6b250YWw/LnZvbHRhZ2UgPz8gMDtcbiAgICAgIGJhc2VWZXJ0aWNhbCA9IGRlZmxlY3Rpb25QYXJhbXM/LnZlcnRpY2FsPy52b2x0YWdlID8/IDA7XG4gICAgfVxuICAgIFxuICAgIC8vIOWmguaenOazouW9ouacquWQr+eUqO+8jOebtOaOpei/lOWbnuWfuuehgOeUteWOi1xuICAgIGlmICghd2F2ZWZvcm1QYXJhbXMuZW5hYmxlZCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaG9yaXpvbnRhbDogYmFzZUhvcml6b250YWwsXG4gICAgICAgIHZlcnRpY2FsOiBiYXNlVmVydGljYWxcbiAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIC8vIOagueaNruazouW9ouexu+Wei+eUn+aIkOS4jeWQjOeahOaJq+aPj+aooeW8j++8jOS9v+eUqOWBj+i9rOeUteWOi+S9nOS4uuW5heW6puiwg+WItuWboOWtkFxuICAgIGNvbnN0IHNjYW5QYXR0ZXJuID0gdGhpcy5nZW5lcmF0ZVNjYW5QYXR0ZXJuKHdhdmVmb3JtUGFyYW1zLCBkZWZsZWN0aW9uUGFyYW1zKTtcbiAgICBcbiAgICAvLyDnm7TmjqXov5Tlm57ms6LlvaLmiavmj4/mqKHlvI/kuqfnlJ/nmoTnlLXljovlgLzvvIjkuI3lho3kuI7ln7rnoYDnlLXljovnm7jliqDvvIlcbiAgICAvLyDov5nmoLflgY/ovaznlLXljovlsLHmjqfliLbms6LlvaLluYXluqbvvIzogIzkuI3mmK/kvY3nva7lgY/np7tcbiAgICByZXR1cm4ge1xuICAgICAgaG9yaXpvbnRhbDogc2NhblBhdHRlcm4uaG9yaXpvbnRhbCxcbiAgICAgIHZlcnRpY2FsOiBzY2FuUGF0dGVybi52ZXJ0aWNhbFxuICAgIH07XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDmoLnmja7ms6LlvaLnsbvlnovnlJ/miJDmiavmj4/mqKHlvI9cbiAgICogQHBhcmFtIHtPYmplY3R9IHBhcmFtcyAtIOazouW9ouWPguaVsFxuICAgKiBAcGFyYW0ge09iamVjdH0gZGVmbGVjdGlvblBhcmFtcyAtIOWBj+i9rOWPguaVsO+8jOeUqOS6juaOp+WItuazouW9ouW5heW6plxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSAtIOWMheWQq+awtOW5s+WSjOWeguebtOWBj+i9rOWAvOeahOWvueixoVxuICAgKi9cbiAgZ2VuZXJhdGVTY2FuUGF0dGVybihwYXJhbXMsIGRlZmxlY3Rpb25QYXJhbXMgPSBudWxsKSB7XG4gICAgY29uc3QgeyB0eXBlLCBmcmVxdWVuY3ksIGFtcGxpdHVkZSwgcGhhc2UgfSA9IHBhcmFtcztcbiAgICBcbiAgICAvLyDmt7vliqDpmLLmiqTmo4Dmn6VcbiAgICBpZiAoaXNOYU4odGhpcy50aW1lKSB8fCBpc05hTihmcmVxdWVuY3kpIHx8IGlzTmFOKGFtcGxpdHVkZSkgfHwgaXNOYU4ocGhhc2UpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfms6LlvaLnlJ/miJDlmaggLSDmo4DmtYvliLAgTmFOIOWPguaVsDonLCB7XG4gICAgICAgIHRpbWU6IHRoaXMudGltZSxcbiAgICAgICAgZnJlcXVlbmN5LFxuICAgICAgICBhbXBsaXR1ZGUsXG4gICAgICAgIHBoYXNlXG4gICAgICB9KTtcbiAgICAgIHJldHVybiB7IGhvcml6b250YWw6IDAsIHZlcnRpY2FsOiAwIH07XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHQgPSB0aGlzLnRpbWUgKiBmcmVxdWVuY3kgKiBNYXRoLlBJICogMiArIHBoYXNlO1xuICAgIFxuICAgIC8vIOajgOafpeiuoeeul+e7k+aenFxuICAgIGlmIChpc05hTih0KSkge1xuICAgICAgY29uc29sZS5lcnJvcign5rOi5b2i55Sf5oiQ5ZmoIC0g5pe26Ze06K6h566X57uT5p6c5Li6IE5hTjonLCB0KTtcbiAgICAgIHJldHVybiB7IGhvcml6b250YWw6IDAsIHZlcnRpY2FsOiAwIH07XG4gICAgfVxuICAgIFxuICAgIC8vIOiOt+WPluWBj+i9rOeUteWOi+S9nOS4uuW5heW6puiwg+WItuWboOWtkFxuICAgIC8vIOS9v+eUqOWfuuehgOW5heW6piArIOWBj+i9rOeUteWOi+iwg+WItu+8jOehruS/neWNs+S9v+eUteWOi+S4ujDkuZ/mnInln7rmnKzms6LlvaLmmL7npLpcbiAgICBjb25zdCBiYXNlQW1wbGl0dWRlID0gYW1wbGl0dWRlICogMC4zOyAvLyDln7rnoYDluYXluqbvvIgzMCXnmoTljp/lp4vluYXluqbvvIlcbiAgICBjb25zdCBob3Jpem9udGFsVm9sdGFnZSA9IGRlZmxlY3Rpb25QYXJhbXM/Lmhvcml6b250YWw/LnZvbHRhZ2UgPz8gMDtcbiAgICBjb25zdCB2ZXJ0aWNhbFZvbHRhZ2UgPSBkZWZsZWN0aW9uUGFyYW1zPy52ZXJ0aWNhbD8udm9sdGFnZSA/PyAwO1xuICAgIFxuICAgIC8vIOW5heW6piA9IOWfuuehgOW5heW6piArICjnlLXljovosIPliLYgKiDljp/lp4vluYXluqYpXG4gICAgY29uc3QgaG9yaXpvbnRhbEFtcGxpdHVkZSA9IGJhc2VBbXBsaXR1ZGUgKyAoTWF0aC5hYnMoaG9yaXpvbnRhbFZvbHRhZ2UpICogYW1wbGl0dWRlICogMC4yKTtcbiAgICBjb25zdCB2ZXJ0aWNhbEFtcGxpdHVkZSA9IGJhc2VBbXBsaXR1ZGUgKyAoTWF0aC5hYnModmVydGljYWxWb2x0YWdlKSAqIGFtcGxpdHVkZSAqIDAuMik7XG4gICAgXG4gICAgLy8g5re75Yqg6Ziy5oqk5qOA5p+lXG4gICAgaWYgKGlzTmFOKGhvcml6b250YWxBbXBsaXR1ZGUpIHx8IGlzTmFOKHZlcnRpY2FsQW1wbGl0dWRlKSkge1xuICAgICAgY29uc29sZS5lcnJvcign5rOi5b2i55Sf5oiQ5ZmoIC0g5qOA5rWL5YiwIE5hTiDluYXluqblj4LmlbA6Jywge1xuICAgICAgICBob3Jpem9udGFsQW1wbGl0dWRlLFxuICAgICAgICB2ZXJ0aWNhbEFtcGxpdHVkZVxuICAgICAgfSk7XG4gICAgICByZXR1cm4geyBob3Jpem9udGFsOiAwLCB2ZXJ0aWNhbDogMCB9O1xuICAgIH1cbiAgICBcbiAgICBsZXQgaG9yaXpvbnRhbCA9IDA7XG4gICAgbGV0IHZlcnRpY2FsID0gMDtcbiAgICBcbiAgICAvLyDkvb/nlKjpopHnjoflj4LmlbDmnaXmjqfliLbms6LlvaLlr4bpm4bnqIvluqZcbiAgICBjb25zdCBmcmVxTXVsdGlwbGllciA9IGZyZXF1ZW5jeSAqIDI7IC8vIOmikeeOh+WAjeaVsO+8jOeUqOS6juaOp+WItuazouW9ouWvhumbhuW6plxuICAgIFxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSAnc2luZSc6XG4gICAgICAgIC8vIOato+W8puazoiAtIOawtOW5s+mUr+m9v+aJq+aPj++8iOS7juWPs+WQkeW3pu+8iSsg5Z6C55u05q2j5bym5rOiXG4gICAgICAgIC8vIOawtOW5s+aJq+aPj+eahOW5heW6pueUseawtOW5s+WBj+i9rOeUteWOi+aOp+WItlxuICAgICAgICBob3Jpem9udGFsID0gKCgxIC0gKCh0IC8gKE1hdGguUEkgKiAyKSkgJSAxKSkgKiAyIC0gMSkgKiBNYXRoLmFicyhob3Jpem9udGFsQW1wbGl0dWRlKTtcbiAgICAgICAgLy8g5Z6C55u05rOi5b2i55qE5bmF5bqm55Sx5Z6C55u05YGP6L2s55S15Y6L5o6n5Yi2XG4gICAgICAgIHZlcnRpY2FsID0gTWF0aC5zaW4odCAqIGZyZXFNdWx0aXBsaWVyKSAqIE1hdGguYWJzKHZlcnRpY2FsQW1wbGl0dWRlKSAqIDAuNTtcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnc3F1YXJlJzpcbiAgICAgICAgLy8g5pa55rOiIC0g5rC05bmz6ZSv6b2/5omr5o+P77yI5LuO5Y+z5ZCR5bem77yJKyDlnoLnm7Tmlrnms6JcbiAgICAgICAgaG9yaXpvbnRhbCA9ICgoMSAtICgodCAvIChNYXRoLlBJICogMikpICUgMSkpICogMiAtIDEpICogTWF0aC5hYnMoaG9yaXpvbnRhbEFtcGxpdHVkZSk7XG4gICAgICAgIHZlcnRpY2FsID0gKE1hdGguc2luKHQgKiBmcmVxTXVsdGlwbGllcikgPj0gMCA/IDEgOiAtMSkgKiBNYXRoLmFicyh2ZXJ0aWNhbEFtcGxpdHVkZSkgKiAwLjU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ3RyaWFuZ2xlJzpcbiAgICAgICAgLy8g5LiJ6KeS5rOiIC0g5rC05bmz6ZSv6b2/5omr5o+P77yI5LuO5Y+z5ZCR5bem77yJKyDlnoLnm7TkuInop5Lms6JcbiAgICAgICAgaG9yaXpvbnRhbCA9ICgoMSAtICgodCAvIChNYXRoLlBJICogMikpICUgMSkpICogMiAtIDEpICogTWF0aC5hYnMoaG9yaXpvbnRhbEFtcGxpdHVkZSk7XG4gICAgICAgIHZlcnRpY2FsID0gKE1hdGguYWJzKCgodCAqIGZyZXFNdWx0aXBsaWVyIC8gTWF0aC5QSSkgJSAyKSAtIDEpICogMiAtIDEpICogTWF0aC5hYnModmVydGljYWxBbXBsaXR1ZGUpICogMC41O1xuICAgICAgICBicmVhaztcbiAgICAgICAgXG4gICAgICBjYXNlICdzYXd0b290aCc6XG4gICAgICAgIC8vIOmUr+m9v+azoiAtIOawtOW5s+mUr+m9v+aJq+aPj++8iOS7juWPs+WQkeW3pu+8iSsg5Z6C55u06ZSv6b2/5rOiXG4gICAgICAgIGhvcml6b250YWwgPSAoKDEgLSAoKHQgLyAoTWF0aC5QSSAqIDIpKSAlIDEpKSAqIDIgLSAxKSAqIE1hdGguYWJzKGhvcml6b250YWxBbXBsaXR1ZGUpO1xuICAgICAgICB2ZXJ0aWNhbCA9ICgoKHQgKiBmcmVxTXVsdGlwbGllciAvIChNYXRoLlBJICogMikpICUgMSkgKiAyIC0gMSkgKiBNYXRoLmFicyh2ZXJ0aWNhbEFtcGxpdHVkZSkgKiAwLjU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIC8vIOm7mOiupOS4uueugOWNleeahOawtOW5s+aJq+aPj++8iOS7juWPs+WQkeW3pu+8iVxuICAgICAgICBob3Jpem9udGFsID0gKCgxIC0gKCh0IC8gKE1hdGguUEkgKiAyKSkgJSAxKSkgKiAyIC0gMSkgKiBNYXRoLmFicyhob3Jpem9udGFsQW1wbGl0dWRlKTtcbiAgICAgICAgdmVydGljYWwgPSAwO1xuICAgIH1cbiAgICBcbiAgICAvLyDmnIDnu4jmo4Dmn6Xnu5PmnpxcbiAgICBpZiAoaXNOYU4oaG9yaXpvbnRhbCkgfHwgaXNOYU4odmVydGljYWwpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfms6LlvaLnlJ/miJDlmaggLSDmiavmj4/mqKHlvI/orqHnrpfnu5PmnpzkuLogTmFOOicsIHsgdHlwZSwgdCwgaG9yaXpvbnRhbEFtcGxpdHVkZSwgdmVydGljYWxBbXBsaXR1ZGUsIGhvcml6b250YWwsIHZlcnRpY2FsIH0pO1xuICAgICAgcmV0dXJuIHsgaG9yaXpvbnRhbDogMCwgdmVydGljYWw6IDAgfTtcbiAgICB9XG4gICAgXG4gICAgLy8g5qOA5rWL5rOi5b2i6YeN572u77yI5rC05bmz5L2N572u5LuO5bem5L6n6Lez5Zue5Y+z5L6n77yJXG4gICAgdGhpcy5kZXRlY3RXYXZlZm9ybVJlc2V0KGhvcml6b250YWwpO1xuICAgIFxuICAgIHJldHVybiB7IGhvcml6b250YWwsIHZlcnRpY2FsIH07XG4gIH1cblxuXG4gIC8qKlxuICAgKiDmo4DmtYvms6LlvaLph43nva7vvIjmsLTlubPmiavmj4/ku47lt6bnq6/ot7Plm57lj7Pnq6/vvIlcbiAgICogQHBhcmFtIHtudW1iZXJ9IGN1cnJlbnRIb3Jpem9udGFsIC0g5b2T5YmN5rC05bmz5L2N572uXG4gICAqL1xuICBkZXRlY3RXYXZlZm9ybVJlc2V0KGN1cnJlbnRIb3Jpem9udGFsKSB7XG4gICAgLy8g5qOA5rWL5LuO6LSf5YC877yI5bem5L6n77yJ6Lez5Yiw5q2j5YC877yI5Y+z5L6n77yJ55qE5oOF5Ya1XG4gICAgLy8g6L+Z6KGo56S65byA5aeL5LqG5paw55qE5omr5o+P5ZGo5pyf77yI5LuO5Y+z5ZCR5bem5omr5o+P5a6M5oiQ5ZCO6Lez5Zue5Y+z5L6n6YeN5paw5byA5aeL77yJXG4gICAgaWYgKHRoaXMubGFzdEhvcml6b250YWxQb3NpdGlvbiA8IC0wLjUgJiYgY3VycmVudEhvcml6b250YWwgPiAwLjUpIHtcbiAgICAgIC8vIOinpuWPkeazouW9oumHjee9ruWbnuiwg1xuICAgICAgaWYgKHRoaXMub25XYXZlZm9ybVJlc2V0KSB7XG4gICAgICAgIHRoaXMub25XYXZlZm9ybVJlc2V0KCk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIOabtOaWsOS4iuS4gOasoeeahOawtOW5s+S9jee9rlxuICAgIHRoaXMubGFzdEhvcml6b250YWxQb3NpdGlvbiA9IGN1cnJlbnRIb3Jpem9udGFsO1xuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9ruazouW9oumHjee9ruWbnuiwg+WHveaVsFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayAtIOWbnuiwg+WHveaVsFxuICAgKi9cbiAgc2V0V2F2ZWZvcm1SZXNldENhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5vbldhdmVmb3JtUmVzZXQgPSBjYWxsYmFjaztcbiAgfVxuXG4gIC8qKlxuICAgKiDph43nva7ml7bpl7Tlkozml7bpl7TmiLNcbiAgICog5Zyo5rOi5b2i57G75Z6L5YiH5o2i5pe26LCD55So77yM56Gu5L+d5paw5rOi5b2i5LuO5bmy5YeA55qE54q25oCB5byA5aeLXG4gICAqL1xuICByZXNldFRpbWUoKSB7XG4gICAgdGhpcy50aW1lID0gMDtcbiAgICB0aGlzLmxhc3RUaW1lc3RhbXAgPSAwO1xuICAgIHRoaXMubGFzdEhvcml6b250YWxQb3NpdGlvbiA9IDA7XG4gICAgY29uc29sZS5sb2coJ+azouW9oueUn+aIkOWZqOaXtumXtOW3sumHjee9ricpO1xuICB9XG59ICIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7IENPTkZJRyB9IGZyb20gJy4uL2NvbmZpZ0xvYWRlcic7XG5cbi8qKlxuICog55S15a2Q5p2f57G7XG4gKiDotJ/otKPlpITnkIbnlLXlrZDmnZ/nmoTot6/lvoTlkozmmL7npLpcbiAqL1xuZXhwb3J0IGNsYXNzIEVsZWN0cm9uQmVhbSB7XG4gIC8qKlxuICAgKiDmnoTpgKDlh73mlbBcbiAgICogQHBhcmFtIHtUSFJFRS5TY2VuZX0gc2NlbmUgLSBUaHJlZS5qc+WcuuaZr1xuICAgKi9cbiAgY29uc3RydWN0b3Ioc2NlbmUpIHtcbiAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG4gICAgdGhpcy5iZWFtTGluZSA9IG51bGw7XG4gICAgdGhpcy5nbG93TGluZSA9IG51bGw7XG4gICAgdGhpcy5wYXJ0aWNsZVN5c3RlbSA9IG51bGw7XG4gICAgdGhpcy5iZWFtUG9pbnRzID0gW107XG4gICAgdGhpcy50cmFjZVBvaW50cyA9IFtdO1xuICAgIHRoaXMudHJhY2VMaW5lcyA9IFtdO1xuICAgIHRoaXMudHJhY2VTZWdtZW50cyA9IFtdOyAvLyDlrZjlgqjovajov7nmrrXvvIzpgb/lhY3lm57miavnur9cbiAgICBcbiAgICAvLyDnlLXlrZDmnZ/mnZDotKhcbiAgICB0aGlzLmJlYW1NYXRlcmlhbCA9IG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7XG4gICAgICBjb2xvcjogQ09ORklHLmJlYW0uY29sb3IsXG4gICAgICBvcGFjaXR5OiBDT05GSUcuYmVhbS5pbnRlbnNpdHksXG4gICAgICB0cmFuc3BhcmVudDogdHJ1ZSxcbiAgICAgIGRlcHRoVGVzdDogdHJ1ZSwgIC8vIOWQr+eUqOa3seW6pua1i+ivle+8jOehruS/neiiq+WkluWjs+ato+ehrumBruaMoVxuICAgICAgZGVwdGhXcml0ZTogZmFsc2UgLy8g56aB55So5rex5bqm5YaZ5YWl77yM6YG/5YWN5b2x5ZON5YW25LuW6YCP5piO54mp5L2TXG4gICAgfSk7XG4gICAgXG4gICAgLy8g6L2o6L+55p2Q6LSo77yI5reh5LiA5Lqb77yJXG4gICAgdGhpcy50cmFjZU1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHtcbiAgICAgIGNvbG9yOiBDT05GSUcuYmVhbS5jb2xvcixcbiAgICAgIG9wYWNpdHk6IENPTkZJRy5lbGVjdHJvbkJlYW0udHJhY2Uub3BhY2l0eSxcbiAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxuICAgICAgZGVwdGhUZXN0OiB0cnVlLCAgLy8g5ZCv55So5rex5bqm5rWL6K+V77yM56Gu5L+d6KKr5aSW5aOz5q2j56Gu6YGu5oyhXG4gICAgICBkZXB0aFdyaXRlOiBmYWxzZSAvLyDnpoHnlKjmt7HluqblhpnlhaVcbiAgICB9KTtcbiAgICBcbiAgICAvLyDliJ3lp4vljJbnlLXlrZDmnZ9cbiAgICB0aGlzLmluaXRCZWFtKCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliJ3lp4vljJbnlLXlrZDmnZ9cbiAgICovXG4gIGluaXRCZWFtKCkge1xuICAgIC8vIOm7mOiupOeUteWtkOadn+i3r+W+hOeCuVxuICAgIHRoaXMuYmVhbVBvaW50cyA9IENPTkZJRy5lbGVjdHJvbkJlYW0ucGF0aFBvaW50cy5tYXAocG9pbnQgPT4gXG4gICAgICBuZXcgVEhSRUUuVmVjdG9yMyhwb2ludC54LCBwb2ludC55LCBwb2ludC56KVxuICAgICk7XG4gICAgXG4gICAgLy8g5Yib5bu65aKe5by655qE55S15a2Q5p2f5p2Q6LSoXG4gICAgdGhpcy5jcmVhdGVFbmhhbmNlZEJlYW1NYXRlcmlhbCgpO1xuICAgIFxuICAgIC8vIOWIm+W7uueUteWtkOadn+WHoOS9leS9k+WSjOe6v+adoVxuICAgIGNvbnN0IGJlYW1HZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpLnNldEZyb21Qb2ludHModGhpcy5iZWFtUG9pbnRzKTtcbiAgICB0aGlzLmJlYW1MaW5lID0gbmV3IFRIUkVFLkxpbmUoYmVhbUdlb21ldHJ5LCB0aGlzLmJlYW1NYXRlcmlhbCk7XG4gICAgXG4gICAgLy8g6K6+572u5riy5p+T6aG65bqP77yM56Gu5L+d55S15a2Q5p2f5Zyo6YCP5piO5p6B5p2/5LmL5ZCO5riy5p+TXG4gICAgdGhpcy5iZWFtTGluZS5yZW5kZXJPcmRlciA9IDU7XG4gICAgXG4gICAgdGhpcy5zY2VuZS5hZGQodGhpcy5iZWFtTGluZSk7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu65aKe5by655qE55S15a2Q5p2f5p2Q6LSo77yM5YyF5ZCr5Y+R5YWJ5pWI5p6cXG4gICAqL1xuICBjcmVhdGVFbmhhbmNlZEJlYW1NYXRlcmlhbCgpIHtcbiAgICAvLyDkuLvnlLXlrZDmnZ/mnZDotKjvvIjmm7Tkuq7mm7TpspzoibPvvIktIOS8mOWMlumAj+aYjuW6pua4suafk1xuICAgIHRoaXMuYmVhbU1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHtcbiAgICAgIGNvbG9yOiBDT05GSUcuYmVhbS5jb2xvcixcbiAgICAgIG9wYWNpdHk6IENPTkZJRy5iZWFtLmludGVuc2l0eSxcbiAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxuICAgICAgbGluZXdpZHRoOiAzLCAvLyDlop7liqDnur/lrr1cbiAgICAgIGRlcHRoVGVzdDogdHJ1ZSwgIC8vIOWQr+eUqOa3seW6pua1i+ivle+8jOehruS/neiiq+WkluWjs+ato+ehrumBruaMoVxuICAgICAgZGVwdGhXcml0ZTogZmFsc2UgLy8g56aB55So5rex5bqm5YaZ5YWlXG4gICAgfSk7XG4gICAgXG4gICAgLy8g5Yib5bu65Y+R5YWJ5aSW5Zu05p2Q6LSoXG4gICAgdGhpcy5nbG93TWF0ZXJpYWwgPSBuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe1xuICAgICAgY29sb3I6IENPTkZJRy5iZWFtLmNvbG9yLFxuICAgICAgb3BhY2l0eTogQ09ORklHLmJlYW0uaW50ZW5zaXR5ICogMC4zLFxuICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsXG4gICAgICBsaW5ld2lkdGg6IDgsIC8vIOabtOWuveeahOWPkeWFieaViOaenFxuICAgICAgZGVwdGhUZXN0OiB0cnVlLCAgLy8g5ZCv55So5rex5bqm5rWL6K+V77yM56Gu5L+d6KKr5aSW5aOz5q2j56Gu6YGu5oyhXG4gICAgICBkZXB0aFdyaXRlOiBmYWxzZSAvLyDnpoHnlKjmt7HluqblhpnlhaVcbiAgICB9KTtcbiAgICBcbiAgICAvLyDovajov7nmnZDotKggLSDkvJjljJbpgI/mmI7luqbmuLLmn5NcbiAgICB0aGlzLnRyYWNlTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe1xuICAgICAgY29sb3I6IENPTkZJRy5iZWFtLmNvbG9yLFxuICAgICAgb3BhY2l0eTogQ09ORklHLmVsZWN0cm9uQmVhbS50cmFjZS5vcGFjaXR5LFxuICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsXG4gICAgICBkZXB0aFRlc3Q6IHRydWUsICAvLyDlkK/nlKjmt7HluqbmtYvor5XvvIznoa7kv53ooqvlpJblo7PmraPnoa7pga7mjKFcbiAgICAgIGRlcHRoV3JpdGU6IGZhbHNlIC8vIOemgeeUqOa3seW6puWGmeWFpVxuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICog5pu05paw55S15a2Q5p2f6Lev5b6EXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkZWZsZWN0aW9uUGFyYW1zIC0g5YGP6L2s5Y+C5pWw5a+56LGhXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkZWZsZWN0aW9uUGFyYW1zLnZlcnRpY2FsIC0g5Z6C55u05YGP6L2s5Y+C5pWwXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBkZWZsZWN0aW9uUGFyYW1zLnZlcnRpY2FsLnZvbHRhZ2UgLSDlnoLnm7TlgY/ovaznlLXljotcbiAgICogQHBhcmFtIHtPYmplY3R9IGRlZmxlY3Rpb25QYXJhbXMuaG9yaXpvbnRhbCAtIOawtOW5s+WBj+i9rOWPguaVsFxuICAgKiBAcGFyYW0ge251bWJlcn0gZGVmbGVjdGlvblBhcmFtcy5ob3Jpem9udGFsLnZvbHRhZ2UgLSDmsLTlubPlgY/ovaznlLXljotcbiAgICovXG4gIHVwZGF0ZUJlYW1QYXRoKGRlZmxlY3Rpb25QYXJhbXMpIHtcbiAgICAvLyDorqHnrpflgY/ovazph4/vvIzmt7vliqDpmLLmiqRcbiAgICBjb25zdCB2b2x0YWdlU2NhbGluZ0ZhY3RvciA9IENPTkZJRy5lbGVjdHJvbkJlYW0udm9sdGFnZVNjYWxpbmdGYWN0b3I7XG4gICAgY29uc3QgdmVydGljYWxWb2x0YWdlID0gZGVmbGVjdGlvblBhcmFtcz8udmVydGljYWw/LnZvbHRhZ2UgPz8gMDtcbiAgICBjb25zdCBob3Jpem9udGFsVm9sdGFnZSA9IGRlZmxlY3Rpb25QYXJhbXM/Lmhvcml6b250YWw/LnZvbHRhZ2UgPz8gMDtcbiAgICBcbiAgICAvLyDmo4Dmn6XmmK/lkKbmnIkgTmFOIOWAvFxuICAgIGlmIChpc05hTih2ZXJ0aWNhbFZvbHRhZ2UpIHx8IGlzTmFOKGhvcml6b250YWxWb2x0YWdlKSkge1xuICAgICAgY29uc29sZS5lcnJvcign55S15a2Q5p2f6ZSZ6K+vIC0g5qOA5rWL5YiwIE5hTiDlgLw6JywgeyB2ZXJ0aWNhbFZvbHRhZ2UsIGhvcml6b250YWxWb2x0YWdlIH0pO1xuICAgICAgcmV0dXJuOyAvLyDnm7TmjqXov5Tlm57vvIzpgb/lhY3lkI7nu63orqHnrpfplJnor69cbiAgICB9XG4gICAgXG4gICAgY29uc3QgdmVydGljYWxEZWZsZWN0aW9uID0gdmVydGljYWxWb2x0YWdlICogKENPTkZJRy5kZWZsZWN0aW9uLnZlcnRpY2FsLm1heERlZmxlY3Rpb24gLyB2b2x0YWdlU2NhbGluZ0ZhY3Rvcik7XG4gICAgY29uc3QgaG9yaXpvbnRhbERlZmxlY3Rpb24gPSBob3Jpem9udGFsVm9sdGFnZSAqIChDT05GSUcuZGVmbGVjdGlvbi5ob3Jpem9udGFsLm1heERlZmxlY3Rpb24gLyB2b2x0YWdlU2NhbGluZ0ZhY3Rvcik7XG4gICAgXG4gICAgLy8g55Sf5oiQ566A5Y2V55qE55u057q/55S15a2Q5p2f6L2o6L+5XG4gICAgdGhpcy5iZWFtUG9pbnRzID0gdGhpcy5nZW5lcmF0ZVNpbXBsZUJlYW1QYXRoKHZlcnRpY2FsRGVmbGVjdGlvbiwgaG9yaXpvbnRhbERlZmxlY3Rpb24pO1xuICAgIFxuICAgIC8vIOabtOaWsOWHoOS9leS9k1xuICAgIGNvbnN0IGJlYW1HZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpLnNldEZyb21Qb2ludHModGhpcy5iZWFtUG9pbnRzKTtcbiAgICBcbiAgICAvLyDmuIXpmaTml6fnmoTnlLXlrZDmnZ9cbiAgICB0aGlzLmNsZWFyQmVhbUxpbmVzKCk7XG4gICAgXG4gICAgLy8g5Yib5bu65aSa5bGC55S15a2Q5p2f5pWI5p6cXG4gICAgdGhpcy5jcmVhdGVMYXllcmVkQmVhbShiZWFtR2VvbWV0cnkpO1xuICAgIFxuICAgIC8vIOWPr+mAie+8muWIm+W7uueykuWtkOaViOaenO+8iOWcqOmFjee9ruS4reWQr+eUqOaXtu+8iVxuICAgIGlmIChDT05GSUcuZWxlY3Ryb25CZWFtLmVuYWJsZVBhcnRpY2xlRWZmZWN0KSB7XG4gICAgICB0aGlzLmNyZWF0ZVBhcnRpY2xlQmVhbSh0aGlzLmJlYW1Qb2ludHMpO1xuICAgIH1cbiAgICBcbiAgICAvLyDmm7TmlrDmnZDotKjpopzoibLlkozlvLrluqZcbiAgICB0aGlzLnVwZGF0ZUJlYW1NYXRlcmlhbHMoKTtcbiAgICBcbiAgICAvLyDorrDlvZXovajov7nngrnvvIjlj6rorrDlvZXmiZPlnKjojaflhYnlsY/kuIrnmoTngrnvvIlcbiAgICBjb25zdCBsYXN0QmVhbVBvaW50ID0gdGhpcy5iZWFtUG9pbnRzW3RoaXMuYmVhbVBvaW50cy5sZW5ndGggLSAxXTtcbiAgICB0aGlzLmFkZFRyYWNlUG9pbnQobGFzdEJlYW1Qb2ludC5jbG9uZSgpKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOeUn+aIkOecn+WunueahOeUteWtkOadn+i9qOi/ue+8iOiAg+iZkeeJqeeQhuWBj+i9rOaViOaenO+8iVxuICAgKiBAcGFyYW0ge251bWJlcn0gdmVydGljYWxEZWZsZWN0aW9uIC0g5Z6C55u05YGP6L2s6YePXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBob3Jpem9udGFsRGVmbGVjdGlvbiAtIOawtOW5s+WBj+i9rOmHj1xuICAgKiBAcmV0dXJucyB7QXJyYXk8VEhSRUUuVmVjdG9yMz59IOi9qOi/ueeCueaVsOe7hFxuICAgKi9cbiAgZ2VuZXJhdGVTaW1wbGVCZWFtUGF0aCh2ZXJ0aWNhbERlZmxlY3Rpb24sIGhvcml6b250YWxEZWZsZWN0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2VuZXJhdGVSZWFsaXN0aWNCZWFtUGF0aCh2ZXJ0aWNhbERlZmxlY3Rpb24sIGhvcml6b250YWxEZWZsZWN0aW9uKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDnlJ/miJDnnJ/lrp7nmoTnlLXlrZDmnZ/ovajov7nvvIzmqKHmi5/niannkIblgY/ovazmlYjmnpxcbiAgICogQHBhcmFtIHtudW1iZXJ9IHZlcnRpY2FsRGVmbGVjdGlvbiAtIOWeguebtOWBj+i9rOmHj1xuICAgKiBAcGFyYW0ge251bWJlcn0gaG9yaXpvbnRhbERlZmxlY3Rpb24gLSDmsLTlubPlgY/ovazph49cbiAgICogQHJldHVybnMge0FycmF5PFRIUkVFLlZlY3RvcjM+fSDovajov7nngrnmlbDnu4RcbiAgICovXG4gIGdlbmVyYXRlUmVhbGlzdGljQmVhbVBhdGgodmVydGljYWxEZWZsZWN0aW9uLCBob3Jpem9udGFsRGVmbGVjdGlvbikge1xuICAgIGNvbnN0IHRyYWplY3RvcnlQb2ludHMgPSBbXTtcbiAgICBjb25zdCB0b3RhbFNlZ21lbnRzID0gMTAwOyAvLyDlop7liqDmrrXmlbDku6Xojrflvpfmm7TlubPmu5HnmoTmm7Lnur/vvIznibnliKvmmK/lr7nmlrnms6JcbiAgICBcbiAgICAvLyDku47phY3nva7mlofku7bojrflj5blhbPplK7kvY3nva7ngrlcbiAgICBjb25zdCBlbGVjdHJvbkd1biA9IG5ldyBUSFJFRS5WZWN0b3IzKFxuICAgICAgQ09ORklHLmVsZWN0cm9uQmVhbS5zdGFydFBvaW50LngsIFxuICAgICAgQ09ORklHLmVsZWN0cm9uQmVhbS5zdGFydFBvaW50LnksIFxuICAgICAgQ09ORklHLmVsZWN0cm9uQmVhbS5zdGFydFBvaW50LnpcbiAgICApO1xuICAgIGNvbnN0IHNjcmVlblBvc2l0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoXG4gICAgICBDT05GSUcuZWxlY3Ryb25CZWFtLmVuZFBvaW50LngsIFxuICAgICAgQ09ORklHLmVsZWN0cm9uQmVhbS5lbmRQb2ludC55LCBcbiAgICAgIENPTkZJRy5lbGVjdHJvbkJlYW0uZW5kUG9pbnQuelxuICAgICk7XG4gICAgXG4gICAgLy8g5LuO6YWN572u5paH5Lu26I635Y+W5YGP6L2s5p2/5L2N572uXG4gICAgY29uc3QgcGxhdGVQb3NpdGlvbnMgPSBDT05GSUcuZWxlY3Ryb25CZWFtLnBoeXNpY3MucGxhdGVQb3NpdGlvbnM7XG4gICAgY29uc3QgdmVydGljYWxQbGF0ZVN0YXJ0ID0gbmV3IFRIUkVFLlZlY3RvcjMocGxhdGVQb3NpdGlvbnMudmVydGljYWxQbGF0ZVN0YXJ0LCAwLCAwKTtcbiAgICBjb25zdCB2ZXJ0aWNhbFBsYXRlRW5kID0gbmV3IFRIUkVFLlZlY3RvcjMocGxhdGVQb3NpdGlvbnMudmVydGljYWxQbGF0ZUVuZCwgMCwgMCk7XG4gICAgY29uc3QgaG9yaXpvbnRhbFBsYXRlU3RhcnQgPSBuZXcgVEhSRUUuVmVjdG9yMyhwbGF0ZVBvc2l0aW9ucy5ob3Jpem9udGFsUGxhdGVTdGFydCwgMCwgMCk7XG4gICAgY29uc3QgaG9yaXpvbnRhbFBsYXRlRW5kID0gbmV3IFRIUkVFLlZlY3RvcjMocGxhdGVQb3NpdGlvbnMuaG9yaXpvbnRhbFBsYXRlRW5kLCAwLCAwKTtcbiAgICBcbiAgICAvLyDku47phY3nva7mlofku7bojrflj5bniannkIblj4LmlbBcbiAgICBjb25zdCBlbGVjdHJvblZlbG9jaXR5ID0gQ09ORklHLmVsZWN0cm9uQmVhbS5waHlzaWNzLmVsZWN0cm9uVmVsb2NpdHk7XG4gICAgY29uc3QgZWxlY3RyaWNGaWVsZFN0cmVuZ3RoID0gQ09ORklHLmVsZWN0cm9uQmVhbS5waHlzaWNzLmVsZWN0cmljRmllbGRTdHJlbmd0aDtcbiAgICBcbiAgICAvLyDlvZPliY3kvY3nva7lkozpgJ/luqZcbiAgICBsZXQgY3VycmVudFBvcyA9IGVsZWN0cm9uR3VuLmNsb25lKCk7XG4gICAgbGV0IHZlbG9jaXR5ID0gbmV3IFRIUkVFLlZlY3RvcjMoZWxlY3Ryb25WZWxvY2l0eSwgMCwgMCk7IC8vIOWIneWni+awtOW5s+WQkeWPs1xuICAgIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IHRvdGFsU2VnbWVudHM7IGkrKykge1xuICAgICAgY29uc3QgcHJvZ3Jlc3MgPSBpIC8gdG90YWxTZWdtZW50cztcbiAgICAgIGNvbnN0IHggPSBlbGVjdHJvbkd1bi54ICsgKHNjcmVlblBvc2l0aW9uLnggLSBlbGVjdHJvbkd1bi54KSAqIHByb2dyZXNzO1xuICAgICAgXG4gICAgICAvLyDorqHnrpflvZPliY3mrrXnmoTliqDpgJ/luqZcbiAgICAgIGxldCBhY2NlbGVyYXRpb24gPSBuZXcgVEhSRUUuVmVjdG9yMygwLCAwLCAwKTtcbiAgICAgIFxuICAgICAgLy8g5Zyo5Z6C55u05YGP6L2s5p2/5Yy65Z+f5YaF5bqU55So5Z6C55u055S15Zy6XG4gICAgICBpZiAoeCA+PSB2ZXJ0aWNhbFBsYXRlU3RhcnQueCAmJiB4IDw9IHZlcnRpY2FsUGxhdGVFbmQueCkge1xuICAgICAgICBjb25zdCBwbGF0ZVByb2dyZXNzID0gKHggLSB2ZXJ0aWNhbFBsYXRlU3RhcnQueCkgLyAodmVydGljYWxQbGF0ZUVuZC54IC0gdmVydGljYWxQbGF0ZVN0YXJ0LngpO1xuICAgICAgICBjb25zdCBmaWVsZEludGVuc2l0eSA9IE1hdGguc2luKHBsYXRlUHJvZ3Jlc3MgKiBNYXRoLlBJKSAqIGVsZWN0cmljRmllbGRTdHJlbmd0aDsgLy8g5bmz5ruR6L+H5rihXG4gICAgICAgIGFjY2VsZXJhdGlvbi55ID0gdmVydGljYWxEZWZsZWN0aW9uICogZmllbGRJbnRlbnNpdHkgKiAwLjU7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIOWcqOawtOW5s+WBj+i9rOadv+WMuuWfn+WGheW6lOeUqOawtOW5s+eUteWculxuICAgICAgaWYgKHggPj0gaG9yaXpvbnRhbFBsYXRlU3RhcnQueCAmJiB4IDw9IGhvcml6b250YWxQbGF0ZUVuZC54KSB7XG4gICAgICAgIGNvbnN0IHBsYXRlUHJvZ3Jlc3MgPSAoeCAtIGhvcml6b250YWxQbGF0ZVN0YXJ0LngpIC8gKGhvcml6b250YWxQbGF0ZUVuZC54IC0gaG9yaXpvbnRhbFBsYXRlU3RhcnQueCk7XG4gICAgICAgIGNvbnN0IGZpZWxkSW50ZW5zaXR5ID0gTWF0aC5zaW4ocGxhdGVQcm9ncmVzcyAqIE1hdGguUEkpICogZWxlY3RyaWNGaWVsZFN0cmVuZ3RoOyAvLyDlubPmu5Hov4fmuKFcbiAgICAgICAgYWNjZWxlcmF0aW9uLnogPSBob3Jpem9udGFsRGVmbGVjdGlvbiAqIGZpZWxkSW50ZW5zaXR5ICogMC41O1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyDmm7TmlrDpgJ/luqblkozkvY3nva7vvIjnroDljJbnmoTmrKfmi4nnp6/liIbvvIlcbiAgICAgIGNvbnN0IGR0ID0gKHNjcmVlblBvc2l0aW9uLnggLSBlbGVjdHJvbkd1bi54KSAvIHRvdGFsU2VnbWVudHMgLyBlbGVjdHJvblZlbG9jaXR5O1xuICAgICAgdmVsb2NpdHkuYWRkKGFjY2VsZXJhdGlvbi5jbG9uZSgpLm11bHRpcGx5U2NhbGFyKGR0KSk7XG4gICAgICBcbiAgICAgIC8vIOS/neaMgeawtOW5s+mAn+W6puWfuuacrOaBkuWumu+8iOeUteWtkOadn+eahOS4u+imgei/kOWKqOaWueWQke+8iVxuICAgICAgdmVsb2NpdHkueCA9IGVsZWN0cm9uVmVsb2NpdHk7XG4gICAgICBcbiAgICAgIC8vIOiuoeeul+aWsOS9jee9rlxuICAgICAgY3VycmVudFBvcy5hZGQodmVsb2NpdHkuY2xvbmUoKS5tdWx0aXBseVNjYWxhcihkdCAqIDAuMSkpOyAvLyDnvKnmlL7lm6DlrZDosIPmlbTovajov7nlubPmu5HluqZcbiAgICAgIFxuICAgICAgLy8g56Gu5L+dIHgg5Z2Q5qCH5oyJ6aKE5pyf6YCS5aKeXG4gICAgICBjdXJyZW50UG9zLnggPSB4O1xuICAgICAgXG4gICAgICB0cmFqZWN0b3J5UG9pbnRzLnB1c2goY3VycmVudFBvcy5jbG9uZSgpKTtcbiAgICB9XG4gICAgXG4gICAgLy8g5bqU55So6L2o6L+55bmz5ruR5aSE55CGXG4gICAgcmV0dXJuIHRoaXMuc21vb3RoVHJhamVjdG9yeSh0cmFqZWN0b3J5UG9pbnRzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDlubPmu5Hovajov7nngrnvvIzkvb/nlLXlrZDmnZ/nnIvotbfmnaXmm7Toh6rnhLZcbiAgICogQHBhcmFtIHtBcnJheTxUSFJFRS5WZWN0b3IzPn0gcG9pbnRzIC0g5Y6f5aeL6L2o6L+554K5XG4gICAqIEByZXR1cm5zIHtBcnJheTxUSFJFRS5WZWN0b3IzPn0g5bmz5ruR5ZCO55qE6L2o6L+554K5XG4gICAqL1xuICBzbW9vdGhUcmFqZWN0b3J5KHBvaW50cykge1xuICAgIGlmIChwb2ludHMubGVuZ3RoIDwgMykgcmV0dXJuIHBvaW50cztcbiAgICBcbiAgICBjb25zdCBzbW9vdGhlZCA9IFtdO1xuICAgIGNvbnN0IHNtb290aGluZ0ZhY3RvciA9IENPTkZJRy5lbGVjdHJvbkJlYW0udHJhamVjdG9yeVNtb290aGluZyB8fCAwLjg7XG4gICAgXG4gICAgLy8g5L+d5oyB56ys5LiA5Liq54K55LiN5Y+YXG4gICAgc21vb3RoZWQucHVzaChwb2ludHNbMF0uY2xvbmUoKSk7XG4gICAgXG4gICAgLy8g5a+55Lit6Ze055qE54K56L+b6KGM5bmz5ruR5aSE55CGXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBwb2ludHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICBjb25zdCBwcmV2ID0gcG9pbnRzW2kgLSAxXTtcbiAgICAgIGNvbnN0IGN1cnJlbnQgPSBwb2ludHNbaV07XG4gICAgICBjb25zdCBuZXh0ID0gcG9pbnRzW2kgKyAxXTtcbiAgICAgIFxuICAgICAgLy8g6K6h566X5bmz5ruR5ZCO55qE5L2N572u77yI5Yqg5p2D5bmz5Z2H77yJXG4gICAgICBjb25zdCBzbW9vdGhlZFBvaW50ID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgICAgIHNtb290aGVkUG9pbnQuYWRkU2NhbGVkVmVjdG9yKHByZXYsICgxIC0gc21vb3RoaW5nRmFjdG9yKSAqIDAuNSk7XG4gICAgICBzbW9vdGhlZFBvaW50LmFkZFNjYWxlZFZlY3RvcihjdXJyZW50LCBzbW9vdGhpbmdGYWN0b3IpO1xuICAgICAgc21vb3RoZWRQb2ludC5hZGRTY2FsZWRWZWN0b3IobmV4dCwgKDEgLSBzbW9vdGhpbmdGYWN0b3IpICogMC41KTtcbiAgICAgIFxuICAgICAgc21vb3RoZWQucHVzaChzbW9vdGhlZFBvaW50KTtcbiAgICB9XG4gICAgXG4gICAgLy8g5L+d5oyB5pyA5ZCO5LiA5Liq54K55LiN5Y+YXG4gICAgc21vb3RoZWQucHVzaChwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDFdLmNsb25lKCkpO1xuICAgIFxuICAgIHJldHVybiBzbW9vdGhlZDtcbiAgfVxuICBcbiAgXG4gIC8qKlxuICAgKiDmt7vliqDovajov7nngrlcbiAgICogQHBhcmFtIHtUSFJFRS5WZWN0b3IzfSBwb2ludCAtIOi9qOi/ueeCuVxuICAgKi9cbiAgYWRkVHJhY2VQb2ludChwb2ludCkge1xuICAgIC8vIOWmguaenOayoeacieW9k+WJjeaute+8jOWIm+W7uuS4gOS4quaWsOautVxuICAgIGlmICh0aGlzLnRyYWNlU2VnbWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLnRyYWNlU2VnbWVudHMucHVzaChbXSk7XG4gICAgfVxuICAgIFxuICAgIC8vIOiOt+WPluW9k+WJjeautVxuICAgIGNvbnN0IGN1cnJlbnRTZWdtZW50ID0gdGhpcy50cmFjZVNlZ21lbnRzW3RoaXMudHJhY2VTZWdtZW50cy5sZW5ndGggLSAxXTtcbiAgICBcbiAgICAvLyDmt7vliqDngrnliLDlvZPliY3mrrVcbiAgICBjdXJyZW50U2VnbWVudC5wdXNoKHBvaW50LmNsb25lKCkpO1xuICAgIFxuICAgIC8vIOmZkOWItuavj+S4quauteeahOeCueaVsFxuICAgIGlmIChjdXJyZW50U2VnbWVudC5sZW5ndGggPiBDT05GSUcuZWxlY3Ryb25CZWFtLnRyYWNlLm1heFBvaW50cyAvIDIpIHtcbiAgICAgIC8vIOS/neeVmeacgOWQjuWHoOS4queCueWIsOaWsOaute+8jOehruS/nei/nue7reaAp1xuICAgICAgY29uc3QgbmV3U2VnbWVudCA9IGN1cnJlbnRTZWdtZW50LnNsaWNlKC0yKTtcbiAgICAgIHRoaXMudHJhY2VTZWdtZW50cy5wdXNoKG5ld1NlZ21lbnQpO1xuICAgICAgXG4gICAgICAvLyDnp7vpmaTov4flpJrnmoTmrrVcbiAgICAgIGlmICh0aGlzLnRyYWNlU2VnbWVudHMubGVuZ3RoID4gNCkge1xuICAgICAgICB0aGlzLnRyYWNlU2VnbWVudHMuc2hpZnQoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8g6YeN5paw57uY5Yi26L2o6L+5XG4gICAgdGhpcy5yZWRyYXdUcmFjZVNlZ21lbnRzKCk7XG4gIH1cblxuICAvKipcbiAgICog6YeN5paw57uY5Yi26L2o6L+55q61XG4gICAqL1xuICByZWRyYXdUcmFjZVNlZ21lbnRzKCkge1xuICAgIC8vIOa4hemZpOaXp+eahOi9qOi/uee6v1xuICAgIHRoaXMuY2xlYXJUcmFjZUxpbmVzKCk7XG4gICAgXG4gICAgLy8g5Li65q+P5Liq5q615Yib5bu65Y2V54us55qE57q/5p2hXG4gICAgdGhpcy50cmFjZVNlZ21lbnRzLmZvckVhY2goKHNlZ21lbnQsIGluZGV4KSA9PiB7XG4gICAgICBpZiAoc2VnbWVudC5sZW5ndGggPiAxKSB7XG4gICAgICAgIGNvbnN0IHRyYWNlR2VvbWV0cnkgPSBuZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnkoKS5zZXRGcm9tUG9pbnRzKHNlZ21lbnQpO1xuICAgICAgICBcbiAgICAgICAgLy8g5Li65LiN5ZCM5q615L2/55So5LiN5ZCM55qE6YCP5piO5bqm77yM5pyA5paw55qE5q615pyA5LquXG4gICAgICAgIGNvbnN0IG9wYWNpdHkgPSBDT05GSUcuZWxlY3Ryb25CZWFtLnRyYWNlLm9wYWNpdHkgKiAoMC4zICsgMC43ICogKGluZGV4ICsgMSkgLyB0aGlzLnRyYWNlU2VnbWVudHMubGVuZ3RoKTtcbiAgICAgICAgY29uc3Qgc2VnbWVudE1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHtcbiAgICAgICAgICBjb2xvcjogQ09ORklHLmJlYW0uY29sb3IsXG4gICAgICAgICAgb3BhY2l0eTogb3BhY2l0eSxcbiAgICAgICAgICB0cmFuc3BhcmVudDogdHJ1ZSxcbiAgICAgICAgICBkZXB0aFRlc3Q6IHRydWUsICAvLyDlkK/nlKjmt7HluqbmtYvor5XvvIznoa7kv53ooqvlpJblo7PmraPnoa7pga7mjKFcbiAgICAgICAgICBkZXB0aFdyaXRlOiBmYWxzZSAvLyDnpoHnlKjmt7HluqblhpnlhaVcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCB0cmFjZUxpbmUgPSBuZXcgVEhSRUUuTGluZSh0cmFjZUdlb21ldHJ5LCBzZWdtZW50TWF0ZXJpYWwpO1xuICAgICAgICB0cmFjZUxpbmUucmVuZGVyT3JkZXIgPSAzOyAvLyDorr7nva7ovajov7nnur/nmoTmuLLmn5Ppobrluo/vvIzlnKjmnoHmnb/kuYvlkI7muLLmn5NcbiAgICAgICAgdGhpcy50cmFjZUxpbmVzLnB1c2godHJhY2VMaW5lKTtcbiAgICAgICAgdGhpcy5zY2VuZS5hZGQodHJhY2VMaW5lKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDlvIDlp4vmlrDnmoTovajov7nmrrXvvIjnlKjkuo7pgb/lhY3lm57miavnur/vvIlcbiAgICovXG4gIHN0YXJ0TmV3VHJhY2VTZWdtZW50KCkge1xuICAgIC8vIOWmguaenOW9k+WJjeauteacieeCue+8jOWIm+W7uuaWsOautVxuICAgIGlmICh0aGlzLnRyYWNlU2VnbWVudHMubGVuZ3RoID4gMCAmJiB0aGlzLnRyYWNlU2VnbWVudHNbdGhpcy50cmFjZVNlZ21lbnRzLmxlbmd0aCAtIDFdLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMudHJhY2VTZWdtZW50cy5wdXNoKFtdKTtcbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDmuIXpmaTovajov7nnur9cbiAgICovXG4gIGNsZWFyVHJhY2VMaW5lcygpIHtcbiAgICB0aGlzLnRyYWNlTGluZXMuZm9yRWFjaChsaW5lID0+IHtcbiAgICAgIHRoaXMuc2NlbmUucmVtb3ZlKGxpbmUpO1xuICAgICAgbGluZS5nZW9tZXRyeS5kaXNwb3NlKCk7XG4gICAgfSk7XG4gICAgdGhpcy50cmFjZUxpbmVzID0gW107XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDmm7TmlrDmnZDotKhcbiAgICovXG4gIHVwZGF0ZU1hdGVyaWFsKCkge1xuICAgIHRoaXMudXBkYXRlQmVhbU1hdGVyaWFscygpO1xuICB9XG4gIFxuICAvKipcbiAgICog5riF6Zmk5omA5pyJ6L2o6L+5XG4gICAqL1xuICBjbGVhckFsbFRyYWNlcygpIHtcbiAgICB0aGlzLmNsZWFyVHJhY2VMaW5lcygpO1xuICAgIHRoaXMudHJhY2VQb2ludHMgPSBbXTtcbiAgICB0aGlzLnRyYWNlU2VnbWVudHMgPSBbXTtcbiAgfVxuXG4gIC8qKlxuICAgKiDmuIXpmaTnlLXlrZDmnZ/nur/mnaFcbiAgICovXG4gIGNsZWFyQmVhbUxpbmVzKCkge1xuICAgIGlmICh0aGlzLmJlYW1MaW5lKSB7XG4gICAgICB0aGlzLnNjZW5lLnJlbW92ZSh0aGlzLmJlYW1MaW5lKTtcbiAgICAgIHRoaXMuYmVhbUxpbmUuZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgdGhpcy5iZWFtTGluZSA9IG51bGw7XG4gICAgfVxuICAgIGlmICh0aGlzLmdsb3dMaW5lKSB7XG4gICAgICB0aGlzLnNjZW5lLnJlbW92ZSh0aGlzLmdsb3dMaW5lKTtcbiAgICAgIHRoaXMuZ2xvd0xpbmUuZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgdGhpcy5nbG93TGluZSA9IG51bGw7XG4gICAgfVxuICAgIGlmICh0aGlzLnBhcnRpY2xlU3lzdGVtKSB7XG4gICAgICB0aGlzLnNjZW5lLnJlbW92ZSh0aGlzLnBhcnRpY2xlU3lzdGVtKTtcbiAgICAgIHRoaXMucGFydGljbGVTeXN0ZW0uZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbS5tYXRlcmlhbC5kaXNwb3NlKCk7XG4gICAgICB0aGlzLnBhcnRpY2xlU3lzdGVtID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu65YiG5bGC55S15a2Q5p2f5pWI5p6cXG4gICAqIEBwYXJhbSB7VEhSRUUuQnVmZmVyR2VvbWV0cnl9IGdlb21ldHJ5IC0g55S15a2Q5p2f5Yeg5L2V5L2TXG4gICAqL1xuICBjcmVhdGVMYXllcmVkQmVhbShnZW9tZXRyeSkge1xuICAgIC8vIOWIm+W7uuWPkeWFieWkluWbtOWxgu+8iOabtOWuve+8jOmAj+aYjuW6puabtOS9ju+8iVxuICAgIHRoaXMuZ2xvd0xpbmUgPSBuZXcgVEhSRUUuTGluZShnZW9tZXRyeS5jbG9uZSgpLCB0aGlzLmdsb3dNYXRlcmlhbCk7XG4gICAgdGhpcy5nbG93TGluZS5yZW5kZXJPcmRlciA9IDQ7IC8vIOiuvue9rua4suafk+mhuuW6j++8jOWcqOaegeadv+S5i+WQju+8jOS4u+eUteWtkOadn+S5i+WJjVxuICAgIHRoaXMuc2NlbmUuYWRkKHRoaXMuZ2xvd0xpbmUpO1xuICAgIFxuICAgIC8vIOWIm+W7uuS4u+eUteWtkOadn++8iOi+g+eqhO+8jOS6ruW6puabtOmrmO+8iVxuICAgIHRoaXMuYmVhbUxpbmUgPSBuZXcgVEhSRUUuTGluZShnZW9tZXRyeS5jbG9uZSgpLCB0aGlzLmJlYW1NYXRlcmlhbCk7XG4gICAgdGhpcy5iZWFtTGluZS5yZW5kZXJPcmRlciA9IDU7IC8vIOiuvue9rua4suafk+mhuuW6j++8jOehruS/neWcqOmAj+aYjuaegeadv+S5i+WQjua4suafk1xuICAgIHRoaXMuc2NlbmUuYWRkKHRoaXMuYmVhbUxpbmUpO1xuICB9XG5cbiAgLyoqXG4gICAqIOabtOaWsOeUteWtkOadn+adkOi0qFxuICAgKi9cbiAgdXBkYXRlQmVhbU1hdGVyaWFscygpIHtcbiAgICAvLyDmm7TmlrDkuLvnlLXlrZDmnZ/mnZDotKhcbiAgICBpZiAodGhpcy5iZWFtTWF0ZXJpYWwpIHtcbiAgICAgIHRoaXMuYmVhbU1hdGVyaWFsLmNvbG9yLnNldChDT05GSUcuYmVhbS5jb2xvcik7XG4gICAgICB0aGlzLmJlYW1NYXRlcmlhbC5vcGFjaXR5ID0gQ09ORklHLmJlYW0uaW50ZW5zaXR5O1xuICAgIH1cbiAgICBcbiAgICAvLyDmm7TmlrDlj5HlhYnmnZDotKhcbiAgICBpZiAodGhpcy5nbG93TWF0ZXJpYWwpIHtcbiAgICAgIHRoaXMuZ2xvd01hdGVyaWFsLmNvbG9yLnNldChDT05GSUcuYmVhbS5jb2xvcik7XG4gICAgICB0aGlzLmdsb3dNYXRlcmlhbC5vcGFjaXR5ID0gQ09ORklHLmJlYW0uaW50ZW5zaXR5ICogMC4zO1xuICAgIH1cbiAgICBcbiAgICAvLyDmm7TmlrDovajov7nmnZDotKhcbiAgICBpZiAodGhpcy50cmFjZU1hdGVyaWFsKSB7XG4gICAgICB0aGlzLnRyYWNlTWF0ZXJpYWwuY29sb3Iuc2V0KENPTkZJRy5iZWFtLmNvbG9yKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu657KS5a2Q55S15a2Q5p2f5pWI5p6c77yI5Y+v6YCJ55qE6auY57qn5pWI5p6c77yJXG4gICAqIEBwYXJhbSB7QXJyYXk8VEhSRUUuVmVjdG9yMz59IHBvaW50cyAtIOi9qOi/ueeCuVxuICAgKi9cbiAgY3JlYXRlUGFydGljbGVCZWFtKHBvaW50cykge1xuICAgIC8vIOWIm+W7uueykuWtkOezu+e7n+adpeaooeaLn+eUteWtkOa1gVxuICAgIGNvbnN0IHBhcnRpY2xlQ291bnQgPSBwb2ludHMubGVuZ3RoO1xuICAgIGNvbnN0IHBhcnRpY2xlcyA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xuICAgIGNvbnN0IHBvc2l0aW9ucyA9IG5ldyBGbG9hdDMyQXJyYXkocGFydGljbGVDb3VudCAqIDMpO1xuICAgIGNvbnN0IGNvbG9ycyA9IG5ldyBGbG9hdDMyQXJyYXkocGFydGljbGVDb3VudCAqIDMpO1xuICAgIGNvbnN0IHNpemVzID0gbmV3IEZsb2F0MzJBcnJheShwYXJ0aWNsZUNvdW50KTtcbiAgICBcbiAgICBjb25zdCBjb2xvciA9IG5ldyBUSFJFRS5Db2xvcihDT05GSUcuYmVhbS5jb2xvcik7XG4gICAgXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXJ0aWNsZUNvdW50OyBpKyspIHtcbiAgICAgIGNvbnN0IHBvaW50ID0gcG9pbnRzW2ldO1xuICAgICAgY29uc3QgaTMgPSBpICogMztcbiAgICAgIFxuICAgICAgLy8g5L2N572uXG4gICAgICBwb3NpdGlvbnNbaTNdID0gcG9pbnQueDtcbiAgICAgIHBvc2l0aW9uc1tpMyArIDFdID0gcG9pbnQueTtcbiAgICAgIHBvc2l0aW9uc1tpMyArIDJdID0gcG9pbnQuejtcbiAgICAgIFxuICAgICAgLy8g6aKc6Imy77yI5rK/552A6L2o6L+55riQ5Y+Y77yJXG4gICAgICBjb25zdCBpbnRlbnNpdHkgPSAxLjAgLSAoaSAvIHBhcnRpY2xlQ291bnQpICogMC41OyAvLyDku47liY3liLDlkI7pgJDmuJDlj5jmmpdcbiAgICAgIGNvbG9yc1tpM10gPSBjb2xvci5yICogaW50ZW5zaXR5O1xuICAgICAgY29sb3JzW2kzICsgMV0gPSBjb2xvci5nICogaW50ZW5zaXR5O1xuICAgICAgY29sb3JzW2kzICsgMl0gPSBjb2xvci5iICogaW50ZW5zaXR5O1xuICAgICAgXG4gICAgICAvLyDlpKflsI/vvIjliY3pnaLovoPlsI/vvIzlkI7pnaLovoPlpKfvvIlcbiAgICAgIHNpemVzW2ldID0gMC4wMiArIChpIC8gcGFydGljbGVDb3VudCkgKiAwLjAxO1xuICAgIH1cbiAgICBcbiAgICBwYXJ0aWNsZXMuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIG5ldyBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUocG9zaXRpb25zLCAzKSk7XG4gICAgcGFydGljbGVzLnNldEF0dHJpYnV0ZSgnY29sb3InLCBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGNvbG9ycywgMykpO1xuICAgIHBhcnRpY2xlcy5zZXRBdHRyaWJ1dGUoJ3NpemUnLCBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKHNpemVzLCAxKSk7XG4gICAgXG4gICAgY29uc3QgcGFydGljbGVNYXRlcmlhbCA9IG5ldyBUSFJFRS5Qb2ludHNNYXRlcmlhbCh7XG4gICAgICBzaXplOiAwLjAzLFxuICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsXG4gICAgICBvcGFjaXR5OiBDT05GSUcuYmVhbS5pbnRlbnNpdHkgKiAwLjgsXG4gICAgICB2ZXJ0ZXhDb2xvcnM6IHRydWUsXG4gICAgICBibGVuZGluZzogVEhSRUUuQWRkaXRpdmVCbGVuZGluZ1xuICAgIH0pO1xuICAgIFxuICAgIGlmICh0aGlzLnBhcnRpY2xlU3lzdGVtKSB7XG4gICAgICB0aGlzLnNjZW5lLnJlbW92ZSh0aGlzLnBhcnRpY2xlU3lzdGVtKTtcbiAgICAgIHRoaXMucGFydGljbGVTeXN0ZW0uZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgdGhpcy5wYXJ0aWNsZVN5c3RlbS5tYXRlcmlhbC5kaXNwb3NlKCk7XG4gICAgfVxuICAgIFxuICAgIHRoaXMucGFydGljbGVTeXN0ZW0gPSBuZXcgVEhSRUUuUG9pbnRzKHBhcnRpY2xlcywgcGFydGljbGVNYXRlcmlhbCk7XG4gICAgdGhpcy5zY2VuZS5hZGQodGhpcy5wYXJ0aWNsZVN5c3RlbSk7XG4gIH1cblxuICAvKipcbiAgICog5ryU56S655S15a2Q5p2f5pWI5p6c55qE5rWL6K+V5Ye95pWwXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB0ZXN0Vm9sdGFnZSAtIOa1i+ivleeUteWOi++8iOWPr+mAie+8jOm7mOiupOS4ujEuMO+8iVxuICAgKi9cbiAgZGVtb25zdHJhdGVCZWFtRWZmZWN0cyh0ZXN0Vm9sdGFnZSA9IDEuMCkge1xuICAgIGNvbnNvbGUubG9nKCfwn5SsIOa8lOekuuaWsOeahOeUteWtkOadn+aViOaenC4uLicpO1xuICAgIFxuICAgIC8vIOa1i+ivleS4jeWQjOeahOWBj+i9rOaViOaenFxuICAgIGNvbnN0IHRlc3REZWZsZWN0aW9ucyA9IFtcbiAgICAgIHsgdjogMCwgaDogMCwgbmFtZTogJ+aXoOWBj+i9rCcgfSxcbiAgICAgIHsgdjogdGVzdFZvbHRhZ2UsIGg6IDAsIG5hbWU6ICflnoLnm7TlgY/ovawnIH0sXG4gICAgICB7IHY6IDAsIGg6IHRlc3RWb2x0YWdlLCBuYW1lOiAn5rC05bmz5YGP6L2sJyB9LFxuICAgICAgeyB2OiB0ZXN0Vm9sdGFnZSwgaDogdGVzdFZvbHRhZ2UsIG5hbWU6ICflj4zlkJHlgY/ovawnIH1cbiAgICBdO1xuICAgIFxuICAgIGxldCB0ZXN0SW5kZXggPSAwO1xuICAgIGNvbnN0IHRlc3RJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgIGlmICh0ZXN0SW5kZXggPj0gdGVzdERlZmxlY3Rpb25zLmxlbmd0aCkge1xuICAgICAgICBjbGVhckludGVydmFsKHRlc3RJbnRlcnZhbCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCfinIUg55S15a2Q5p2f5pWI5p6c5ryU56S65a6M5oiQ77yBJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgdGVzdCA9IHRlc3REZWZsZWN0aW9uc1t0ZXN0SW5kZXhdO1xuICAgICAgY29uc29sZS5sb2coYPCfk6Eg5rWL6K+VICR7dGVzdEluZGV4ICsgMX0vNDogJHt0ZXN0Lm5hbWV9IChWOiR7dGVzdC52fSwgSDoke3Rlc3QuaH0pYCk7XG4gICAgICBcbiAgICAgIHRoaXMudXBkYXRlQmVhbVBhdGgoe1xuICAgICAgICB2ZXJ0aWNhbDogeyB2b2x0YWdlOiB0ZXN0LnYgfSxcbiAgICAgICAgaG9yaXpvbnRhbDogeyB2b2x0YWdlOiB0ZXN0LmggfVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHRlc3RJbmRleCsrO1xuICAgIH0sIDIwMDApOyAvLyDmr48y56eS5YiH5o2i5LiA5qyhXG4gICAgXG4gICAgcmV0dXJuIHRlc3RJbnRlcnZhbDtcbiAgfVxuXG4gIC8qKlxuICAgKiDlkK/nlKjnspLlrZDmlYjmnpxcbiAgICovXG4gIGVuYWJsZVBhcnRpY2xlRWZmZWN0KCkge1xuICAgIC8vIOS4tOaXtuS/ruaUuemFjee9ruS7peWQr+eUqOeykuWtkOaViOaenFxuICAgIGNvbnN0IG9yaWdpbmFsQ29uZmlnID0gQ09ORklHLmVsZWN0cm9uQmVhbS5lbmFibGVQYXJ0aWNsZUVmZmVjdDtcbiAgICBDT05GSUcuZWxlY3Ryb25CZWFtLmVuYWJsZVBhcnRpY2xlRWZmZWN0ID0gdHJ1ZTtcbiAgICBcbiAgICAvLyDph43mlrDnlJ/miJDnlLXlrZDmnZ/ku6XlupTnlKjnspLlrZDmlYjmnpxcbiAgICB0aGlzLnVwZGF0ZUJlYW1QYXRoKHtcbiAgICAgIHZlcnRpY2FsOiB7IHZvbHRhZ2U6IDAgfSxcbiAgICAgIGhvcml6b250YWw6IHsgdm9sdGFnZTogMCB9XG4gICAgfSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ+KcqCDnspLlrZDmlYjmnpzlt7LlkK/nlKgnKTtcbiAgICBcbiAgICAvLyDov5Tlm57mgaLlpI3lh73mlbBcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgQ09ORklHLmVsZWN0cm9uQmVhbS5lbmFibGVQYXJ0aWNsZUVmZmVjdCA9IG9yaWdpbmFsQ29uZmlnO1xuICAgICAgdGhpcy51cGRhdGVCZWFtUGF0aCh7XG4gICAgICAgIHZlcnRpY2FsOiB7IHZvbHRhZ2U6IDAgfSxcbiAgICAgICAgaG9yaXpvbnRhbDogeyB2b2x0YWdlOiAwIH1cbiAgICAgIH0pO1xuICAgICAgY29uc29sZS5sb2coJ/CflIQg57KS5a2Q5pWI5p6c5bey5oGi5aSN5Yiw5Y6f5aeL6K6+572uJyk7XG4gICAgfTtcbiAgfVxufSAiLCJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XHJcbmltcG9ydCB7IENPTkZJRyB9IGZyb20gJy4uL2NvbmZpZ0xvYWRlcic7XHJcblxyXG4vKipcclxuICog6I2n5YWJ5bGP57G7XHJcbiAqIOi0n+i0o+WkhOeQhuiNp+WFieWxj+aViOaenOWSjOazouW9ouaYvuekulxyXG4gKiDpm4bmiJDkuoZUaHJlZVdhdmVmb3JtUmVuZGVyZXLnmoTms6LlvaLmuLLmn5Plip/og71cclxuICovXHJcbmV4cG9ydCBjbGFzcyBTY3JlZW4ge1xyXG4gIC8qKlxyXG4gICAqIOaehOmAoOWHveaVsFxyXG4gICAqIEBwYXJhbSB7VEhSRUUuU2NlbmV9IHNjZW5lIC0gVGhyZWUuanPlnLrmma9cclxuICAgKiBAcGFyYW0ge1RIUkVFLk1lc2h9IHNjcmVlbk1lc2ggLSDojaflhYnlsY/nvZHmoLxcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihzY2VuZSwgc2NyZWVuTWVzaCkge1xyXG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xyXG4gICAgdGhpcy5zY3JlZW5NZXNoID0gc2NyZWVuTWVzaDtcclxuICAgIFxyXG4gICAgLy8g5Yib5bu66I2n5YWJ54K56ZuG5ZCIXHJcbiAgICB0aGlzLmdsb3dQb2ludHMgPSBbXTtcclxuICAgIHRoaXMuZ2xvd01lc2hlcyA9IFtdO1xyXG4gICAgdGhpcy5tYXhHbG93UG9pbnRzID0gQ09ORklHLnNjcmVlbkVmZmVjdHMubWF4R2xvd1BvaW50cztcclxuICAgIFxyXG4gICAgLy8g5Li65LqG5YW85a65RGVtb0FuaW1hdGlvbueahGZvY3VzT25Db21wb25lbnTmlrnms5XvvIzmt7vliqBwb3NpdGlvbuWxnuaAp1xyXG4gICAgdGhpcy5wb3NpdGlvbiA9IHRoaXMuc2NyZWVuTWVzaC5wb3NpdGlvbjtcclxuICAgIFxyXG4gICAgLy8g56e76Zmk5LqG6Z2Z5oCB5rOi5b2i55u45YWz5bGe5oCn77yM5L+d55WZ55S15a2Q5p2f6L2o6L+55rOi5b2iXHJcbiAgICBcclxuICAgIC8vIOWIneWni+WMluiNp+WFieadkOi0qFxyXG4gICAgdGhpcy5pbml0R2xvd01hdGVyaWFsKCk7XHJcbiAgICBcclxuICAgIC8vIOWIm+W7uuiNp+WFieWxj+e9keagvFxyXG4gICAgdGhpcy5jcmVhdGVTY3JlZW5HcmlkKCk7XHJcbiAgICBcclxuICAgIC8vIOenu+mZpOS6humdmeaAgeazouW9ouWIneWni+WMllxyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDliJ3lp4vljJbojaflhYnmnZDotKhcclxuICAgKi9cclxuICBpbml0R2xvd01hdGVyaWFsKCkge1xyXG4gICAgLy8g5pu05paw6I2n5YWJ5bGP5p2Q6LSoXHJcbiAgICB0aGlzLnNjcmVlbk1lc2gubWF0ZXJpYWwuZW1pc3NpdmUuc2V0KENPTkZJRy5zY3JlZW4uY29sb3IpO1xyXG4gICAgdGhpcy5zY3JlZW5NZXNoLm1hdGVyaWFsLmVtaXNzaXZlSW50ZW5zaXR5ID0gQ09ORklHLnNjcmVlbi5pbnRlbnNpdHk7XHJcbiAgICBcclxuICAgIC8vIOWIm+W7uuiNp+WFieeCueadkOi0qFxyXG4gICAgdGhpcy5nbG93TWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoe1xyXG4gICAgICBjb2xvcjogQ09ORklHLmJlYW0uY29sb3IsIC8vIOS9v+eUqOeUteWtkOadn+eahOminOiJsu+8iOe7v+iJsu+8iVxyXG4gICAgICB0cmFuc3BhcmVudDogdHJ1ZSxcclxuICAgICAgb3BhY2l0eTogMC44XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgLy8g56e76Zmk5LqG6Z2Z5oCB5rOi5b2i5p2Q6LSoXHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOWIm+W7uuiNp+WFieWxj+e9keagvFxyXG4gICAqL1xyXG4gIGNyZWF0ZVNjcmVlbkdyaWQoKSB7XHJcbiAgICAvLyDojrflj5bojaflhYnlsY/nmoTlsLrlr7jlkozkvY3nva5cclxuICAgIGNvbnN0IHNjcmVlbldpZHRoID0gQ09ORklHLmNvbXBvbmVudHMuc2NyZWVuLndpZHRoO1xyXG4gICAgY29uc3Qgc2NyZWVuSGVpZ2h0ID0gQ09ORklHLmNvbXBvbmVudHMuc2NyZWVuLmhlaWdodDtcclxuICAgIGNvbnN0IHNjcmVlblBvc2l0aW9uID0gQ09ORklHLmNvbXBvbmVudHMuc2NyZWVuLnBvc2l0aW9uO1xyXG4gICAgXHJcbiAgICAvLyDliJvlu7rnvZHmoLzmnZDotKhcclxuICAgIGNvbnN0IGdyaWRNYXRlcmlhbCA9IG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7XHJcbiAgICAgIGNvbG9yOiBDT05GSUcuc2NyZWVuLmdyaWRDb2xvcixcclxuICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsXHJcbiAgICAgIG9wYWNpdHk6IENPTkZJRy5zY3JlZW4uZ3JpZE9wYWNpdHlcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAvLyDliJvlu7rnvZHmoLzlh6DkvZXkvZNcclxuICAgIGNvbnN0IGdyaWRHZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xyXG4gICAgY29uc3QgZ3JpZFBvaW50cyA9IFtdO1xyXG4gICAgXHJcbiAgICAvLyDorqHnrpfnvZHmoLznur/pl7Tot51cclxuICAgIGNvbnN0IGdyaWRTcGFjaW5nID0gQ09ORklHLnNjcmVlbi5ncmlkU3BhY2luZztcclxuICAgIGNvbnN0IGhhbGZXaWR0aCA9IHNjcmVlbldpZHRoIC8gMjtcclxuICAgIGNvbnN0IGhhbGZIZWlnaHQgPSBzY3JlZW5IZWlnaHQgLyAyO1xyXG4gICAgXHJcbiAgICAvLyDmt7vliqDlnoLnm7Tnur9cclxuICAgIGZvciAobGV0IHggPSAtaGFsZldpZHRoOyB4IDw9IGhhbGZXaWR0aDsgeCArPSBncmlkU3BhY2luZykge1xyXG4gICAgICBncmlkUG9pbnRzLnB1c2goeCwgLWhhbGZIZWlnaHQsIDApO1xyXG4gICAgICBncmlkUG9pbnRzLnB1c2goeCwgaGFsZkhlaWdodCwgMCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIOa3u+WKoOawtOW5s+e6v1xyXG4gICAgZm9yIChsZXQgeSA9IC1oYWxmSGVpZ2h0OyB5IDw9IGhhbGZIZWlnaHQ7IHkgKz0gZ3JpZFNwYWNpbmcpIHtcclxuICAgICAgZ3JpZFBvaW50cy5wdXNoKC1oYWxmV2lkdGgsIHksIDApO1xyXG4gICAgICBncmlkUG9pbnRzLnB1c2goaGFsZldpZHRoLCB5LCAwKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8g6K6+572u5Yeg5L2V5L2T5bGe5oCnXHJcbiAgICBncmlkR2VvbWV0cnkuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKGdyaWRQb2ludHMsIDMpKTtcclxuICAgIFxyXG4gICAgLy8g5Yib5bu6572R5qC857q/XHJcbiAgICB0aGlzLnNjcmVlbkdyaWQgPSBuZXcgVEhSRUUuTGluZVNlZ21lbnRzKGdyaWRHZW9tZXRyeSwgZ3JpZE1hdGVyaWFsKTtcclxuICAgIFxyXG4gICAgLy8g6K6+572u572R5qC85L2N572u77yI56iN5b6u5YGP56e777yM6YG/5YWNei1maWdodGluZ++8iVxyXG4gICAgdGhpcy5zY3JlZW5HcmlkLnBvc2l0aW9uLmNvcHkoc2NyZWVuUG9zaXRpb24pO1xyXG4gICAgdGhpcy5zY3JlZW5HcmlkLnBvc2l0aW9uLnggKz0gMC4wMTsgLy8g5Zyo6I2n5YWJ5bGP5YmN6Z2i5LiA54K554K5XHJcbiAgICB0aGlzLnNjcmVlbkdyaWQucm90YXRpb24ueSA9IC1NYXRoLlBJIC8gMjsgLy8g5LiO6I2n5YWJ5bGP55u45ZCM55qE5peL6L2sXHJcbiAgICBcclxuICAgIC8vIOa3u+WKoOWIsOWcuuaZr1xyXG4gICAgdGhpcy5zY2VuZS5hZGQodGhpcy5zY3JlZW5HcmlkKTtcclxuICB9XHJcbiAgXHJcbiAgLy8g56e76Zmk5LqGaW5pdFdhdmVmb3Jt5pa55rOVXHJcbiAgXHJcbiAgLy8g56e76Zmk5LqGY3JlYXRlV2F2ZWZvcm3mlrnms5VcclxuICBcclxuICAvLyDnp7vpmaTkuoZjcmVhdGVTaW5nbGVXYXZlZm9ybeaWueazlVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOagueaNruazouW9ouexu+Wei+iuoeeul+eUteWOi+WAvFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB3YXZlVHlwZSAtIOazouW9ouexu+Wei1xyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwaGFzZVZhbCAtIOebuOS9jeWAvCjlvKfluqYpXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGFtcGxpdHVkZSAtIOaMr+W5hVxyXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IOeUteWOi+WAvFxyXG4gICAqL1xyXG4gIGNhbGN1bGF0ZVZvbHRhZ2Uod2F2ZVR5cGUsIHBoYXNlVmFsLCBhbXBsaXR1ZGUpIHtcclxuICAgIHN3aXRjaCAod2F2ZVR5cGUpIHtcclxuICAgICAgY2FzZSAnc2luZSc6XHJcbiAgICAgICAgcmV0dXJuIGFtcGxpdHVkZSAqIE1hdGguc2luKHBoYXNlVmFsKTtcclxuICAgICAgY2FzZSAnc3F1YXJlJzpcclxuICAgICAgICByZXR1cm4gYW1wbGl0dWRlICogKE1hdGguc2luKHBoYXNlVmFsKSA+PSAwID8gMSA6IC0xKTtcclxuICAgICAgY2FzZSAndHJpYW5nbGUnOlxyXG4gICAgICAgIHJldHVybiBhbXBsaXR1ZGUgKiAoMiAqIE1hdGguYWJzKChwaGFzZVZhbCAlICgyICogTWF0aC5QSSkpIC8gKDIgKiBNYXRoLlBJKSAtIDAuNSkgLSAxKTtcclxuICAgICAgY2FzZSAnc2F3dG9vdGgnOlxyXG4gICAgICAgIHJldHVybiBhbXBsaXR1ZGUgKiAoKChwaGFzZVZhbCAlICgyICogTWF0aC5QSSkpIC8gKDIgKiBNYXRoLlBJKSkgKiAyIC0gMSk7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOa3u+WKoOiNp+WFieeCuVxyXG4gICAqIEBwYXJhbSB7VEhSRUUuVmVjdG9yM30gcG9zaXRpb24gLSDnlLXlrZDmnZ/lh7vkuK3ojaflhYnlsY/nmoTkvY3nva5cclxuICAgKi9cclxuICBhZGRHbG93UG9pbnQocG9zaXRpb24pIHtcclxuICAgIC8vIOWIm+W7uuS4gOS4quWwj+eQg+S9k+S7o+ihqOiNp+WFieeCuVxyXG4gICAgY29uc3QgZ2xvd0dlb21ldHJ5ID0gbmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KENPTkZJRy5zY3JlZW5FZmZlY3RzLmdsb3dQb2ludFNpemUsIDYsIDYpO1xyXG4gICAgY29uc3QgZ2xvd01lc2ggPSBuZXcgVEhSRUUuTWVzaChnbG93R2VvbWV0cnksIHRoaXMuZ2xvd01hdGVyaWFsLmNsb25lKCkpO1xyXG4gICAgXHJcbiAgICAvLyDorr7nva7kvY3nva7vvIjnqI3lvq7lgY/np7vvvIzpgb/lhY16LWZpZ2h0aW5n77yJXHJcbiAgICBnbG93TWVzaC5wb3NpdGlvbi5jb3B5KHBvc2l0aW9uKTtcclxuICAgIGNvbnN0IHNjcmVlbk9mZnNldCA9IENPTkZJRy5lbGVjdHJvbkJlYW0uc2NyZWVuT2Zmc2V0O1xyXG4gICAgZ2xvd01lc2gucG9zaXRpb24ueCA9IENPTkZJRy5jb21wb25lbnRzLnNjcmVlbi5wb3NpdGlvbi54IC0gc2NyZWVuT2Zmc2V0OyAvLyDnoa7kv53lnKjojaflhYnlsY/liY3pnaLkuIDngrnngrlcclxuICAgIFxyXG4gICAgLy8g5re75Yqg5Yiw5Zy65pmvXHJcbiAgICB0aGlzLnNjZW5lLmFkZChnbG93TWVzaCk7XHJcbiAgICBcclxuICAgIC8vIOiusOW9leiNp+WFieeCueS/oeaBr1xyXG4gICAgdGhpcy5nbG93UG9pbnRzLnB1c2goe1xyXG4gICAgICBtZXNoOiBnbG93TWVzaCxcclxuICAgICAgY3JlYXRlZEF0OiBEYXRlLm5vdygpLFxyXG4gICAgICBpbml0aWFsT3BhY2l0eTogMC44XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgLy8g5aaC5p6c6I2n5YWJ54K56L+H5aSa77yM56e76Zmk5pyA5pep55qE54K5XHJcbiAgICBpZiAodGhpcy5nbG93UG9pbnRzLmxlbmd0aCA+IHRoaXMubWF4R2xvd1BvaW50cykge1xyXG4gICAgICBjb25zdCBvbGRlc3RQb2ludCA9IHRoaXMuZ2xvd1BvaW50cy5zaGlmdCgpO1xyXG4gICAgICB0aGlzLnNjZW5lLnJlbW92ZShvbGRlc3RQb2ludC5tZXNoKTtcclxuICAgICAgb2xkZXN0UG9pbnQubWVzaC5nZW9tZXRyeS5kaXNwb3NlKCk7XHJcbiAgICAgIG9sZGVzdFBvaW50Lm1lc2gubWF0ZXJpYWwuZGlzcG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDmm7TmlrDojaflhYnngrnmlYjmnpzlkozms6LlvaLliqjnlLtcclxuICAgKi9cclxuICB1cGRhdGUoKSB7XHJcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xyXG4gICAgY29uc3QgcGVyc2lzdGVuY2UgPSBDT05GSUcuc2NyZWVuLnBlcnNpc3RlbmNlO1xyXG4gICAgXHJcbiAgICAvLyDmm7TmlrDojaflhYnlsY/mnZDotKhcclxuICAgIHRoaXMuc2NyZWVuTWVzaC5tYXRlcmlhbC5lbWlzc2l2ZS5zZXQoQ09ORklHLnNjcmVlbi5jb2xvcik7XHJcbiAgICB0aGlzLnNjcmVlbk1lc2gubWF0ZXJpYWwuZW1pc3NpdmVJbnRlbnNpdHkgPSBDT05GSUcuc2NyZWVuLmludGVuc2l0eTtcclxuICAgIFxyXG4gICAgLy8g5pu05paw5q+P5Liq6I2n5YWJ54K555qE6YCP5piO5bqm77yI5qih5ouf5L2Z6L6J5pWI5p6c77yJXHJcbiAgICB0aGlzLmdsb3dQb2ludHMuZm9yRWFjaCgocG9pbnQsIGluZGV4KSA9PiB7XHJcbiAgICAgIGNvbnN0IGFnZSA9IChub3cgLSBwb2ludC5jcmVhdGVkQXQpIC8gMTAwMDsgLy8g5bm06b6E77yI56eS77yJXHJcbiAgICAgIGNvbnN0IGZhZGVSYXRlID0gMSAtIHBlcnNpc3RlbmNlOyAvLyDmt6Hlh7rpgJ/njodcclxuICAgICAgY29uc3Qgb3BhY2l0eSA9IHBvaW50LmluaXRpYWxPcGFjaXR5ICogTWF0aC5wb3cocGVyc2lzdGVuY2UsIGFnZSAqIENPTkZJRy5zY3JlZW5FZmZlY3RzLmZhZGVSYXRlKTtcclxuICAgICAgXHJcbiAgICAgIC8vIOabtOaWsOmAj+aYjuW6plxyXG4gICAgICBwb2ludC5tZXNoLm1hdGVyaWFsLm9wYWNpdHkgPSBvcGFjaXR5O1xyXG4gICAgICBcclxuICAgICAgLy8g5aaC5p6c5a6M5YWo6YCP5piO77yM56e76Zmk6L+Z5Liq54K5XHJcbiAgICAgIGlmIChvcGFjaXR5IDwgQ09ORklHLnNjcmVlbkVmZmVjdHMubWluT3BhY2l0eSkge1xyXG4gICAgICAgIHRoaXMuc2NlbmUucmVtb3ZlKHBvaW50Lm1lc2gpO1xyXG4gICAgICAgIHBvaW50Lm1lc2guZ2VvbWV0cnkuZGlzcG9zZSgpO1xyXG4gICAgICAgIHBvaW50Lm1lc2gubWF0ZXJpYWwuZGlzcG9zZSgpO1xyXG4gICAgICAgIHRoaXMuZ2xvd1BvaW50cy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgLy8g56e76Zmk5LqG6Z2Z5oCB5rOi5b2i5Yqo55S76YC76L6RXHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOa4hemZpOaJgOacieiNp+WFieeCuVxyXG4gICAqL1xyXG4gIGNsZWFyQWxsR2xvd1BvaW50cygpIHtcclxuICAgIHRoaXMuZ2xvd1BvaW50cy5mb3JFYWNoKHBvaW50ID0+IHtcclxuICAgICAgdGhpcy5zY2VuZS5yZW1vdmUocG9pbnQubWVzaCk7XHJcbiAgICAgIHBvaW50Lm1lc2guZ2VvbWV0cnkuZGlzcG9zZSgpO1xyXG4gICAgICBwb2ludC5tZXNoLm1hdGVyaWFsLmRpc3Bvc2UoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5nbG93UG9pbnRzID0gW107XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOabtOaWsOadkOi0qOminOiJslxyXG4gICAqL1xyXG4gIHVwZGF0ZU1hdGVyaWFsKCkge1xyXG4gICAgLy8g5pu05paw6I2n5YWJ5bGP5p2Q6LSoXHJcbiAgICB0aGlzLnNjcmVlbk1lc2gubWF0ZXJpYWwuZW1pc3NpdmUuc2V0KENPTkZJRy5zY3JlZW4uY29sb3IpO1xyXG4gICAgdGhpcy5zY3JlZW5NZXNoLm1hdGVyaWFsLmVtaXNzaXZlSW50ZW5zaXR5ID0gQ09ORklHLnNjcmVlbi5pbnRlbnNpdHk7XHJcbiAgICBcclxuICAgIC8vIOabtOaWsOaJgOacieiNp+WFieeCueeahOminOiJslxyXG4gICAgdGhpcy5nbG93UG9pbnRzLmZvckVhY2gocG9pbnQgPT4ge1xyXG4gICAgICBwb2ludC5tZXNoLm1hdGVyaWFsLmNvbG9yLnNldChDT05GSUcuc2NyZWVuLmNvbG9yKTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBcclxuICAvLyA9PT09PT09PT09IOenu+mZpOS6huaJgOaciemdmeaAgeazouW9ouaOp+WItuaWueazlSA9PT09PT09PT09XHJcbiAgLy8g5L+d55WZ55S15a2Q5p2f6L2o6L+55rOi5b2i77yM6L+Z5Lqb5pa55rOV5LiN5YaN6ZyA6KaBXHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5pi+56S6L+makOiXj+azouW9oiAtIOS/neeVmeatpOaWueazleS7pemBv+WFjeiwg+eUqOmUmeivr++8jOS9huS4jeaJp+ihjOS7u+S9leaTjeS9nFxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gc2hvdyAtIOaYr+WQpuaYvuekuuazouW9olxyXG4gICAqL1xyXG4gIHNob3dXYXZlZm9ybShzaG93KSB7XHJcbiAgICAvLyDpnZnmgIHms6LlvaLlt7Lnp7vpmaTvvIzmraTmlrnms5Xkv53nlZnkuLrnqbrku6Xpgb/lhY3osIPnlKjplJnor69cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDorr7nva7ms6LlvaLnsbvlnosgLSDkv53nlZnmraTmlrnms5Xku6Xpgb/lhY3osIPnlKjplJnor6/vvIzkvYbkuI3miafooYzku7vkvZXmk43kvZxcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZSAtIOazouW9ouexu+Wei1xyXG4gICAqL1xyXG4gIHNldFdhdmVmb3JtVHlwZSh0eXBlKSB7XHJcbiAgICAvLyDpnZnmgIHms6LlvaLlt7Lnp7vpmaTvvIzmraTmlrnms5Xkv53nlZnkuLrnqbrku6Xpgb/lhY3osIPnlKjplJnor69cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDorr7nva7popHnjocgLSDkv53nlZnmraTmlrnms5Xku6Xpgb/lhY3osIPnlKjplJnor6/vvIzkvYbkuI3miafooYzku7vkvZXmk43kvZxcclxuICAgKiBAcGFyYW0ge251bWJlcn0gZnJlcXVlbmN5IC0g6aKR546H5YC8XHJcbiAgICovXHJcbiAgc2V0RnJlcXVlbmN5KGZyZXF1ZW5jeSkge1xyXG4gICAgLy8g6Z2Z5oCB5rOi5b2i5bey56e76Zmk77yM5q2k5pa55rOV5L+d55WZ5Li656m65Lul6YG/5YWN6LCD55So6ZSZ6K+vXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog6K6+572u5oyv5bmFIC0g5L+d55WZ5q2k5pa55rOV5Lul6YG/5YWN6LCD55So6ZSZ6K+v77yM5L2G5LiN5omn6KGM5Lu75L2V5pON5L2cXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGFtcGxpdHVkZSAtIOaMr+W5heWAvFxyXG4gICAqL1xyXG4gIHNldEFtcGxpdHVkZShhbXBsaXR1ZGUpIHtcclxuICAgIC8vIOmdmeaAgeazouW9ouW3suenu+mZpO+8jOatpOaWueazleS/neeVmeS4uuepuuS7pemBv+WFjeiwg+eUqOmUmeivr1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOiuvue9ruebuOS9jSAtIOS/neeVmeatpOaWueazleS7pemBv+WFjeiwg+eUqOmUmeivr++8jOS9huS4jeaJp+ihjOS7u+S9leaTjeS9nFxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwaGFzZSAtIOebuOS9jeWAvO+8iOW8p+W6pu+8iVxyXG4gICAqL1xyXG4gIHNldFBoYXNlKHBoYXNlKSB7XHJcbiAgICAvLyDpnZnmgIHms6LlvaLlt7Lnp7vpmaTvvIzmraTmlrnms5Xkv53nlZnkuLrnqbrku6Xpgb/lhY3osIPnlKjplJnor69cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDlvIDlp4vms6LlvaLliqjnlLsgLSDkv53nlZnmraTmlrnms5Xku6Xpgb/lhY3osIPnlKjplJnor6/vvIzkvYbkuI3miafooYzku7vkvZXmk43kvZxcclxuICAgKi9cclxuICBzdGFydFdhdmVmb3JtQW5pbWF0aW9uKCkge1xyXG4gICAgLy8g6Z2Z5oCB5rOi5b2i5bey56e76Zmk77yM5q2k5pa55rOV5L+d55WZ5Li656m65Lul6YG/5YWN6LCD55So6ZSZ6K+vXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5YGc5q2i5rOi5b2i5Yqo55S7IC0g5L+d55WZ5q2k5pa55rOV5Lul6YG/5YWN6LCD55So6ZSZ6K+v77yM5L2G5LiN5omn6KGM5Lu75L2V5pON5L2cXHJcbiAgICovXHJcbiAgc3RvcFdhdmVmb3JtQW5pbWF0aW9uKCkge1xyXG4gICAgLy8g6Z2Z5oCB5rOi5b2i5bey56e76Zmk77yM5q2k5pa55rOV5L+d55WZ5Li656m65Lul6YG/5YWN6LCD55So6ZSZ6K+vXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcbn0gIiwiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xyXG5pbXBvcnQgeyBDU1MyRFJlbmRlcmVyLCBDU1MyRE9iamVjdCB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9yZW5kZXJlcnMvQ1NTMkRSZW5kZXJlci5qcyc7XHJcbmltcG9ydCB7IENPTkZJRyB9IGZyb20gJy4uL2NvbmZpZ0xvYWRlci5qcyc7XHJcblxyXG4vKipcclxuICog5qCH562+57O757uf57G7XHJcbiAqIOi0n+i0o+euoeeQhuWSjOa4suafkzNE5Zy65pmv5Lit55qE5qCH562+XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgTGFiZWxTeXN0ZW0ge1xyXG4gIC8qKlxyXG4gICAqIOaehOmAoOWHveaVsFxyXG4gICAqIEBwYXJhbSB7VEhSRUUuU2NlbmV9IHNjZW5lIC0gVGhyZWUuanPlnLrmma9cclxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb250YWluZXIgLSDlrrnlmajlhYPntKBcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihzY2VuZSwgY29udGFpbmVyKSB7XHJcbiAgICB0aGlzLnNjZW5lID0gc2NlbmU7XHJcbiAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcclxuICAgIHRoaXMubGFiZWxzID0gbmV3IE1hcCgpOyAvLyDlrZjlgqjmoIfnrb7lr7nosaFcclxuICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlOyAvLyDpu5jorqTpmpDol4/moIfnrb5cclxuICAgIFxyXG4gICAgLy8g5Yid5aeL5YyWQ1NTMkTmuLLmn5PlmahcclxuICAgIHRoaXMuaW5pdFJlbmRlcmVyKCk7XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCdMYWJlbFN5c3RlbeWIneWni+WMluWujOaIkCcpO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDliJ3lp4vljJZDU1MyROa4suafk+WZqFxyXG4gICAqL1xyXG4gIGluaXRSZW5kZXJlcigpIHtcclxuICAgIHRoaXMubGFiZWxSZW5kZXJlciA9IG5ldyBDU1MyRFJlbmRlcmVyKCk7XHJcbiAgICB0aGlzLmxhYmVsUmVuZGVyZXIuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcclxuICAgIHRoaXMubGFiZWxSZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuICAgIHRoaXMubGFiZWxSZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLnRvcCA9ICcwJztcclxuICAgIHRoaXMubGFiZWxSZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnbm9uZSc7XHJcbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLmxhYmVsUmVuZGVyZXIuZG9tRWxlbWVudCk7XHJcbiAgICBcclxuICAgIC8vIOm7mOiupOmakOiXj1xyXG4gICAgdGhpcy5sYWJlbFJlbmRlcmVyLmRvbUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5Yib5bu65qCH562+XHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlkIC0g5qCH562+SURcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCAtIOagh+etvuaWh+acrFxyXG4gICAqIEBwYXJhbSB7VEhSRUUuT2JqZWN0M0R9IHRhcmdldCAtIOagh+etvumZhOWKoOeahOebruagh+WvueixoVxyXG4gICAqIEBwYXJhbSB7VEhSRUUuVmVjdG9yM30gb2Zmc2V0IC0g5qCH562+55u45a+55LqO55uu5qCH55qE5YGP56e76YePXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRlc2NyaXB0aW9uIC0g5qCH562+5o+P6L+w77yI5Y+v6YCJ77yJXHJcbiAgICovXHJcbiAgY3JlYXRlTGFiZWwoaWQsIHRleHQsIHRhcmdldCwgb2Zmc2V0ID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMC41LCAwKSwgZGVzY3JpcHRpb24gPSAnJykge1xyXG4gICAgLy8g5Yib5bu65qCH562+5YWD57SgXHJcbiAgICBjb25zdCBsYWJlbERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbGFiZWxEaXYuY2xhc3NOYW1lID0gJ2xhYmVsJztcclxuICAgIGxhYmVsRGl2LnRleHRDb250ZW50ID0gdGV4dDtcclxuICAgIGxhYmVsRGl2LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IENPTkZJRy5sYWJlbFN5c3RlbS5iYWNrZ3JvdW5kQ29sb3I7XHJcbiAgICBsYWJlbERpdi5zdHlsZS5jb2xvciA9IENPTkZJRy5sYWJlbFN5c3RlbS5jb2xvcjtcclxuICAgIGxhYmVsRGl2LnN0eWxlLnBhZGRpbmcgPSBDT05GSUcubGFiZWxTeXN0ZW0ucGFkZGluZztcclxuICAgIGxhYmVsRGl2LnN0eWxlLmJvcmRlclJhZGl1cyA9IENPTkZJRy5sYWJlbFN5c3RlbS5ib3JkZXJSYWRpdXM7XHJcbiAgICBsYWJlbERpdi5zdHlsZS5mb250U2l6ZSA9IENPTkZJRy5sYWJlbFN5c3RlbS5mb250U2l6ZTtcclxuICAgIGxhYmVsRGl2LnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnYXV0byc7XHJcbiAgICBsYWJlbERpdi5zdHlsZS5jdXJzb3IgPSAncG9pbnRlcic7XHJcbiAgICBcclxuICAgIC8vIOWIm+W7ukNTUzJE5a+56LGhXHJcbiAgICBjb25zdCBsYWJlbE9iamVjdCA9IG5ldyBDU1MyRE9iamVjdChsYWJlbERpdik7XHJcbiAgICBsYWJlbE9iamVjdC5wb3NpdGlvbi5jb3B5KG9mZnNldCk7XHJcbiAgICBcclxuICAgIC8vIOWwhuagh+etvua3u+WKoOWIsOebruagh+WvueixoVxyXG4gICAgdGFyZ2V0LmFkZChsYWJlbE9iamVjdCk7XHJcbiAgICBcclxuICAgIC8vIOWtmOWCqOagh+etvuS/oeaBr1xyXG4gICAgdGhpcy5sYWJlbHMuc2V0KGlkLCB7XHJcbiAgICAgIG9iamVjdDogbGFiZWxPYmplY3QsXHJcbiAgICAgIGVsZW1lbnQ6IGxhYmVsRGl2LFxyXG4gICAgICB0YXJnZXQ6IHRhcmdldCxcclxuICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgLy8g5re75Yqg54K55Ye75LqL5Lu2XHJcbiAgICBpZiAoZGVzY3JpcHRpb24pIHtcclxuICAgICAgbGFiZWxEaXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5zaG93RGVzY3JpcHRpb24oaWQpO1xyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIC8vIOa3u+WKoOaPkOekulxyXG4gICAgICBsYWJlbERpdi50aXRsZSA9ICfngrnlh7vmn6XnnIvor6bmg4UnO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICByZXR1cm4gbGFiZWxPYmplY3Q7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOaYvuekuuagh+etvuaPj+i/sFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZCAtIOagh+etvklEXHJcbiAgICovXHJcbiAgc2hvd0Rlc2NyaXB0aW9uKGlkKSB7XHJcbiAgICBjb25zdCBsYWJlbCA9IHRoaXMubGFiZWxzLmdldChpZCk7XHJcbiAgICBpZiAoIWxhYmVsIHx8ICFsYWJlbC5kZXNjcmlwdGlvbikgcmV0dXJuO1xyXG4gICAgXHJcbiAgICAvLyDliJvlu7rmiJbmm7TmlrDmj4/ov7DpnaLmnb9cclxuICAgIGxldCBkZXNjUGFuZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGFiZWwtZGVzY3JpcHRpb24tcGFuZWwnKTtcclxuICAgIGlmICghZGVzY1BhbmVsKSB7XHJcbiAgICAgIGRlc2NQYW5lbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICBkZXNjUGFuZWwuaWQgPSAnbGFiZWwtZGVzY3JpcHRpb24tcGFuZWwnO1xyXG4gICAgICBkZXNjUGFuZWwuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG4gICAgICBkZXNjUGFuZWwuc3R5bGUuYm90dG9tID0gQ09ORklHLmxhYmVsU3lzdGVtLmRlc2NyaXB0aW9uUGFuZWwucG9zaXRpb24uYm90dG9tO1xyXG4gICAgICBkZXNjUGFuZWwuc3R5bGUubGVmdCA9IENPTkZJRy5sYWJlbFN5c3RlbS5kZXNjcmlwdGlvblBhbmVsLnBvc2l0aW9uLmxlZnQ7XHJcbiAgICAgIGRlc2NQYW5lbC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBDT05GSUcubGFiZWxTeXN0ZW0uZGVzY3JpcHRpb25QYW5lbC5iYWNrZ3JvdW5kQ29sb3I7XHJcbiAgICAgIGRlc2NQYW5lbC5zdHlsZS5jb2xvciA9ICd3aGl0ZSc7XHJcbiAgICAgIGRlc2NQYW5lbC5zdHlsZS5wYWRkaW5nID0gJzE1cHgnO1xyXG4gICAgICBkZXNjUGFuZWwuc3R5bGUuYm9yZGVyUmFkaXVzID0gJzVweCc7XHJcbiAgICAgIGRlc2NQYW5lbC5zdHlsZS5tYXhXaWR0aCA9IENPTkZJRy5sYWJlbFN5c3RlbS5kZXNjcmlwdGlvblBhbmVsLm1heFdpZHRoO1xyXG4gICAgICBkZXNjUGFuZWwuc3R5bGUuekluZGV4ID0gQ09ORklHLmxhYmVsU3lzdGVtLmRlc2NyaXB0aW9uUGFuZWwuekluZGV4O1xyXG4gICAgICBkZXNjUGFuZWwuc3R5bGUudHJhbnNpdGlvbiA9ICdvcGFjaXR5IDAuM3MnO1xyXG4gICAgICBkZXNjUGFuZWwuc3R5bGUuYm94U2hhZG93ID0gJzAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KSc7XHJcbiAgICAgIFxyXG4gICAgICAvLyDmt7vliqDlhbPpl63mjInpkq5cclxuICAgICAgY29uc3QgY2xvc2VCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgY2xvc2VCdG4udGV4dENvbnRlbnQgPSAnw5cnO1xyXG4gICAgICBjbG9zZUJ0bi5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgICAgIGNsb3NlQnRuLnN0eWxlLnRvcCA9ICc1cHgnO1xyXG4gICAgICBjbG9zZUJ0bi5zdHlsZS5yaWdodCA9ICc1cHgnO1xyXG4gICAgICBjbG9zZUJ0bi5zdHlsZS5iYWNrZ3JvdW5kID0gJ25vbmUnO1xyXG4gICAgICBjbG9zZUJ0bi5zdHlsZS5ib3JkZXIgPSAnbm9uZSc7XHJcbiAgICAgIGNsb3NlQnRuLnN0eWxlLmNvbG9yID0gJ3doaXRlJztcclxuICAgICAgY2xvc2VCdG4uc3R5bGUuZm9udFNpemUgPSAnMjBweCc7XHJcbiAgICAgIGNsb3NlQnRuLnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJztcclxuICAgICAgY2xvc2VCdG4ub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICBkZXNjUGFuZWwuc3R5bGUub3BhY2l0eSA9ICcwJztcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgIGlmIChkZXNjUGFuZWwucGFyZW50Tm9kZSkge1xyXG4gICAgICAgICAgICBkZXNjUGFuZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkZXNjUGFuZWwpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sIDMwMCk7XHJcbiAgICAgIH07XHJcbiAgICAgIFxyXG4gICAgICBkZXNjUGFuZWwuYXBwZW5kQ2hpbGQoY2xvc2VCdG4pO1xyXG4gICAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZChkZXNjUGFuZWwpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyDorr7nva7moIfpopjlkozmj4/ov7BcclxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcclxuICAgIHRpdGxlLnRleHRDb250ZW50ID0gbGFiZWwuZWxlbWVudC50ZXh0Q29udGVudDtcclxuICAgIHRpdGxlLnN0eWxlLm1hcmdpbiA9ICcwIDAgMTBweCAwJztcclxuICAgIFxyXG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGRlc2NyaXB0aW9uLmlubmVySFRNTCA9IGxhYmVsLmRlc2NyaXB0aW9uO1xyXG4gICAgXHJcbiAgICAvLyDmuIXpmaTml6flhoXlrrlcclxuICAgIHdoaWxlIChkZXNjUGFuZWwuZmlyc3RDaGlsZCkge1xyXG4gICAgICBpZiAoZGVzY1BhbmVsLmZpcnN0Q2hpbGQudGFnTmFtZSAhPT0gJ0JVVFRPTicpIHtcclxuICAgICAgICBkZXNjUGFuZWwucmVtb3ZlQ2hpbGQoZGVzY1BhbmVsLmZpcnN0Q2hpbGQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGRlc2NQYW5lbC5hcHBlbmRDaGlsZCh0aXRsZSk7XHJcbiAgICBkZXNjUGFuZWwuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb24pO1xyXG4gICAgZGVzY1BhbmVsLnN0eWxlLm9wYWNpdHkgPSAnMSc7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOiuvue9ruagh+etvuWPr+ingeaAp1xyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gdmlzaWJsZSAtIOaYr+WQpuWPr+ingVxyXG4gICAqL1xyXG4gIHNldFZpc2libGUodmlzaWJsZSkge1xyXG4gICAgdGhpcy52aXNpYmxlID0gdmlzaWJsZTtcclxuICAgIHRoaXMubGFiZWxSZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLmRpc3BsYXkgPSB2aXNpYmxlID8gJ2Jsb2NrJyA6ICdub25lJztcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5pu05paw5qCH562+5L2N572u5ZKM5aSn5bCPXHJcbiAgICogQHBhcmFtIHtUSFJFRS5DYW1lcmF9IGNhbWVyYSAtIOebuOaculxyXG4gICAqL1xyXG4gIHVwZGF0ZShjYW1lcmEpIHtcclxuICAgIGlmICh0aGlzLnZpc2libGUpIHtcclxuICAgICAgdGhpcy5sYWJlbFJlbmRlcmVyLnJlbmRlcih0aGlzLnNjZW5lLCBjYW1lcmEpO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDosIPmlbTmoIfnrb7muLLmn5PlmajlpKflsI9cclxuICAgKiBAcGFyYW0ge251bWJlcn0gd2lkdGggLSDlrr3luqZcclxuICAgKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0IC0g6auY5bqmXHJcbiAgICovXHJcbiAgcmVzaXplKHdpZHRoLCBoZWlnaHQpIHtcclxuICAgIHRoaXMubGFiZWxSZW5kZXJlci5zZXRTaXplKHdpZHRoLCBoZWlnaHQpO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDnp7vpmaTmoIfnrb5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgLSDmoIfnrb5JRFxyXG4gICAqL1xyXG4gIHJlbW92ZUxhYmVsKGlkKSB7XHJcbiAgICBjb25zdCBsYWJlbCA9IHRoaXMubGFiZWxzLmdldChpZCk7XHJcbiAgICBpZiAobGFiZWwpIHtcclxuICAgICAgbGFiZWwudGFyZ2V0LnJlbW92ZShsYWJlbC5vYmplY3QpO1xyXG4gICAgICB0aGlzLmxhYmVscy5kZWxldGUoaWQpO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDnp7vpmaTmiYDmnInmoIfnrb5cclxuICAgKi9cclxuICByZW1vdmVBbGxMYWJlbHMoKSB7XHJcbiAgICB0aGlzLmxhYmVscy5mb3JFYWNoKChsYWJlbCwgaWQpID0+IHtcclxuICAgICAgbGFiZWwudGFyZ2V0LnJlbW92ZShsYWJlbC5vYmplY3QpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLmxhYmVscy5jbGVhcigpO1xyXG4gIH1cclxufSAiLCJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgKiBhcyBUV0VFTiBmcm9tICdAdHdlZW5qcy90d2Vlbi5qcyc7XG5pbXBvcnQgeyBDT05GSUcgfSBmcm9tICcuLi9jb25maWdMb2FkZXIuanMnO1xuaW1wb3J0IHsgdHdlZW5Hcm91cCB9IGZyb20gJy4uL21haW4uanMnO1xuXG4vKipcbiAqIOWIhuino+inhuWbvuexu1xuICog6LSf6LSj5aSE55CG5qih5Z6L55qE5YiG6Kej6KeG5Zu+5pWI5p6cXG4gKi9cbmV4cG9ydCBjbGFzcyBFeHBsb2RlZFZpZXcge1xuICAvKipcbiAgICog5p6E6YCg5Ye95pWwXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjb21wb25lbnRzIC0g57uE5Lu25a+56LGh6ZuG5ZCIXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihjb21wb25lbnRzKSB7XG4gICAgdGhpcy5jb21wb25lbnRzID0gY29tcG9uZW50cztcbiAgICB0aGlzLm9yaWdpbmFsUG9zaXRpb25zID0gbmV3IE1hcCgpO1xuICAgIHRoaXMuZXhwbG9kZWQgPSBmYWxzZTtcbiAgICB0aGlzLmV4cGxvZGVGYWN0b3IgPSBDT05GSUcuZXhwbG9kZWRWaWV3LmV4cGxvZGVGYWN0b3I7XG4gICAgdGhpcy50d2VlbnMgPSBbXTtcbiAgICBcbiAgICAvLyDkuLvopoHnu4Tku7bliJfooajvvIjku4XnlKjkuo7ogZrnhKbvvIzkuI3lj4LkuI7liIbop6PliqjnlLvvvIlcbiAgICB0aGlzLmZvY3VzT25seUNvbXBvbmVudHMgPSBbJ2d1bicsICdndW5IZWFkJywgJ3YxJywgJ3YyJywgJ2gxJywgJ2gyJywgJ3NjcmVlbiddO1xuICAgIFxuICAgIC8vIOS/neWtmOWOn+Wni+S9jee9rlxuICAgIHRoaXMuc2F2ZU9yaWdpbmFsUG9zaXRpb25zKCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDkv53lrZjmiYDmnInnu4Tku7bnmoTljp/lp4vkvY3nva5cbiAgICovXG4gIHNhdmVPcmlnaW5hbFBvc2l0aW9ucygpIHtcbiAgICBPYmplY3QuZW50cmllcyh0aGlzLmNvbXBvbmVudHMpLmZvckVhY2goKFtrZXksIG9iamVjdF0pID0+IHtcbiAgICAgIC8vIOi3s+i/h+S7heeUqOS6juiBmueEpueahOe7hOS7tlxuICAgICAgaWYgKHRoaXMuZm9jdXNPbmx5Q29tcG9uZW50cy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKG9iamVjdCAmJiBvYmplY3QucG9zaXRpb24pIHtcbiAgICAgICAgdGhpcy5vcmlnaW5hbFBvc2l0aW9ucy5zZXQoa2V5LCBvYmplY3QucG9zaXRpb24uY2xvbmUoKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDmt7vliqDnu4Tku7ZcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIOe7hOS7tumUruWQjVxuICAgKiBAcGFyYW0ge1RIUkVFLk9iamVjdDNEfSBvYmplY3QgLSDnu4Tku7blr7nosaFcbiAgICovXG4gIGFkZENvbXBvbmVudChrZXksIG9iamVjdCkge1xuICAgIHRoaXMuY29tcG9uZW50c1trZXldID0gb2JqZWN0O1xuICAgIFxuICAgIC8vIOi3s+i/h+S7heeUqOS6juiBmueEpueahOe7hOS7tu+8jOS4jeS/neWtmOWFtuWOn+Wni+S9jee9rlxuICAgIGlmICghdGhpcy5mb2N1c09ubHlDb21wb25lbnRzLmluY2x1ZGVzKGtleSkgJiYgb2JqZWN0ICYmIG9iamVjdC5wb3NpdGlvbikge1xuICAgICAgdGhpcy5vcmlnaW5hbFBvc2l0aW9ucy5zZXQoa2V5LCBvYmplY3QucG9zaXRpb24uY2xvbmUoKSk7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog6K6h566X57uE5Lu255qE5YiG6Kej5L2N572uXG4gICAqIEBwYXJhbSB7VEhSRUUuVmVjdG9yM30gb3JpZ2luYWxQb3NpdGlvbiAtIOWOn+Wni+S9jee9rlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29tcG9uZW50S2V5IC0g57uE5Lu26ZSu5ZCNXG4gICAqIEByZXR1cm5zIHtUSFJFRS5WZWN0b3IzfSDliIbop6PlkI7nmoTkvY3nva5cbiAgICovXG4gIGNhbGN1bGF0ZUV4cGxvZGVkUG9zaXRpb24ob3JpZ2luYWxQb3NpdGlvbiwgY29tcG9uZW50S2V5KSB7XG4gICAgLy8g5a6a5LmJ5ZCE57uE5Lu255qE5YiG6Kej5pa55ZCRXG4gICAgY29uc3QgZGlyZWN0aW9ucyA9IHtcbiAgICAgICdndW4nOiBuZXcgVEhSRUUuVmVjdG9yMygtMSwgMCwgMCksXG4gICAgICAnZ3VuSGVhZCc6IG5ldyBUSFJFRS5WZWN0b3IzKC0xLCAwLCAwKSxcbiAgICAgICd2MSc6IG5ldyBUSFJFRS5WZWN0b3IzKDAsIDEsIDApLFxuICAgICAgJ3YyJzogbmV3IFRIUkVFLlZlY3RvcjMoMCwgLTEsIDApLFxuICAgICAgJ2gxJzogbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMSksXG4gICAgICAnaDInOiBuZXcgVEhSRUUuVmVjdG9yMygwLCAwLCAtMSksXG4gICAgICAnc2NyZWVuJzogbmV3IFRIUkVFLlZlY3RvcjMoMSwgMCwgMClcbiAgICB9O1xuICAgIFxuICAgIC8vIOiOt+WPluWIhuino+aWueWQke+8jOWmguaenOayoeacieWumuS5ieWImeS9v+eUqOm7mOiupOaWueWQke+8iOWQkeWklu+8iVxuICAgIGxldCBkaXJlY3Rpb247XG4gICAgaWYgKGRpcmVjdGlvbnNbY29tcG9uZW50S2V5XSkge1xuICAgICAgZGlyZWN0aW9uID0gZGlyZWN0aW9uc1tjb21wb25lbnRLZXldO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyDpu5jorqTmlrnlkJHvvJrku47ljp/ngrnliLDnu4Tku7bnmoTmlrnlkJFcbiAgICAgIGRpcmVjdGlvbiA9IG9yaWdpbmFsUG9zaXRpb24uY2xvbmUoKS5ub3JtYWxpemUoKTtcbiAgICAgIGlmIChkaXJlY3Rpb24ubGVuZ3RoKCkgPT09IDApIHtcbiAgICAgICAgZGlyZWN0aW9uLnNldCgxLCAwLCAwKTsgLy8g6buY6K6kWOi9tOaWueWQkVxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyDorqHnrpfliIbop6PlkI7nmoTkvY3nva5cbiAgICByZXR1cm4gb3JpZ2luYWxQb3NpdGlvbi5jbG9uZSgpLmFkZChcbiAgICAgIGRpcmVjdGlvbi5tdWx0aXBseVNjYWxhcih0aGlzLmV4cGxvZGVGYWN0b3IpXG4gICAgKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOWIh+aNouWIhuino+inhuWbvlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGV4cGxvZGUgLSDmmK/lkKbliIbop6NcbiAgICogQHBhcmFtIHtudW1iZXJ9IGR1cmF0aW9uIC0g5Yqo55S75oyB57ut5pe26Ze077yI5q+r56eS77yJXG4gICAqL1xuICB0b2dnbGUoZXhwbG9kZSA9ICF0aGlzLmV4cGxvZGVkLCBkdXJhdGlvbiA9IENPTkZJRy5leHBsb2RlZFZpZXcuYW5pbWF0aW9uRHVyYXRpb24pIHtcbiAgICB0aGlzLmV4cGxvZGVkID0gZXhwbG9kZTtcbiAgICBcbiAgICAvLyDlgZzmraLmiYDmnInmraPlnKjov5vooYznmoTliqjnlLtcbiAgICB0aGlzLnR3ZWVucy5mb3JFYWNoKHR3ZWVuID0+IHR3ZWVuLnN0b3AoKSk7XG4gICAgdGhpcy50d2VlbnMgPSBbXTtcbiAgICBcbiAgICAvLyDkuLrmr4/kuKrnu4Tku7bliJvlu7rliqjnlLtcbiAgICBPYmplY3QuZW50cmllcyh0aGlzLmNvbXBvbmVudHMpLmZvckVhY2goKFtrZXksIG9iamVjdF0pID0+IHtcbiAgICAgIC8vIOi3s+i/h+S7heeUqOS6juiBmueEpueahOe7hOS7tlxuICAgICAgaWYgKHRoaXMuZm9jdXNPbmx5Q29tcG9uZW50cy5pbmNsdWRlcyhrZXkpKSByZXR1cm47XG4gICAgICBcbiAgICAgIGlmICghb2JqZWN0IHx8ICFvYmplY3QucG9zaXRpb24pIHJldHVybjtcbiAgICAgIFxuICAgICAgY29uc3Qgb3JpZ2luYWxQb3NpdGlvbiA9IHRoaXMub3JpZ2luYWxQb3NpdGlvbnMuZ2V0KGtleSk7XG4gICAgICBpZiAoIW9yaWdpbmFsUG9zaXRpb24pIHJldHVybjtcbiAgICAgIFxuICAgICAgY29uc3QgdGFyZ2V0UG9zaXRpb24gPSBleHBsb2RlIFxuICAgICAgICA/IHRoaXMuY2FsY3VsYXRlRXhwbG9kZWRQb3NpdGlvbihvcmlnaW5hbFBvc2l0aW9uLCBrZXkpXG4gICAgICAgIDogb3JpZ2luYWxQb3NpdGlvbi5jbG9uZSgpO1xuICAgICAgXG4gICAgICAvLyDliJvlu7rkvY3nva7liqjnlLtcbiAgICAgIGNvbnN0IHR3ZWVuID0gbmV3IFRXRUVOLlR3ZWVuKG9iamVjdC5wb3NpdGlvbiwgdHdlZW5Hcm91cClcbiAgICAgICAgLnRvKHtcbiAgICAgICAgICB4OiB0YXJnZXRQb3NpdGlvbi54LFxuICAgICAgICAgIHk6IHRhcmdldFBvc2l0aW9uLnksXG4gICAgICAgICAgejogdGFyZ2V0UG9zaXRpb24uelxuICAgICAgICB9LCBkdXJhdGlvbilcbiAgICAgICAgLmVhc2luZyhUV0VFTi5FYXNpbmcuUXVhZHJhdGljLkluT3V0KVxuICAgICAgICAuc3RhcnQoKTtcbiAgICAgIFxuICAgICAgdGhpcy50d2VlbnMucHVzaCh0d2Vlbik7XG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHRoaXMuZXhwbG9kZWQ7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDogZrnhKbliLDnibnlrprnu4Tku7ZcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudEtleSAtIOe7hOS7tumUruWQjVxuICAgKiBAcGFyYW0ge1RIUkVFLkNhbWVyYX0gY2FtZXJhIC0g55u45py6XG4gICAqIEBwYXJhbSB7VEhSRUUuQ29udHJvbHN9IGNvbnRyb2xzIC0g5o6n5Yi25ZmoXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvbiAtIOWKqOeUu+aMgee7reaXtumXtO+8iOavq+enku+8iVxuICAgKi9cbiAgZm9jdXNDb21wb25lbnQoY29tcG9uZW50S2V5LCBjYW1lcmEsIGNvbnRyb2xzLCBkdXJhdGlvbiA9IDEwMDApIHtcbiAgICBjb25zb2xlLmxvZygnRXhwbG9kZWRWaWV3LmZvY3VzQ29tcG9uZW506KKr6LCD55SoJyk7XG4gICAgY29uc29sZS5sb2coJ2NvbXBvbmVudEtleTonLCBjb21wb25lbnRLZXkpO1xuICAgIGNvbnNvbGUubG9nKCd0aGlzLmNvbXBvbmVudHM6JywgdGhpcy5jb21wb25lbnRzKTtcbiAgICBjb25zb2xlLmxvZygnY2FtZXJhOicsIGNhbWVyYSk7XG4gICAgY29uc29sZS5sb2coJ2NvbnRyb2xzOicsIGNvbnRyb2xzKTtcbiAgICBcbiAgICBjb25zdCBjb21wb25lbnQgPSB0aGlzLmNvbXBvbmVudHNbY29tcG9uZW50S2V5XTtcbiAgICBjb25zb2xlLmxvZygn5om+5Yiw55qE57uE5Lu2OicsIGNvbXBvbmVudCk7XG4gICAgXG4gICAgaWYgKCFjb21wb25lbnQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+e7hOS7tuacquaJvuWIsDonLCBjb21wb25lbnRLZXkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyDorqHnrpfnm67moIfkvY3nva7vvIjnu4Tku7bkvY3nva4gKyDlgY/np7vvvIlcbiAgICBjb25zdCB0YXJnZXRQb3NpdGlvbiA9IGNvbXBvbmVudC5wb3NpdGlvbi5jbG9uZSgpO1xuICAgIGNvbnN0IG9mZnNldCA9IG5ldyBUSFJFRS5WZWN0b3IzKFxuICAgICAgQ09ORklHLmV4cGxvZGVkVmlldy5jYW1lcmFPZmZzZXQueCxcbiAgICAgIENPTkZJRy5leHBsb2RlZFZpZXcuY2FtZXJhT2Zmc2V0LnksXG4gICAgICBDT05GSUcuZXhwbG9kZWRWaWV3LmNhbWVyYU9mZnNldC56XG4gICAgKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZygn57uE5Lu25L2N572uOicsIHRhcmdldFBvc2l0aW9uKTtcbiAgICBjb25zb2xlLmxvZygn55u45py65YGP56e7OicsIG9mZnNldCk7XG4gICAgY29uc29sZS5sb2coJ+ebruagh+ebuOacuuS9jee9rjonLCB7XG4gICAgICB4OiB0YXJnZXRQb3NpdGlvbi54ICsgb2Zmc2V0LngsXG4gICAgICB5OiB0YXJnZXRQb3NpdGlvbi55ICsgb2Zmc2V0LnksXG4gICAgICB6OiB0YXJnZXRQb3NpdGlvbi56ICsgb2Zmc2V0LnpcbiAgICB9KTtcbiAgICBcbiAgICAvLyDliJvlu7rnm7jmnLrkvY3nva7liqjnlLtcbiAgICBjb25zdCBwb3NUd2VlbiA9IG5ldyBUV0VFTi5Ud2VlbihjYW1lcmEucG9zaXRpb24sIHR3ZWVuR3JvdXApXG4gICAgICAudG8oe1xuICAgICAgICB4OiB0YXJnZXRQb3NpdGlvbi54ICsgb2Zmc2V0LngsXG4gICAgICAgIHk6IHRhcmdldFBvc2l0aW9uLnkgKyBvZmZzZXQueSxcbiAgICAgICAgejogdGFyZ2V0UG9zaXRpb24ueiArIG9mZnNldC56XG4gICAgICB9LCBkdXJhdGlvbilcbiAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLkN1YmljLkluT3V0KVxuICAgICAgLnN0YXJ0KCk7XG4gICAgXG4gICAgLy8g5Yib5bu65o6n5Yi25Zmo55uu5qCH54K55Yqo55S7XG4gICAgY29uc3QgdGFyZ2V0VHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4oY29udHJvbHMudGFyZ2V0LCB0d2Vlbkdyb3VwKVxuICAgICAgLnRvKHtcbiAgICAgICAgeDogdGFyZ2V0UG9zaXRpb24ueCxcbiAgICAgICAgeTogdGFyZ2V0UG9zaXRpb24ueSxcbiAgICAgICAgejogdGFyZ2V0UG9zaXRpb24uelxuICAgICAgfSwgZHVyYXRpb24pXG4gICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5DdWJpYy5Jbk91dClcbiAgICAgIC5zdGFydCgpO1xuICAgIFxuICAgIHRoaXMudHdlZW5zLnB1c2gocG9zVHdlZW4sIHRhcmdldFR3ZWVuKTtcbiAgICBjb25zb2xlLmxvZygn5Yqo55S75bey5Yib5bu65bm25re75Yqg5YiwdHdlZW5z5pWw57uE77yM5b2T5YmNdHdlZW5z5pWw6YePOicsIHRoaXMudHdlZW5zLmxlbmd0aCk7XG4gICAgXG4gICAgLy8g5aaC5p6c5Yqo55S75rKh5pyJ56uL5Y2z5byA5aeL77yM5by65Yi256e75Yqo55u45py6XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAoY2FtZXJhLnBvc2l0aW9uLmRpc3RhbmNlVG8obmV3IFRIUkVFLlZlY3RvcjMoXG4gICAgICAgIHRhcmdldFBvc2l0aW9uLnggKyBvZmZzZXQueCxcbiAgICAgICAgdGFyZ2V0UG9zaXRpb24ueSArIG9mZnNldC55LFxuICAgICAgICB0YXJnZXRQb3NpdGlvbi56ICsgb2Zmc2V0LnpcbiAgICAgICkpID4gMC4xKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfliqjnlLvlj6/og73msqHmnInmraPluLjlt6XkvZzvvIzlvLrliLbnp7vliqjnm7jmnLonKTtcbiAgICAgICAgdGhpcy5mb3JjZU1vdmVDYW1lcmEoY2FtZXJhLCBjb250cm9scywgdGFyZ2V0UG9zaXRpb24sIG9mZnNldCk7XG4gICAgICB9XG4gICAgfSwgMTAwKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOW8uuWItuenu+WKqOebuOacuu+8iOWkh+mAieaWueahiO+8iVxuICAgKi9cbiAgZm9yY2VNb3ZlQ2FtZXJhKGNhbWVyYSwgY29udHJvbHMsIHRhcmdldFBvc2l0aW9uLCBvZmZzZXQpIHtcbiAgICBjb25zb2xlLmxvZygn5omn6KGM5by65Yi256e75YqoJyk7XG4gICAgXG4gICAgLy8g55u05o6l6K6+572u55u45py65L2N572uXG4gICAgY2FtZXJhLnBvc2l0aW9uLnNldChcbiAgICAgIHRhcmdldFBvc2l0aW9uLnggKyBvZmZzZXQueCxcbiAgICAgIHRhcmdldFBvc2l0aW9uLnkgKyBvZmZzZXQueSxcbiAgICAgIHRhcmdldFBvc2l0aW9uLnogKyBvZmZzZXQuelxuICAgICk7XG4gICAgXG4gICAgLy8g55u05o6l6K6+572u5o6n5Yi25Zmo55uu5qCH54K5XG4gICAgY29udHJvbHMudGFyZ2V0LnNldChcbiAgICAgIHRhcmdldFBvc2l0aW9uLngsXG4gICAgICB0YXJnZXRQb3NpdGlvbi55LFxuICAgICAgdGFyZ2V0UG9zaXRpb24uelxuICAgICk7XG4gICAgXG4gICAgLy8g5pu05paw5o6n5Yi25ZmoXG4gICAgY29udHJvbHMudXBkYXRlKCk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ+W8uuWItuenu+WKqOWujOaIkO+8jOebuOacuuS9jee9rjonLCBjYW1lcmEucG9zaXRpb24pO1xuICAgIGNvbnNvbGUubG9nKCfmjqfliLblmajnm67moIfngrk6JywgY29udHJvbHMudGFyZ2V0KTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOmHjee9ruinhuWbvlxuICAgKiBAcGFyYW0ge1RIUkVFLkNhbWVyYX0gY2FtZXJhIC0g55u45py6XG4gICAqIEBwYXJhbSB7VEhSRUUuQ29udHJvbHN9IGNvbnRyb2xzIC0g5o6n5Yi25ZmoXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvbiAtIOWKqOeUu+aMgee7reaXtumXtO+8iOavq+enku+8iVxuICAgKi9cbiAgcmVzZXRWaWV3KGNhbWVyYSwgY29udHJvbHMsIGR1cmF0aW9uID0gQ09ORklHLmV4cGxvZGVkVmlldy5hbmltYXRpb25EdXJhdGlvbikge1xuICAgIC8vIOmHjee9ruebuOacuuS9jee9rlxuICAgIGNvbnN0IHBvc1R3ZWVuID0gbmV3IFRXRUVOLlR3ZWVuKGNhbWVyYS5wb3NpdGlvbiwgdHdlZW5Hcm91cClcbiAgICAgIC50byh7IFxuICAgICAgICB4OiBDT05GSUcuY2FtZXJhLnBvc2l0aW9uLngsIFxuICAgICAgICB5OiBDT05GSUcuY2FtZXJhLnBvc2l0aW9uLnksIFxuICAgICAgICB6OiBDT05GSUcuY2FtZXJhLnBvc2l0aW9uLnogXG4gICAgICB9LCBkdXJhdGlvbilcbiAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLkN1YmljLkluT3V0KVxuICAgICAgLnN0YXJ0KCk7XG4gICAgXG4gICAgLy8g6YeN572u5o6n5Yi25Zmo55uu5qCH54K5XG4gICAgY29uc3QgdGFyZ2V0VHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4oY29udHJvbHMudGFyZ2V0LCB0d2Vlbkdyb3VwKVxuICAgICAgLnRvKHsgXG4gICAgICAgIHg6IENPTkZJRy5jYW1lcmEudGFyZ2V0LngsIFxuICAgICAgICB5OiBDT05GSUcuY2FtZXJhLnRhcmdldC55LCBcbiAgICAgICAgejogQ09ORklHLmNhbWVyYS50YXJnZXQueiBcbiAgICAgIH0sIGR1cmF0aW9uKVxuICAgICAgLmVhc2luZyhUV0VFTi5FYXNpbmcuQ3ViaWMuSW5PdXQpXG4gICAgICAuc3RhcnQoKTtcbiAgICBcbiAgICB0aGlzLnR3ZWVucy5wdXNoKHBvc1R3ZWVuLCB0YXJnZXRUd2Vlbik7XG4gICAgXG4gICAgLy8g5aaC5p6c5aSE5LqO5YiG6Kej54q25oCB77yM6YeN572u57uE5Lu25L2N572uXG4gICAgaWYgKHRoaXMuZXhwbG9kZWQpIHtcbiAgICAgIHRoaXMudG9nZ2xlKGZhbHNlLCBkdXJhdGlvbik7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog5pu05paw5Yqo55S7XG4gICAqL1xuICB1cGRhdGUoKSB7XG4gICAgLy8g5pu05paw5omA5pyJdHdlZW5zXG4gICAgdGhpcy50d2VlbnMuZm9yRWFjaCh0d2VlbiA9PiB7XG4gICAgICBpZiAodHdlZW4gJiYgdHdlZW4uaXNQbGF5aW5nKSB7XG4gICAgICAgIHR3ZWVuLnVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIC8vIOa4heeQhuW3suWujOaIkOeahHR3ZWVuc1xuICAgIHRoaXMudHdlZW5zID0gdGhpcy50d2VlbnMuZmlsdGVyKHR3ZWVuID0+IHR3ZWVuICYmIHR3ZWVuLmlzUGxheWluZyk7XG4gIH1cbn0gIiwiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xyXG5pbXBvcnQgeyBDT05GSUcgfSBmcm9tICcuLi9jb25maWdMb2FkZXInO1xyXG5cclxuLyoqXHJcbiAqIOeykuWtkOWvueixoeaxoOexu1xyXG4gKiDnlKjkuo7nrqHnkIbnlLXlrZDnspLlrZDnmoTliJvlu7rjgIHlpI3nlKjlkozlm57mlLbvvIzpgb/lhY3popHnuYHnmoTlhoXlrZjliIbphY3lkozlnoPlnL7lm57mlLZcclxuICog5pi+6JGX5o+Q5Y2H5Yqo55S75oCn6IO977yM54m55Yir5piv5Zyo5aSn6YeP57KS5a2Q5Zy65pmv5LiLXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUGFydGljbGVQb29sIHtcclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKiBAcGFyYW0ge251bWJlcn0gbWF4U2l6ZSAtIOWvueixoeaxoOacgOWkp+WuuemHj1xyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwcmVDcmVhdGVDb3VudCAtIOmihOWIm+W7uueahOeykuWtkOaVsOmHj1xyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKG1heFNpemUgPSAxMDAsIHByZUNyZWF0ZUNvdW50ID0gMjApIHtcclxuICAgIHRoaXMucG9vbCA9IFtdOyAgICAgICAgICAgICAgICAgICAgLy8g5Y+v55So57KS5a2Q5rGgXHJcbiAgICB0aGlzLmFjdGl2ZVBhcnRpY2xlcyA9IFtdOyAgICAgICAgIC8vIOato+WcqOS9v+eUqOeahOeykuWtkFxyXG4gICAgdGhpcy5tYXhTaXplID0gbWF4U2l6ZTsgICAgICAgICAgIC8vIOacgOWkp+WuuemHj1xyXG4gICAgdGhpcy5wcmVDcmVhdGVDb3VudCA9IHByZUNyZWF0ZUNvdW50O1xyXG4gICAgXHJcbiAgICAvLyDmgKfog73nu5/orqFcclxuICAgIHRoaXMuc3RhdHMgPSB7XHJcbiAgICAgIGNyZWF0ZWQ6IDAsICAgICAgICAvLyDmgLvliJvlu7rmlbBcclxuICAgICAgcmV1c2VkOiAwLCAgICAgICAgIC8vIOmHjeeUqOasoeaVsFxyXG4gICAgICByZWxlYXNlZDogMCwgICAgICAgLy8g6YeK5pS+5qyh5pWwXHJcbiAgICAgIG1heEFjdGl2ZTogMCAgICAgICAvLyDmnIDlpKflkIzml7bmtLvot4PmlbBcclxuICAgIH07XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKGBQYXJ0aWNsZVBvb2w6IOWIneWni+WMlu+8jOacgOWkp+WuuemHjz0ke21heFNpemV977yM6aKE5Yib5bu6PSR7cHJlQ3JlYXRlQ291bnR9YCk7XHJcbiAgICBcclxuICAgIC8vIOmihOWIm+W7uueykuWtkOWvueixoVxyXG4gICAgdGhpcy5wcmVDcmVhdGVQYXJ0aWNsZXMoKTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog6aKE5Yib5bu657KS5a2Q5a+56LGhXHJcbiAgICog5Zyo5Yid5aeL5YyW5pe25Yib5bu65LiA5om557KS5a2Q77yM6YG/5YWN6L+Q6KGM5pe25Yib5bu655qE5oCn6IO95byA6ZSAXHJcbiAgICovXHJcbiAgcHJlQ3JlYXRlUGFydGljbGVzKCkge1xyXG4gICAgY29uc29sZS5sb2coYFBhcnRpY2xlUG9vbDog5byA5aeL6aKE5Yib5bu6ICR7dGhpcy5wcmVDcmVhdGVDb3VudH0g5Liq57KS5a2QYCk7XHJcbiAgICBcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5wcmVDcmVhdGVDb3VudDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IHBhcnRpY2xlID0gdGhpcy5jcmVhdGVOZXdQYXJ0aWNsZSgpO1xyXG4gICAgICBwYXJ0aWNsZS52aXNpYmxlID0gZmFsc2U7ICAvLyDliJ3lp4vnirbmgIHkuI3lj6/op4FcclxuICAgICAgdGhpcy5wb29sLnB1c2gocGFydGljbGUpO1xyXG4gICAgICB0aGlzLnN0YXRzLmNyZWF0ZWQrKztcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coYFBhcnRpY2xlUG9vbDog6aKE5Yib5bu65a6M5oiQ77yM5rGg5Lit5Y+v55So57KS5a2Q5pWwOiAke3RoaXMucG9vbC5sZW5ndGh9YCk7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOWIm+W7uuaWsOeahOeykuWtkOWvueixoVxyXG4gICAqIEByZXR1cm5zIHtUSFJFRS5NZXNofSDmlrDliJvlu7rnmoTnspLlrZDnvZHmoLzlr7nosaFcclxuICAgKi9cclxuICBjcmVhdGVOZXdQYXJ0aWNsZSgpIHtcclxuICAgIC8vIOWIm+W7uueQg+S9k+WHoOS9leS9kyAtIOS9v+eUqOi+g+S9jueahOe7huWIhue6p+WIq+S7peaPkOWNh+aAp+iDvVxyXG4gICAgY29uc3QgZ2VvbWV0cnkgPSBuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoXHJcbiAgICAgIENPTkZJRy5kZW1vQW5pbWF0aW9uPy5lbGVjdHJvblBhcnRpY2xlPy5yYWRpdXMgfHwgMC4wMiwgIC8vIOWNiuW+hFxyXG4gICAgICA4LCAgIC8vIOawtOW5s+WIhuauteaVsO+8iOi+g+S9juS7peaPkOWNh+aAp+iDve+8iVxyXG4gICAgICA2ICAgIC8vIOWeguebtOWIhuauteaVsO+8iOi+g+S9juS7peaPkOWNh+aAp+iDve+8iVxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgLy8g5Yib5bu65p2Q6LSoIC0g5LyY5YyW6YCP5piO5bqm5riy5p+TXHJcbiAgICBjb25zdCBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7XHJcbiAgICAgIGNvbG9yOiBDT05GSUcuYmVhbT8uY29sb3IgfHwgMHgwMGZmZmYsXHJcbiAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxyXG4gICAgICBvcGFjaXR5OiBDT05GSUcuZGVtb0FuaW1hdGlvbj8uZWxlY3Ryb25QYXJ0aWNsZT8ub3BhY2l0eSB8fCAwLjgsXHJcbiAgICAgIGRlcHRoVGVzdDogZmFsc2UsICAvLyDnpoHnlKjmt7HluqbmtYvor5XvvIznoa7kv53nspLlrZDmgLvmmK/lj6/op4FcclxuICAgICAgZGVwdGhXcml0ZTogZmFsc2UsIC8vIOemgeeUqOa3seW6puWGmeWFpeS7pemBv+WFjemAj+aYjuW6pumXrumimFxyXG4gICAgICBibGVuZGluZzogVEhSRUUuQWRkaXRpdmVCbGVuZGluZyAvLyDkvb/nlKjliqDms5Xmt7flkIjvvIzlop7lvLrlj5HlhYnmlYjmnpxcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAvLyDliJvlu7rnvZHmoLzlr7nosaFcclxuICAgIGNvbnN0IHBhcnRpY2xlID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG1hdGVyaWFsKTtcclxuICAgIFxyXG4gICAgLy8g6K6+572u5riy5p+T6aG65bqP77yM56Gu5L+d57KS5a2Q5Zyo6YCP5piO5p6B5p2/5LmL5ZCO5riy5p+TXHJcbiAgICBwYXJ0aWNsZS5yZW5kZXJPcmRlciA9IDEwO1xyXG4gICAgXHJcbiAgICAvLyDmt7vliqDoh6rlrprkuYnlsZ7mgKfnlKjkuo7ov73ouKpcclxuICAgIHBhcnRpY2xlLnVzZXJEYXRhID0ge1xyXG4gICAgICBwb29sSWQ6IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KSwgIC8vIOWUr+S4gElEXHJcbiAgICAgIGNyZWF0ZWRBdDogRGF0ZS5ub3coKSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Yib5bu65pe26Ze0XHJcbiAgICAgIHJldXNlQ291bnQ6IDAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g6YeN55So5qyh5pWwXHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICByZXR1cm4gcGFydGljbGU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOS7juWvueixoeaxoOiOt+WPluS4gOS4queykuWtkFxyXG4gICAqIEByZXR1cm5zIHtUSFJFRS5NZXNofSDlj6/nlKjnmoTnspLlrZDlr7nosaFcclxuICAgKi9cclxuICBnZXRQYXJ0aWNsZSgpIHtcclxuICAgIGxldCBwYXJ0aWNsZTtcclxuICAgIFxyXG4gICAgaWYgKHRoaXMucG9vbC5sZW5ndGggPiAwKSB7XHJcbiAgICAgIC8vIOS7juaxoOS4reWPluWHuuS4gOS4queOsOaIkOeahOeykuWtkO+8iOacgOS9s+aDheWGte+8iVxyXG4gICAgICBwYXJ0aWNsZSA9IHRoaXMucG9vbC5wb3AoKTtcclxuICAgICAgcGFydGljbGUudXNlckRhdGEucmV1c2VDb3VudCsrO1xyXG4gICAgICB0aGlzLnN0YXRzLnJldXNlZCsrO1xyXG4gICAgICBcclxuICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmVQYXJ0aWNsZXMubGVuZ3RoIDwgdGhpcy5tYXhTaXplKSB7XHJcbiAgICAgIC8vIOaxoOepuuS6huS9hui/mOayoei+vuWIsOacgOWkp+mZkOWItu+8jOWIm+W7uuaWsOeahOeykuWtkFxyXG4gICAgICBwYXJ0aWNsZSA9IHRoaXMuY3JlYXRlTmV3UGFydGljbGUoKTtcclxuICAgICAgdGhpcy5zdGF0cy5jcmVhdGVkKys7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBQYXJ0aWNsZVBvb2w6IOaxoOW3suepuu+8jOWIm+W7uuaWsOeykuWtkCAo5oC75Yib5bu65pWwOiAke3RoaXMuc3RhdHMuY3JlYXRlZH0pYCk7XHJcbiAgICAgIFxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8g6L6+5Yiw5pyA5aSn6ZmQ5Yi277yM5by65Yi25Zue5pS25pyA6ICB55qE57KS5a2QXHJcbiAgICAgIHBhcnRpY2xlID0gdGhpcy5hY3RpdmVQYXJ0aWNsZXMuc2hpZnQoKTtcclxuICAgICAgY29uc29sZS53YXJuKGBQYXJ0aWNsZVBvb2w6IOi+vuWIsOacgOWkp+WuuemHjyAke3RoaXMubWF4U2l6ZX3vvIzlvLrliLblm57mlLbmnIDogIHnspLlrZBgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8g6YeN572u57KS5a2Q54q25oCBXHJcbiAgICB0aGlzLnJlc2V0UGFydGljbGUocGFydGljbGUpO1xyXG4gICAgXHJcbiAgICAvLyDorr7nva7kuLrlj6/op4HlubbliqDlhaXmtLvot4PliJfooahcclxuICAgIHBhcnRpY2xlLnZpc2libGUgPSB0cnVlO1xyXG4gICAgdGhpcy5hY3RpdmVQYXJ0aWNsZXMucHVzaChwYXJ0aWNsZSk7XHJcbiAgICBcclxuICAgIC8vIOabtOaWsOe7n+iuoVxyXG4gICAgdGhpcy5zdGF0cy5tYXhBY3RpdmUgPSBNYXRoLm1heCh0aGlzLnN0YXRzLm1heEFjdGl2ZSwgdGhpcy5hY3RpdmVQYXJ0aWNsZXMubGVuZ3RoKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIHBhcnRpY2xlO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDlsIbnspLlrZDlvZLov5jliLDlr7nosaHmsaBcclxuICAgKiBAcGFyYW0ge1RIUkVFLk1lc2h9IHBhcnRpY2xlIC0g6KaB5b2S6L+Y55qE57KS5a2Q5a+56LGhXHJcbiAgICovXHJcbiAgcmVsZWFzZVBhcnRpY2xlKHBhcnRpY2xlKSB7XHJcbiAgICBpZiAoIXBhcnRpY2xlKSByZXR1cm47XHJcbiAgICBcclxuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5hY3RpdmVQYXJ0aWNsZXMuaW5kZXhPZihwYXJ0aWNsZSk7XHJcbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XHJcbiAgICAgIGNvbnNvbGUud2FybignUGFydGljbGVQb29sOiDlsJ3or5Xph4rmlL7mnKrlnKjmtLvot4PliJfooajkuK3nmoTnspLlrZAnKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyDku47mtLvot4PliJfooajkuK3np7vpmaRcclxuICAgIHRoaXMuYWN0aXZlUGFydGljbGVzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICBcclxuICAgIC8vIOmHjee9rueykuWtkOeKtuaAgVxyXG4gICAgdGhpcy5yZXNldFBhcnRpY2xlKHBhcnRpY2xlKTtcclxuICAgIHBhcnRpY2xlLnZpc2libGUgPSBmYWxzZTtcclxuICAgIFxyXG4gICAgLy8g5b2S6L+Y5Yiw5rGg5LitXHJcbiAgICB0aGlzLnBvb2wucHVzaChwYXJ0aWNsZSk7XHJcbiAgICB0aGlzLnN0YXRzLnJlbGVhc2VkKys7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOmHjee9rueykuWtkOeKtuaAgVxyXG4gICAqIEBwYXJhbSB7VEhSRUUuTWVzaH0gcGFydGljbGUgLSDopoHph43nva7nmoTnspLlrZBcclxuICAgKi9cclxuICByZXNldFBhcnRpY2xlKHBhcnRpY2xlKSB7XHJcbiAgICAvLyDph43nva7kvY3nva5cclxuICAgIHBhcnRpY2xlLnBvc2l0aW9uLnNldCgwLCAwLCAwKTtcclxuICAgIFxyXG4gICAgLy8g6YeN572u5peL6L2sXHJcbiAgICBwYXJ0aWNsZS5yb3RhdGlvbi5zZXQoMCwgMCwgMCk7XHJcbiAgICBcclxuICAgIC8vIOmHjee9rue8qeaUvlxyXG4gICAgcGFydGljbGUuc2NhbGUuc2V0KDEsIDEsIDEpO1xyXG4gICAgXHJcbiAgICAvLyDph43nva7mnZDotKjlsZ7mgKdcclxuICAgIGlmIChwYXJ0aWNsZS5tYXRlcmlhbCkge1xyXG4gICAgICBwYXJ0aWNsZS5tYXRlcmlhbC5vcGFjaXR5ID0gQ09ORklHLmRlbW9BbmltYXRpb24/LmVsZWN0cm9uUGFydGljbGU/Lm9wYWNpdHkgfHwgMC44O1xyXG4gICAgICBwYXJ0aWNsZS5tYXRlcmlhbC5jb2xvci5zZXRIZXgoQ09ORklHLmJlYW0/LmNvbG9yIHx8IDB4MDBmZmZmKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8g5YGc5q2i5omA5pyJ5q2j5Zyo6L+b6KGM55qE5Yqo55S7XHJcbiAgICBpZiAocGFydGljbGUudXNlckRhdGEuY3VycmVudFR3ZWVuKSB7XHJcbiAgICAgIHBhcnRpY2xlLnVzZXJEYXRhLmN1cnJlbnRUd2Vlbi5zdG9wKCk7XHJcbiAgICAgIGRlbGV0ZSBwYXJ0aWNsZS51c2VyRGF0YS5jdXJyZW50VHdlZW47XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOaJuemHj+iOt+WPluWkmuS4queykuWtkFxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBjb3VudCAtIOmcgOimgeeahOeykuWtkOaVsOmHj1xyXG4gICAqIEByZXR1cm5zIHtUSFJFRS5NZXNoW119IOeykuWtkOaVsOe7hFxyXG4gICAqL1xyXG4gIGdldFBhcnRpY2xlcyhjb3VudCkge1xyXG4gICAgY29uc3QgcGFydGljbGVzID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcclxuICAgICAgcGFydGljbGVzLnB1c2godGhpcy5nZXRQYXJ0aWNsZSgpKTtcclxuICAgIH1cclxuICAgIHJldHVybiBwYXJ0aWNsZXM7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOaJuemHj+mHiuaUvuWkmuS4queykuWtkFxyXG4gICAqIEBwYXJhbSB7VEhSRUUuTWVzaFtdfSBwYXJ0aWNsZXMgLSDopoHph4rmlL7nmoTnspLlrZDmlbDnu4RcclxuICAgKi9cclxuICByZWxlYXNlUGFydGljbGVzKHBhcnRpY2xlcykge1xyXG4gICAgcGFydGljbGVzLmZvckVhY2gocGFydGljbGUgPT4gdGhpcy5yZWxlYXNlUGFydGljbGUocGFydGljbGUpKTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5riF55CG5omA5pyJ5rS76LeD57KS5a2QXHJcbiAgICovXHJcbiAgY2xlYXJBbGwoKSB7XHJcbiAgICBjb25zb2xlLmxvZyhgUGFydGljbGVQb29sOiDmuIXnkIbmiYDmnInmtLvot4PnspLlrZDvvIzmlbDph486ICR7dGhpcy5hY3RpdmVQYXJ0aWNsZXMubGVuZ3RofWApO1xyXG4gICAgXHJcbiAgICAvLyDlgZzmraLmiYDmnInnspLlrZDnmoTliqjnlLtcclxuICAgIHRoaXMuYWN0aXZlUGFydGljbGVzLmZvckVhY2gocGFydGljbGUgPT4ge1xyXG4gICAgICBpZiAocGFydGljbGUudXNlckRhdGEuY3VycmVudFR3ZWVuKSB7XHJcbiAgICAgICAgcGFydGljbGUudXNlckRhdGEuY3VycmVudFR3ZWVuLnN0b3AoKTtcclxuICAgICAgICBkZWxldGUgcGFydGljbGUudXNlckRhdGEuY3VycmVudFR3ZWVuO1xyXG4gICAgICB9XHJcbiAgICAgIHBhcnRpY2xlLnZpc2libGUgPSBmYWxzZTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAvLyDlsIbmiYDmnInmtLvot4PnspLlrZDlvZLov5jliLDmsaDkuK1cclxuICAgIHRoaXMucG9vbC5wdXNoKC4uLnRoaXMuYWN0aXZlUGFydGljbGVzKTtcclxuICAgIHRoaXMuYWN0aXZlUGFydGljbGVzID0gW107XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWvueixoeaxoOeKtuaAgeS/oeaBr1xyXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IOeKtuaAgeS/oeaBr+WvueixoVxyXG4gICAqL1xyXG4gIGdldFN0YXR1cygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHBvb2xTaXplOiB0aGlzLnBvb2wubGVuZ3RoLCAgICAgICAgICAgLy8g5rGg5Lit5Y+v55So57KS5a2Q5pWwXHJcbiAgICAgIGFjdGl2ZUNvdW50OiB0aGlzLmFjdGl2ZVBhcnRpY2xlcy5sZW5ndGgsICAvLyDmtLvot4PnspLlrZDmlbBcclxuICAgICAgbWF4U2l6ZTogdGhpcy5tYXhTaXplLCAgICAgICAgICAgICAgICAvLyDmnIDlpKflrrnph49cclxuICAgICAgc3RhdHM6IHsgLi4udGhpcy5zdGF0cyB9ICAgICAgICAgICAgIC8vIOaAp+iDvee7n+iuoe+8iOWkjeWItu+8iVxyXG4gICAgfTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5omT5Y2w6K+m57uG54q25oCB5L+h5oGvXHJcbiAgICovXHJcbiAgcHJpbnRTdGF0dXMoKSB7XHJcbiAgICBjb25zdCBzdGF0dXMgPSB0aGlzLmdldFN0YXR1cygpO1xyXG4gICAgY29uc29sZS5sb2coJz09PSBQYXJ0aWNsZVBvb2wg54q25oCB5oql5ZGKID09PScpO1xyXG4gICAgY29uc29sZS5sb2coYOaxoOS4reWPr+eUqDogJHtzdGF0dXMucG9vbFNpemV9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhg5q2j5Zyo5L2/55SoOiAke3N0YXR1cy5hY3RpdmVDb3VudH1gKTtcclxuICAgIGNvbnNvbGUubG9nKGDmnIDlpKflrrnph486ICR7c3RhdHVzLm1heFNpemV9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhg5oC75Yib5bu65pWwOiAke3N0YXR1cy5zdGF0cy5jcmVhdGVkfWApO1xyXG4gICAgY29uc29sZS5sb2coYOmHjeeUqOasoeaVsDogJHtzdGF0dXMuc3RhdHMucmV1c2VkfWApO1xyXG4gICAgY29uc29sZS5sb2coYOmHiuaUvuasoeaVsDogJHtzdGF0dXMuc3RhdHMucmVsZWFzZWR9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhg5pyA5aSn5ZCM5pe25rS76LeDOiAke3N0YXR1cy5zdGF0cy5tYXhBY3RpdmV9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhg6YeN55So546HOiAke3N0YXR1cy5zdGF0cy5yZXVzZWQgPiAwID8gKHN0YXR1cy5zdGF0cy5yZXVzZWQgLyAoc3RhdHVzLnN0YXRzLmNyZWF0ZWQgKyBzdGF0dXMuc3RhdHMucmV1c2VkKSAqIDEwMCkudG9GaXhlZCgxKSA6IDB9JWApO1xyXG4gICAgY29uc29sZS5sb2coJz09PT09PT09PT09PT09PT09PT09PT09PScpO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDplIDmr4Hlr7nosaHmsaDvvIzph4rmlL7miYDmnInotYTmupBcclxuICAgKi9cclxuICBkaXNwb3NlKCkge1xyXG4gICAgY29uc29sZS5sb2coJ1BhcnRpY2xlUG9vbDog5byA5aeL6ZSA5q+B77yM6YeK5pS+5omA5pyJ6LWE5rqQJyk7XHJcbiAgICBcclxuICAgIC8vIOa4heeQhuaJgOacieeykuWtkFxyXG4gICAgdGhpcy5jbGVhckFsbCgpO1xyXG4gICAgXHJcbiAgICAvLyDph4rmlL7lh6DkvZXkvZPlkozmnZDotKjotYTmupBcclxuICAgIGNvbnN0IGFsbFBhcnRpY2xlcyA9IFsuLi50aGlzLnBvb2wsIC4uLnRoaXMuYWN0aXZlUGFydGljbGVzXTtcclxuICAgIGFsbFBhcnRpY2xlcy5mb3JFYWNoKHBhcnRpY2xlID0+IHtcclxuICAgICAgaWYgKHBhcnRpY2xlLmdlb21ldHJ5KSB7XHJcbiAgICAgICAgcGFydGljbGUuZ2VvbWV0cnkuZGlzcG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChwYXJ0aWNsZS5tYXRlcmlhbCkge1xyXG4gICAgICAgIHBhcnRpY2xlLm1hdGVyaWFsLmRpc3Bvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIC8vIOa4heepuuaVsOe7hFxyXG4gICAgdGhpcy5wb29sID0gW107XHJcbiAgICB0aGlzLmFjdGl2ZVBhcnRpY2xlcyA9IFtdO1xyXG4gICAgXHJcbiAgICAvLyDph43nva7nu5/orqFcclxuICAgIHRoaXMuc3RhdHMgPSB7XHJcbiAgICAgIGNyZWF0ZWQ6IDAsXHJcbiAgICAgIHJldXNlZDogMCxcclxuICAgICAgcmVsZWFzZWQ6IDAsXHJcbiAgICAgIG1heEFjdGl2ZTogMFxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coJ1BhcnRpY2xlUG9vbDog6ZSA5q+B5a6M5oiQJyk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyDlr7zlh7rpu5jorqTlrp7kvovvvIjljZXkvovmqKHlvI/vvIlcclxuZXhwb3J0IGNvbnN0IGRlZmF1bHRQYXJ0aWNsZVBvb2wgPSBuZXcgUGFydGljbGVQb29sKDEwMCwgMzApO1xyXG4iLCJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgKiBhcyBUV0VFTiBmcm9tICdAdHdlZW5qcy90d2Vlbi5qcyc7XG5pbXBvcnQgeyBDT05GSUcgfSBmcm9tICcuLi9jb25maWdMb2FkZXInO1xuaW1wb3J0IHsgdHdlZW5Hcm91cCB9IGZyb20gJy4uL21haW4uanMnO1xuaW1wb3J0IHsgUGFydGljbGVQb29sIH0gZnJvbSAnLi4vdXRpbHMvUGFydGljbGVQb29sLmpzJztcblxuLyoqXG4gKiDmvJTnpLrliqjnlLvnsbtcbiAqIOi0n+i0o+WIm+W7uuWSjOaOp+WItumYtOaegeWwhOe6v+euoeW3peS9nOWOn+eQhueahOa8lOekuuWKqOeUu1xuICovXG5leHBvcnQgY2xhc3MgRGVtb0FuaW1hdGlvbiB7XG4gIC8qKlxuICAgKiDmnoTpgKDlh73mlbBcbiAgICogQHBhcmFtIHtUSFJFRS5TY2VuZX0gc2NlbmUgLSBUaHJlZS5qc+WcuuaZr1xuICAgKiBAcGFyYW0ge09iamVjdH0gY29tcG9uZW50cyAtIOe7hOS7tuWvueixoembhuWQiFxuICAgKiBAcGFyYW0ge09iamVjdH0gY29udHJvbGxlcnMgLSDmjqfliLblmajlr7nosaHpm4blkIhcbiAgICovXG4gIGNvbnN0cnVjdG9yKHNjZW5lLCBjb21wb25lbnRzLCBjb250cm9sbGVycykge1xuICAgIGNvbnNvbGUubG9nKCdEZW1vQW5pbWF0aW9u5p6E6YCg5Ye95pWw6KKr6LCD55SoJyk7XG4gICAgY29uc29sZS5sb2coJ3NjZW5lOicsIHNjZW5lKTtcbiAgICBjb25zb2xlLmxvZygnY29tcG9uZW50czonLCBjb21wb25lbnRzKTtcbiAgICBjb25zb2xlLmxvZygnY29udHJvbGxlcnM6JywgY29udHJvbGxlcnMpO1xuICAgIFxuICAgIHRoaXMuc2NlbmUgPSBzY2VuZTtcbiAgICB0aGlzLmNvbXBvbmVudHMgPSBjb21wb25lbnRzO1xuICAgIHRoaXMuY29udHJvbGxlcnMgPSBjb250cm9sbGVycztcbiAgICBcbiAgICB0aGlzLmlzUGxheWluZyA9IGZhbHNlO1xuICAgIHRoaXMuY3VycmVudFN0ZXAgPSAwO1xuICAgIHRoaXMuYW5pbWF0aW9uU3RlcHMgPSBbXTtcbiAgICB0aGlzLnBhcnRpY2xlcyA9IFtdO1xuICAgIHRoaXMudHdlZW5zID0gW107XG4gICAgdGhpcy5zdGVwQ2FsbGJhY2tzID0gW107XG4gICAgdGhpcy5jb250aW51b3VzQmVhbUludGVydmFsID0gbnVsbDsgLy8g6L+e57ut55S15a2Q5p2f55qE5a6a5pe25ZmoXG4gICAgdGhpcy5vcmlnaW5hbFZvbHRhZ2VzID0gbnVsbDsgLy8g5L+d5a2Y5Y6f5aeL5YGP6L2s55S15Y6L5YC877yM55So5LqO5rOi5b2i5pi+56S6XG4gICAgdGhpcy5vcmlnaW5hbFBsYXRlT3BhY2l0aWVzID0gbnVsbDsgLy8g5L+d5a2Y5p6B5p2/5Y6f5aeL5LiN6YCP5piO5bqmXG4gICAgdGhpcy5vcmlnaW5hbEd1aVN0YXRlID0gbnVsbDsgLy8g5L+d5a2YR1VJ6Z2i5p2/55qE5Y6f5aeL54q25oCBXG4gICAgXG4gICAgLy8g5Yid5aeL5YyW57KS5a2Q5a+56LGh5rGgXG4gICAgdGhpcy5wYXJ0aWNsZVBvb2wgPSBuZXcgUGFydGljbGVQb29sKDgwLCAyNSk7IC8vIOacgOWkpzgw5Liq57KS5a2Q77yM6aKE5Yib5bu6MjXkuKpcbiAgICBcbiAgICBjb25zb2xlLmxvZygn5Yid5aeL5YyW5Yqo55S75q2l6aqkJyk7XG4gICAgLy8g5Yid5aeL5YyW5Yqo55S75q2l6aqkXG4gICAgdGhpcy5pbml0QW5pbWF0aW9uU3RlcHMoKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZygn5Yib5bu655S15a2Q57KS5a2Q5p2Q6LSoJyk7XG4gICAgLy8g5Yib5bu655S15a2Q57KS5a2Q5p2Q6LSoIC0g5LyY5YyW6YCP5piO5bqm5riy5p+TXG4gICAgdGhpcy5wYXJ0aWNsZU1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHtcbiAgICAgIGNvbG9yOiBDT05GSUcuYmVhbS5jb2xvcixcbiAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxuICAgICAgb3BhY2l0eTogQ09ORklHLmRlbW9BbmltYXRpb24uZWxlY3Ryb25QYXJ0aWNsZS5vcGFjaXR5LFxuICAgICAgZGVwdGhUZXN0OiB0cnVlLCAgIC8vIOWQr+eUqOa3seW6pua1i+ivle+8jOehruS/neiiq+WkluWjs+ato+ehrumBruaMoVxuICAgICAgZGVwdGhXcml0ZTogZmFsc2UsIC8vIOemgeeUqOa3seW6puWGmeWFpe+8jOmBv+WFjeW9seWTjeWFtuS7lumAj+aYjueJqeS9k1xuICAgICAgYmxlbmRpbmc6IFRIUkVFLkFkZGl0aXZlQmxlbmRpbmcgLy8g5L2/55So5Yqg5rOV5re35ZCI77yM5aKe5by65Y+R5YWJ5pWI5p6cXG4gICAgfSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ0RlbW9BbmltYXRpb27mnoTpgKDlh73mlbDlrozmiJAnKTtcbiAgICBjb25zb2xlLmxvZygn57KS5a2Q5a+56LGh5rGg54q25oCBOicsIHRoaXMucGFydGljbGVQb29sLmdldFN0YXR1cygpKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOWIneWni+WMluWKqOeUu+atpemqpFxuICAgKi9cbiAgaW5pdEFuaW1hdGlvblN0ZXBzKCkge1xuICAgIC8vIOatpemqpDE6IOS7i+e7jemYtOaegeWwhOe6v+euoVxuICAgIHRoaXMuYW5pbWF0aW9uU3RlcHMucHVzaCh7XG4gICAgICB0aXRsZTogJ+mYtOaegeWwhOe6v+euoeeugOS7iycsXG4gICAgICBkZXNjcmlwdGlvbjogJ+mYtOaegeWwhOe6v+euoeaYr+S4gOenjeecn+epuueUteWtkOeuoe+8jOWIqeeUqOeUteWcuuaOp+WItueUteWtkOadn+eahOWBj+i9rOadpeaYvuekuuWbvuWDj+OAgicsXG4gICAgICBkdXJhdGlvbjogNjAwMCwgIC8vIOWinuWKoOaMgee7reaXtumXtOWIsDbnp5JcbiAgICAgIHNldHVwOiAoKSA9PiB7XG4gICAgICAgIC8vIOS9v+eUqOiHquWumuS5ieinhuinkuWxleekuuaVtOS4qumYtOaegeWwhOe6v+euoeeahOWFqOiyjFxuICAgICAgICBjb25zdCB2aWV3UHJvbWlzZSA9IHRoaXMuc2V0Q3VzdG9tVmlldyh7XG4gICAgICAgICAgcG9zaXRpb246IHsgeDogOCwgeTogNSwgejogMTIgfSwgIC8vIOeojeW+rui/nOS4gOeCueeahOS/r+inhuinkuW6plxuICAgICAgICAgIHRhcmdldDogeyB4OiAwLCB5OiAwLCB6OiAwIH0gICAgICAvLyDop4Llr5/mlbTkuKrorr7lpIfkuK3lv4NcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAvLyDlnKgy56eS5pe25byA5aeLQ1JU5aSW5aOz5YiG6Kej5ZKM5raI5aSxXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfmvJTnpLrliqjnlLvvvJrlvIDlp4tDUlTlpJblo7PliIbop6PlkozmtojlpLEnKTtcbiAgICAgICAgICB0aGlzLnN0YXJ0Q1JUU2hlbGxEaXNhcHBlYXIoKTtcbiAgICAgICAgfSwgMjAwMCk7ICAvLyDlnKgy56eS5pe25byA5aeLQ1JU5aSW5aOz5raI5aSxXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gdmlld1Byb21pc2U7XG4gICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgLy8g5q2l6aqkMjog55S15a2Q5p6q5Y+R5bCE55S15a2QXG4gICAgdGhpcy5hbmltYXRpb25TdGVwcy5wdXNoKHtcbiAgICAgIHRpdGxlOiAn55S15a2Q5p6q5Y+R5bCE55S15a2QJyxcbiAgICAgIGRlc2NyaXB0aW9uOiAn55S15a2Q5p6q5Yqg54Ot6Zi05p6B77yM6YeK5pS+55S15a2Q5bm25Yqg6YCf5b2i5oiQ55S15a2Q5p2f44CCJyxcbiAgICAgIGR1cmF0aW9uOiA4MDAwLFxuICAgICAgc2V0dXA6ICgpID0+IHtcbiAgICAgICAgLy8g6IGa54Sm5Yiw55S15a2Q5p6qXG4gICAgICAgIGNvbnN0IGZvY3VzUHJvbWlzZSA9IHRoaXMuZm9jdXNPbkNvbXBvbmVudCgnZ3VuJyk7XG4gICAgICAgIFxuICAgICAgICAvLyDliJvlu7rov57nu63nlLXlrZDmnZ/mtYFcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdGFydENvbnRpbnVvdXNFbGVjdHJvbkJlYW0oXG4gICAgICAgICAgICBuZXcgVEhSRUUuVmVjdG9yMygtMywgMCwgMCksXG4gICAgICAgICAgICBuZXcgVEhSRUUuVmVjdG9yMygtMi43LCAwLCAwKVxuICAgICAgICAgICk7XG4gICAgICAgIH0sIDEwMDApO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGZvY3VzUHJvbWlzZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICAvLyDmraXpqqQzOiDlnoLnm7TlgY/ovazmnb9cbiAgICB0aGlzLmFuaW1hdGlvblN0ZXBzLnB1c2goe1xuICAgICAgdGl0bGU6ICflnoLnm7TlgY/ovazmnb8nLFxuICAgICAgZGVzY3JpcHRpb246ICflnoLnm7TlgY/ovazmnb/pgJrov4fnlLXljovmjqfliLbnlLXlrZDmnZ/lnKjlnoLnm7TmlrnlkJHkuIrnmoTlgY/ovazjgIInLFxuICAgICAgZHVyYXRpb246IDgwMDAsXG4gICAgICBzZXR1cDogKCkgPT4ge1xuICAgICAgICAvLyDogZrnhKbliLDlnoLnm7TlgY/ovazmnb9cbiAgICAgICAgY29uc3QgZm9jdXNQcm9taXNlID0gdGhpcy5mb2N1c09uQ29tcG9uZW50KCd2MScpO1xuICAgICAgICBcbiAgICAgICAgLy8g5qih5ouf55S15Y6L5Y+Y5YyWXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIC8vIOiuvue9ruWeguebtOeUteWOi1xuICAgICAgICAgIHRoaXMuc2ltdWxhdGVWb2x0YWdlQ2hhbmdlKCd2ZXJ0aWNhbCcsIDMsIDIwMDApO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIOWIm+W7uui/nue7reeUteWtkOadn+a1ge+8iOS7jueUteWtkOaequWIsOWBj+i9rOadv++8iVxuICAgICAgICAgIHRoaXMuc3RhcnRDb250aW51b3VzRWxlY3Ryb25CZWFtKFxuICAgICAgICAgICAgbmV3IFRIUkVFLlZlY3RvcjMoLTIuNywgMCwgMCksXG4gICAgICAgICAgICBuZXcgVEhSRUUuVmVjdG9yMygtMS41LCAwLjYsIDApXG4gICAgICAgICAgKTtcbiAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gZm9jdXNQcm9taXNlO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIC8vIOatpemqpDQ6IOawtOW5s+WBj+i9rOadv1xuICAgIHRoaXMuYW5pbWF0aW9uU3RlcHMucHVzaCh7XG4gICAgICB0aXRsZTogJ+awtOW5s+WBj+i9rOadvycsXG4gICAgICBkZXNjcmlwdGlvbjogJ+awtOW5s+WBj+i9rOadv+mAmui/h+eUteWOi+aOp+WItueUteWtkOadn+WcqOawtOW5s+aWueWQkeS4iueahOWBj+i9rOOAgicsXG4gICAgICBkdXJhdGlvbjogODAwMCxcbiAgICAgIHNldHVwOiAoKSA9PiB7XG4gICAgICAgIC8vIOiBmueEpuWIsOawtOW5s+WBj+i9rOadv1xuICAgICAgICBjb25zdCBmb2N1c1Byb21pc2UgPSB0aGlzLmZvY3VzT25Db21wb25lbnQoJ2gxJyk7XG4gICAgICAgIFxuICAgICAgICAvLyDmqKHmi5/nlLXljovlj5jljJZcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgLy8g6K6+572u5rC05bmz55S15Y6LXG4gICAgICAgICAgdGhpcy5zaW11bGF0ZVZvbHRhZ2VDaGFuZ2UoJ2hvcml6b250YWwnLCAyLCAyMDAwKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyDliJvlu7rov57nu63nlLXlrZDmnZ/mtYHvvIjku47lnoLnm7TlgY/ovazmnb/liLDmsLTlubPlgY/ovazmnb/vvIlcbiAgICAgICAgICB0aGlzLnN0YXJ0Q29udGludW91c0VsZWN0cm9uQmVhbShcbiAgICAgICAgICAgIG5ldyBUSFJFRS5WZWN0b3IzKC0xLjUsIDAuNiwgMCksXG4gICAgICAgICAgICBuZXcgVEhSRUUuVmVjdG9yMygtMC4yLCAwLjYsIDAuNClcbiAgICAgICAgICApO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBmb2N1c1Byb21pc2U7XG4gICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgLy8g5q2l6aqkNTog6I2n5YWJ5bGP5pi+56S6XG4gICAgdGhpcy5hbmltYXRpb25TdGVwcy5wdXNoKHtcbiAgICAgIHRpdGxlOiAn6I2n5YWJ5bGP5pi+56S6JyxcbiAgICAgIGRlc2NyaXB0aW9uOiAn55S15a2Q5p2f5Ye75Lit6I2n5YWJ5bGP5LiK55qE6I2n5YWJ54mp6LSo77yM5Lqn55Sf5Y+v6KeB5YWJ77yM5b2i5oiQ5Zu+5YOP44CCJyxcbiAgICAgIGR1cmF0aW9uOiA1MDAwLFxuICAgICAgc2V0dXA6ICgpID0+IHtcbiAgICAgICAgLy8g6IGa54Sm5Yiw6I2n5YWJ5bGPXG4gICAgICAgIGNvbnN0IGZvY3VzUHJvbWlzZSA9IHRoaXMuZm9jdXNPbkNvbXBvbmVudCgnc2NyZWVuJyk7XG4gICAgICAgIFxuICAgICAgICAvLyDliJvlu7rov57nu63nlLXlrZDmnZ/mtYHvvIjku47msLTlubPlgY/ovazmnb/liLDojaflhYnlsY/vvIlcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdGFydENvbnRpbnVvdXNFbGVjdHJvbkJlYW0oXG4gICAgICAgICAgICBuZXcgVEhSRUUuVmVjdG9yMygtMC4yLCAwLjYsIDAuNCksXG4gICAgICAgICAgICBuZXcgVEhSRUUuVmVjdG9yMygzLCAwLjYsIDAuNClcbiAgICAgICAgICApO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBmb2N1c1Byb21pc2U7XG4gICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgLy8g5q2l6aqkNjog5rOi5b2i5pi+56S6XG4gICAgdGhpcy5hbmltYXRpb25TdGVwcy5wdXNoKHtcbiAgICAgIHRpdGxlOiAn5rOi5b2i5pi+56S6JyxcbiAgICAgIGRlc2NyaXB0aW9uOiAn6YCa6L+H5pS55Y+Y5YGP6L2s55S15Y6L77yM5Y+v5Lul5Zyo6I2n5YWJ5bGP5LiK57uY5Yi25ZCE56eN5rOi5b2i44CCJyxcbiAgICAgIGR1cmF0aW9uOiAxMDAwMCwgIC8vIOWinuWKoOaMgee7reaXtumXtOS7peWxleekuuS4pOenjeazouW9olxuICAgICAgc2V0dXA6ICgpID0+IHtcbiAgICAgICAgLy8g5L2/55So6Ieq5a6a5LmJ6KeG6KeS77yM5LuO5bem5YmN5pa544CB5LiK5pa56KeC5a+f5pW05Liq6Zi05p6B5bCE57q/566h5ZKM5rOi5b2i5pi+56S6XG4gICAgICAgIGNvbnN0IHJlc2V0UHJvbWlzZSA9IHRoaXMuc2V0Q3VzdG9tVmlldyh7XG4gICAgICAgICAgcG9zaXRpb246IHsgeDogMTQsIHk6IDEsIHo6IC0yLjUgfSwgICAgICAgXG4gICAgICAgICAgdGFyZ2V0OiB7IHg6IDAsIHk6IDAsIHo6IDAgfSAgICAgICAgIC8vIOiBmueEpuWIsOaVtOS4quijhee9rueahOS4reW/g1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIOWQr+eUqOazouW9ouWSjOeUteWtkOadn1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAvLyDmuIXpmaTkuYvliY3nmoTnspLlrZDlkozojaflhYnngrlcbiAgICAgICAgICB0aGlzLmNsZWFyQWxsUGFydGljbGVzKCk7XG4gICAgICAgICAgaWYgKHRoaXMuY29tcG9uZW50cyAmJiB0aGlzLmNvbXBvbmVudHMuc2NyZWVuKSB7XG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudHMuc2NyZWVuLmNsZWFyQWxsR2xvd1BvaW50cygpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyDnrKzkuIDpmLbmrrXvvJrmmL7npLrmraPlvKbms6LvvIjliY0056eS77yJXG4gICAgICAgICAgdGhpcy5zZXRXYXZlZm9ybVBhcmFtcyh7XG4gICAgICAgICAgICB0eXBlOiAnc2luZScsXG4gICAgICAgICAgICBmcmVxdWVuY3k6IDEuMixcbiAgICAgICAgICAgIGFtcGxpdHVkZTogMi41LFxuICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIOWQr+WKqOi/nue7reeUteWtkOadn+a1gSAtIOS7jueUteWtkOaequWIsOiNp+WFieWxj+eahOWujOaVtOi3r+W+hFxuICAgICAgICAgIHRoaXMuc3RhcnRDb250aW51b3VzRWxlY3Ryb25CZWFtKFxuICAgICAgICAgICAgbmV3IFRIUkVFLlZlY3RvcjMoLTMsIDAsIDApLCAgICAgLy8g5LuO55S15a2Q5p6q5byA5aeLXG4gICAgICAgICAgICBuZXcgVEhSRUUuVmVjdG9yMygzLCAwLCAwKSAgICAgICAvLyDliLDojaflhYnlsY/nu5PmnZ9cbiAgICAgICAgICApO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIDTnp5LlkI7liIfmjaLliLDmlrnms6JcbiAgICAgICAgICBjb25zdCB3YXZlZm9ybVN3aXRjaENhbGxiYWNrID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAvLyDmuIXpmaTojaflhYnlsY/vvIzlh4blpIfmmL7npLrmlrDms6LlvaJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbXBvbmVudHMgJiYgdGhpcy5jb21wb25lbnRzLnNjcmVlbikge1xuICAgICAgICAgICAgICB0aGlzLmNvbXBvbmVudHMuc2NyZWVuLmNsZWFyQWxsR2xvd1BvaW50cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyDliIfmjaLliLDmlrnms6JcbiAgICAgICAgICAgIHRoaXMuc2V0V2F2ZWZvcm1QYXJhbXMoe1xuICAgICAgICAgICAgICB0eXBlOiAnc3F1YXJlJyxcbiAgICAgICAgICAgICAgZnJlcXVlbmN5OiAwLjgsXG4gICAgICAgICAgICAgIGFtcGxpdHVkZTogMyxcbiAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSwgNDAwMCk7XG4gICAgICAgICAgXG4gICAgICAgICAgdGhpcy5zdGVwQ2FsbGJhY2tzLnB1c2god2F2ZWZvcm1Td2l0Y2hDYWxsYmFjayk7XG4gICAgICAgICAgXG4gICAgICAgIH0sIDEwMDApO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHJlc2V0UHJvbWlzZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICAvLyDmraXpqqQ3OiDmvJTnpLrnu5PmnZ9cbiAgICB0aGlzLmFuaW1hdGlvblN0ZXBzLnB1c2goe1xuICAgICAgdGl0bGU6ICfmvJTnpLrnu5PmnZ8nLFxuICAgICAgZGVzY3JpcHRpb246ICfpmLTmnoHlsITnur/nrqHmmK/ml6nmnJ/mmL7npLrlmajnmoTln7rnoYDmioDmnK/vvIzkuLrnjrDku6PmmL7npLrmioDmnK/lpaDlrprkuobln7rnoYDjgIInLFxuICAgICAgZHVyYXRpb246IDMwMDAsXG4gICAgICBzZXR1cDogKCkgPT4ge1xuICAgICAgICAvLyDorr7nva7oh6rlrprkuYnop4bop5LvvIzlsZXnpLrmlbTkuKrpmLTmnoHlsITnur/nrqHnmoTlrozmlbTop4blm75cbiAgICAgICAgY29uc3Qgdmlld1Byb21pc2UgPSB0aGlzLnNldEN1c3RvbVZpZXcoe1xuICAgICAgICAgIHBvc2l0aW9uOiB7IHg6IDYsIHk6IDQsIHo6IDEwIH0sXG4gICAgICAgICAgdGFyZ2V0OiB7IHg6IDAsIHk6IDAsIHo6IDAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIOi/mOWOn+WIhuino+inhuWbvueKtuaAgVxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygn5ryU56S65Yqo55S757uT5p2f77ya6L+Y5Y6f5YiG6Kej6KeG5Zu+54q25oCBJyk7XG4gICAgICAgICAgY29uc3QgZXhwbG9kZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2dnbGUtZXhwbG9kZS1idG4nKTtcbiAgICAgICAgICBpZiAoZXhwbG9kZUJ0biAmJiBleHBsb2RlQnRuLnRleHRDb250ZW50ID09PSAn5ZCI5bm26KeG5Zu+Jykge1xuICAgICAgICAgICAgZXhwbG9kZUJ0bi5jbGljaygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgXG4gICAgICAgIC8vIOi/mOWOn+WkluWjs+aYvuekuueKtuaAgVxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygn5ryU56S65Yqo55S757uT5p2f77ya6L+Y5Y6f5aSW5aOz5pi+56S654q25oCBJyk7XG4gICAgICAgICAgaWYgKHRoaXMub3JpZ2luYWxTaGVsbFZpc2libGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8g5p+l5om+XCLmmL7npLrlpJblo7NcIueahOWkjemAieahhlxuICAgICAgICAgICAgY29uc3Qgc2hlbGxDaGVja2JveGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdJyk7XG4gICAgICAgICAgICBsZXQgc2hlbGxDaGVja2JveCA9IG51bGw7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIOafpeaJvuWvueW6lOeahOWkjemAieahhlxuICAgICAgICAgICAgc2hlbGxDaGVja2JveGVzLmZvckVhY2goY2hlY2tib3ggPT4ge1xuICAgICAgICAgICAgICBjb25zdCBsYWJlbCA9IGNoZWNrYm94LmNsb3Nlc3QoJ2xpJyk/LnF1ZXJ5U2VsZWN0b3IoJy5wcm9wZXJ0eS1uYW1lJyk7XG4gICAgICAgICAgICAgIGlmIChsYWJlbCAmJiBsYWJlbC50ZXh0Q29udGVudC5pbmNsdWRlcygn5pi+56S65aSW5aOzJykpIHtcbiAgICAgICAgICAgICAgICBzaGVsbENoZWNrYm94ID0gY2hlY2tib3g7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoc2hlbGxDaGVja2JveCkge1xuICAgICAgICAgICAgICAvLyDlpoLmnpzljp/lp4vnirbmgIHlkozlvZPliY3nirbmgIHkuI3lkIzvvIzngrnlh7vlpI3pgInmoYZcbiAgICAgICAgICAgICAgaWYgKHNoZWxsQ2hlY2tib3guY2hlY2tlZCAhPT0gdGhpcy5vcmlnaW5hbFNoZWxsVmlzaWJsZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmvJTnpLrliqjnlLvnu5PmnZ/vvJrpgJrov4flpI3pgInmoYbov5jljp/lpJblo7PnirbmgIEnKTtcbiAgICAgICAgICAgICAgICBzaGVsbENoZWNrYm94LmNsaWNrKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIC8vIOebtOaOpemAmui/h0NPTkZJR+i/mOWOn1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5ryU56S65Yqo55S757uT5p2f77ya55u05o6l6YCa6L+HQ09ORklH6L+Y5Y6f5aSW5aOz54q25oCBJyk7XG4gICAgICAgICAgICAgIGlmICh3aW5kb3cuQ09ORklHKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LkNPTkZJRy5zaGVsbC52aXNpYmxlID0gdGhpcy5vcmlnaW5hbFNoZWxsVmlzaWJsZTtcbiAgICAgICAgICAgICAgICAvLyDop6blj5HlpJblo7Pmm7TmlrBcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jb250cm9sbGVycyAmJiB0aGlzLmNvbnRyb2xsZXJzLm9uU2hlbGxDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlcnMub25TaGVsbENoYW5nZSh3aW5kb3cuQ09ORklHLnNoZWxsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgLy8g6YeN572u5omA5pyJ5Y+C5pWwXG4gICAgICAgICAgdGhpcy5yZXNldEFsbFBhcmFtcygpO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiB2aWV3UHJvbWlzZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOW8gOWni+a8lOekuuWKqOeUu1xuICAgKi9cbiAgc3RhcnQoKSB7XG4gICAgY29uc29sZS5sb2coJ0RlbW9BbmltYXRpb24uc3RhcnTooqvosIPnlKgnKTtcbiAgICBjb25zb2xlLmxvZygndGhpcy5pc1BsYXlpbmc6JywgdGhpcy5pc1BsYXlpbmcpO1xuICAgIFxuICAgIGlmICh0aGlzLmlzUGxheWluZykge1xuICAgICAgY29uc29sZS5sb2coJ+a8lOekuuW3suWcqOaSreaUvuS4re+8jOi/lOWbnicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyDkv53lrZjljp/lp4vlgY/ovaznlLXljovlgLzvvIznlKjkuo7ms6LlvaLmmL7npLrml7bkv53mjIHlm7rlrprkvY3nva5cbiAgICB0aGlzLm9yaWdpbmFsVm9sdGFnZXMgPSB7XG4gICAgICBob3Jpem9udGFsOiBDT05GSUcuZGVmbGVjdGlvbi5ob3Jpem9udGFsLnZvbHRhZ2UsXG4gICAgICB2ZXJ0aWNhbDogQ09ORklHLmRlZmxlY3Rpb24udmVydGljYWwudm9sdGFnZVxuICAgIH07XG4gICAgXG4gICAgLy8g5L+d5a2Y5Y6f5aeL5aSW5aOz5pi+56S654q25oCBXG4gICAgdGhpcy5vcmlnaW5hbFNoZWxsVmlzaWJsZSA9IENPTkZJRy5zaGVsbCA/IENPTkZJRy5zaGVsbC52aXNpYmxlIDogdHJ1ZTtcbiAgICBjb25zb2xlLmxvZygn5L+d5a2Y5Y6f5aeL5aSW5aOz54q25oCBOicsIHRoaXMub3JpZ2luYWxTaGVsbFZpc2libGUpO1xuICAgIFxuICAgIC8vIOS/neWtmOaegeadv+WOn+Wni+S4jemAj+aYjuW6puW5tuiuvue9ruS4ujUwJe+8jOaPkOmrmOmAj+aYjuW6puS7peS+v+abtOWlveWcsOinguWvn+eUteWtkOadn1xuICAgIHRoaXMuc2V0UGxhdGVPcGFjaXR5KDAuNSk7XG4gICAgXG4gICAgLy8g5oqY5Y+gR1VJ6Z2i5p2/77yM6YG/5YWN5ryU56S65pe255WM6Z2i5bmy5omwXG4gICAgdGhpcy5jb2xsYXBzZUd1aUZvbGRlcnMoKTtcbiAgICBcbiAgICB0aGlzLmlzUGxheWluZyA9IHRydWU7XG4gICAgdGhpcy5jdXJyZW50U3RlcCA9IDA7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ+S/neWtmOWOn+Wni+WPguaVsCcpO1xuICAgIC8vIOS/neWtmOWOn+Wni+WPguaVsFxuICAgIHRoaXMuc2F2ZU9yaWdpbmFsUGFyYW1zKCk7XG4gICAgXG4gICAgLy8g5Zyo5Yqo55S75byA5aeL5pe25ZCv55So55S15a2Q5p2f77yI6K6+572u6YCC5b2T55qE5by65bqm77yJXG4gICAgQ09ORklHLmJlYW0uaW50ZW5zaXR5ID0gMC45O1xuICAgIGlmICh0aGlzLmNvbnRyb2xsZXJzLm9uQmVhbUNoYW5nZSkge1xuICAgICAgdGhpcy5jb250cm9sbGVycy5vbkJlYW1DaGFuZ2UoQ09ORklHLmJlYW0pO1xuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZygn5byA5aeL56ys5LiA5q2l77yM6LCD55SocGxheUN1cnJlbnRTdGVwJyk7XG4gICAgLy8g5byA5aeL56ys5LiA5q2lXG4gICAgdGhpcy5wbGF5Q3VycmVudFN0ZXAoKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOWBnOatoua8lOekuuWKqOeUu1xuICAgKi9cbiAgc3RvcCgpIHtcbiAgICB0aGlzLmlzUGxheWluZyA9IGZhbHNlO1xuICAgIFxuICAgIC8vIOWBnOatoui/nue7reeUteWtkOadn1xuICAgIHRoaXMuc3RvcENvbnRpbnVvdXNFbGVjdHJvbkJlYW0oKTtcbiAgICBcbiAgICAvLyDlgZzmraLmiYDmnInliqjnlLtcbiAgICB0aGlzLnR3ZWVucy5mb3JFYWNoKHR3ZWVuID0+IHtcbiAgICAgIGlmICh0d2VlbiAmJiB0eXBlb2YgdHdlZW4uc3RvcCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0d2Vlbi5zdG9wKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy50d2VlbnMgPSBbXTtcbiAgICBcbiAgICAvLyDmuIXpmaTmiYDmnInnspLlrZDvvIjkvb/nlKjlr7nosaHmsaDkvJjljJbvvIlcbiAgICB0aGlzLmNsZWFyQWxsUGFydGljbGVzKCk7XG4gICAgXG4gICAgLy8g5riF55CG5a+56LGh5rGg5Lit55qE5omA5pyJ5rS76LeD57KS5a2QXG4gICAgaWYgKHRoaXMucGFydGljbGVQb29sKSB7XG4gICAgICB0aGlzLnBhcnRpY2xlUG9vbC5jbGVhckFsbCgpO1xuICAgIH1cbiAgICBcbiAgICAvLyDmgaLlpI3ljp/lp4vlgY/ovaznlLXljovlgLxcbiAgICBpZiAodGhpcy5vcmlnaW5hbFZvbHRhZ2VzKSB7XG4gICAgICBDT05GSUcuZGVmbGVjdGlvbi5ob3Jpem9udGFsLnZvbHRhZ2UgPSB0aGlzLm9yaWdpbmFsVm9sdGFnZXMuaG9yaXpvbnRhbDtcbiAgICAgIENPTkZJRy5kZWZsZWN0aW9uLnZlcnRpY2FsLnZvbHRhZ2UgPSB0aGlzLm9yaWdpbmFsVm9sdGFnZXMudmVydGljYWw7XG4gICAgICB0aGlzLm9yaWdpbmFsVm9sdGFnZXMgPSBudWxsO1xuICAgIH1cbiAgICBcbiAgICAvLyDmuIXnkIbkv53lrZjnmoTlpJblo7PnirbmgIFcbiAgICB0aGlzLm9yaWdpbmFsU2hlbGxWaXNpYmxlID0gdW5kZWZpbmVkO1xuICAgIFxuICAgIC8vIOaBouWkjeaegeadv+WOn+Wni+S4jemAj+aYjuW6plxuICAgIHRoaXMucmVzdG9yZVBsYXRlT3BhY2l0eSgpO1xuICAgIFxuICAgIC8vIOaBouWkjUdVSemdouadv+eKtuaAgVxuICAgIHRoaXMucmVzdG9yZUd1aUZvbGRlcnMoKTtcbiAgICBcbiAgICAvLyDph43nva7miYDmnInlj4LmlbBcbiAgICB0aGlzLnJlc2V0QWxsUGFyYW1zKCk7XG4gICAgXG4gICAgLy8g5riF6Zmk5omA5pyJ5Zue6LCD5ZKM5a6a5pe25ZmoXG4gICAgdGhpcy5zdGVwQ2FsbGJhY2tzLmZvckVhY2goY2FsbGJhY2sgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGNhbGxiYWNrKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnN0ZXBDYWxsYmFja3MgPSBbXTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOaSreaUvuW9k+WJjeatpemqpFxuICAgKi9cbiAgcGxheUN1cnJlbnRTdGVwKCkge1xuICAgIGNvbnNvbGUubG9nKCdwbGF5Q3VycmVudFN0ZXDooqvosIPnlKgnKTtcbiAgICBjb25zb2xlLmxvZygndGhpcy5pc1BsYXlpbmc6JywgdGhpcy5pc1BsYXlpbmcpO1xuICAgIGNvbnNvbGUubG9nKCd0aGlzLmN1cnJlbnRTdGVwOicsIHRoaXMuY3VycmVudFN0ZXApO1xuICAgIGNvbnNvbGUubG9nKCd0aGlzLmFuaW1hdGlvblN0ZXBzLmxlbmd0aDonLCB0aGlzLmFuaW1hdGlvblN0ZXBzLmxlbmd0aCk7XG4gICAgXG4gICAgaWYgKCF0aGlzLmlzUGxheWluZyB8fCB0aGlzLmN1cnJlbnRTdGVwID49IHRoaXMuYW5pbWF0aW9uU3RlcHMubGVuZ3RoKSB7XG4gICAgICBjb25zb2xlLmxvZygn5ryU56S657uT5p2f5oiW5bey5YGc5q2i77yM6LCD55Soc3RvcCcpO1xuICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIC8vIOWBnOatouS5i+WJjeeahOi/nue7reeUteWtkOadn1xuICAgIHRoaXMuc3RvcENvbnRpbnVvdXNFbGVjdHJvbkJlYW0oKTtcbiAgICBcbiAgICBjb25zdCBzdGVwID0gdGhpcy5hbmltYXRpb25TdGVwc1t0aGlzLmN1cnJlbnRTdGVwXTtcbiAgICBjb25zb2xlLmxvZygn5b2T5YmN5q2l6aqkOicsIHN0ZXApO1xuICAgIFxuICAgIC8vIOinpuWPkeatpemqpOW8gOWni+S6i+S7tlxuICAgIGlmICh0aGlzLm9uU3RlcFN0YXJ0KSB7XG4gICAgICBjb25zb2xlLmxvZygn6Kem5Y+R5q2l6aqk5byA5aeL5LqL5Lu2Jyk7XG4gICAgICB0aGlzLm9uU3RlcFN0YXJ0KHRoaXMuY3VycmVudFN0ZXAsIHN0ZXApO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZygnb25TdGVwU3RhcnTmnKrorr7nva4nKTtcbiAgICB9XG4gICAgXG4gICAgLy8g6K6+572u5q2l6aqkXG4gICAgY29uc29sZS5sb2coJ+aJp+ihjOatpemqpHNldHVwJyk7XG4gICAgY29uc3Qgc2V0dXBQcm9taXNlID0gc3RlcC5zZXR1cCA/IHN0ZXAuc2V0dXAoKSA6IFByb21pc2UucmVzb2x2ZSgpO1xuICAgIFxuICAgIC8vIOatpemqpOWujOaIkOWQju+8jOe7p+e7reS4i+S4gOatpVxuICAgIHNldHVwUHJvbWlzZS50aGVuKCgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCfmraXpqqRzZXR1cOWujOaIkO+8jOiuvue9ruS4i+S4gOatpeWumuaXtuWZqO+8jOaMgee7reaXtumXtDonLCBzdGVwLmR1cmF0aW9uKTtcbiAgICAgIGNvbnN0IGNhbGxiYWNrID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCflrprml7blmajop6blj5HvvIzov5vlhaXkuIvkuIDmraUnKTtcbiAgICAgICAgdGhpcy5jdXJyZW50U3RlcCsrO1xuICAgICAgICB0aGlzLnBsYXlDdXJyZW50U3RlcCgpO1xuICAgICAgfSwgc3RlcC5kdXJhdGlvbik7XG4gICAgICBcbiAgICAgIHRoaXMuc3RlcENhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgICAgIGNvbnNvbGUubG9nKCflrprml7blmajlt7Lmt7vliqDliLBzdGVwQ2FsbGJhY2tzJyk7XG4gICAgfSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcign5q2l6aqkc2V0dXDlh7rplJk6JywgZXJyb3IpO1xuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICog6IGa54Sm5Yiw57uE5Lu2XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb21wb25lbnRLZXkgLSDnu4Tku7bplK7lkI1cbiAgICogQHJldHVybnMge1Byb21pc2V9IOWKqOeUu+WujOaIkOeahFByb21pc2VcbiAgICovXG4gIGZvY3VzT25Db21wb25lbnQoY29tcG9uZW50S2V5KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgY29uc3QgY29tcG9uZW50ID0gdGhpcy5jb21wb25lbnRzW2NvbXBvbmVudEtleV07XG4gICAgICBpZiAoIWNvbXBvbmVudCkge1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8g6K6h566X55uu5qCH5L2N572uXG4gICAgICBjb25zdCB0YXJnZXRQb3NpdGlvbiA9IGNvbXBvbmVudC5wb3NpdGlvbi5jbG9uZSgpO1xuICAgICAgY29uc3Qgb2Zmc2V0ID0gbmV3IFRIUkVFLlZlY3RvcjMoXG4gICAgICAgIENPTkZJRy5kZW1vQW5pbWF0aW9uLmNhbWVyYU9mZnNldC54LFxuICAgICAgICBDT05GSUcuZGVtb0FuaW1hdGlvbi5jYW1lcmFPZmZzZXQueSxcbiAgICAgICAgQ09ORklHLmRlbW9BbmltYXRpb24uY2FtZXJhT2Zmc2V0LnpcbiAgICAgICk7XG4gICAgICBcbiAgICAgIC8vIOWIm+W7uuebuOacuuS9jee9ruWKqOeUu1xuICAgICAgY29uc3QgcG9zVHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4odGhpcy5jb250cm9sbGVycy5jYW1lcmEucG9zaXRpb24sIHR3ZWVuR3JvdXApXG4gICAgICAgIC50byh7XG4gICAgICAgICAgeDogdGFyZ2V0UG9zaXRpb24ueCArIG9mZnNldC54LFxuICAgICAgICAgIHk6IHRhcmdldFBvc2l0aW9uLnkgKyBvZmZzZXQueSxcbiAgICAgICAgICB6OiB0YXJnZXRQb3NpdGlvbi56ICsgb2Zmc2V0LnpcbiAgICAgICAgfSwgQ09ORklHLmRlbW9BbmltYXRpb24uYW5pbWF0aW9uRHVyYXRpb24pXG4gICAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLkN1YmljLkluT3V0KVxuICAgICAgICAub25Db21wbGV0ZShyZXNvbHZlKVxuICAgICAgICAuc3RhcnQoKTtcbiAgICAgIFxuICAgICAgLy8g5Yib5bu65o6n5Yi25Zmo55uu5qCH54K55Yqo55S7XG4gICAgICBjb25zdCB0YXJnZXRUd2VlbiA9IG5ldyBUV0VFTi5Ud2Vlbih0aGlzLmNvbnRyb2xsZXJzLmNvbnRyb2xzLnRhcmdldCwgdHdlZW5Hcm91cClcbiAgICAgICAgLnRvKHtcbiAgICAgICAgICB4OiB0YXJnZXRQb3NpdGlvbi54LFxuICAgICAgICAgIHk6IHRhcmdldFBvc2l0aW9uLnksXG4gICAgICAgICAgejogdGFyZ2V0UG9zaXRpb24uelxuICAgICAgICB9LCBDT05GSUcuZGVtb0FuaW1hdGlvbi5hbmltYXRpb25EdXJhdGlvbilcbiAgICAgICAgLmVhc2luZyhUV0VFTi5FYXNpbmcuQ3ViaWMuSW5PdXQpXG4gICAgICAgIC5zdGFydCgpO1xuICAgICAgXG4gICAgICB0aGlzLnR3ZWVucy5wdXNoKHBvc1R3ZWVuLCB0YXJnZXRUd2Vlbik7XG4gICAgfSk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDph43nva7op4blm75cbiAgICogQHJldHVybnMge1Byb21pc2V9IOWKqOeUu+WujOaIkOeahFByb21pc2VcbiAgICovXG4gIHJlc2V0VmlldygpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgLy8g6YeN572u55u45py65L2N572uXG4gICAgY29uc3QgcG9zVHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4odGhpcy5jb250cm9sbGVycy5jYW1lcmEucG9zaXRpb24sIHR3ZWVuR3JvdXApXG4gICAgICAudG8oeyBcbiAgICAgICAgeDogQ09ORklHLmNhbWVyYS5wb3NpdGlvbi54LCBcbiAgICAgICAgeTogQ09ORklHLmNhbWVyYS5wb3NpdGlvbi55LCBcbiAgICAgICAgejogQ09ORklHLmNhbWVyYS5wb3NpdGlvbi56IFxuICAgICAgfSwgQ09ORklHLmRlbW9BbmltYXRpb24uYW5pbWF0aW9uRHVyYXRpb24pXG4gICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5DdWJpYy5Jbk91dClcbiAgICAgIC5vbkNvbXBsZXRlKHJlc29sdmUpXG4gICAgICAuc3RhcnQoKTtcbiAgICAgIFxuICAgICAgICAgIC8vIOmHjee9ruaOp+WItuWZqOebruagh+eCuVxuICAgIGNvbnN0IHRhcmdldFR3ZWVuID0gbmV3IFRXRUVOLlR3ZWVuKHRoaXMuY29udHJvbGxlcnMuY29udHJvbHMudGFyZ2V0LCB0d2Vlbkdyb3VwKVxuICAgICAgLnRvKHsgXG4gICAgICAgIHg6IENPTkZJRy5jYW1lcmEudGFyZ2V0LngsIFxuICAgICAgICB5OiBDT05GSUcuY2FtZXJhLnRhcmdldC55LCBcbiAgICAgICAgejogQ09ORklHLmNhbWVyYS50YXJnZXQueiBcbiAgICAgIH0sIENPTkZJRy5kZW1vQW5pbWF0aW9uLmFuaW1hdGlvbkR1cmF0aW9uKVxuICAgICAgLmVhc2luZyhUV0VFTi5FYXNpbmcuQ3ViaWMuSW5PdXQpXG4gICAgICAuc3RhcnQoKTtcbiAgICAgIFxuICAgICAgdGhpcy50d2VlbnMucHVzaChwb3NUd2VlbiwgdGFyZ2V0VHdlZW4pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9ruiHquWumuS5ieinhuWbvlxuICAgKiBAcGFyYW0ge09iamVjdH0gdmlld0NvbmZpZyAtIOinhuWbvumFjee9rlxuICAgKiBAcGFyYW0ge09iamVjdH0gdmlld0NvbmZpZy5wb3NpdGlvbiAtIOaRhOWDj+WktOS9jee9riB7eCwgeSwgen1cbiAgICogQHBhcmFtIHtPYmplY3R9IHZpZXdDb25maWcudGFyZ2V0IC0g6KeC5a+f55uu5qCHIHt4LCB5LCB6fVxuICAgKiBAcGFyYW0ge251bWJlcn0gZHVyYXRpb24gLSDliqjnlLvmjIHnu63ml7bpl7TvvIjlj6/pgInvvIlcbiAgICogQHJldHVybnMge1Byb21pc2V9IOWKqOeUu+WujOaIkOeahFByb21pc2VcbiAgICovXG4gIHNldEN1c3RvbVZpZXcodmlld0NvbmZpZywgZHVyYXRpb24gPSBDT05GSUcuZGVtb0FuaW1hdGlvbi5hbmltYXRpb25EdXJhdGlvbikge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIC8vIOiuvue9ruebuOacuuS9jee9rlxuICAgICAgY29uc3QgcG9zVHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4odGhpcy5jb250cm9sbGVycy5jYW1lcmEucG9zaXRpb24sIHR3ZWVuR3JvdXApXG4gICAgICAgIC50byh7IFxuICAgICAgICAgIHg6IHZpZXdDb25maWcucG9zaXRpb24ueCwgXG4gICAgICAgICAgeTogdmlld0NvbmZpZy5wb3NpdGlvbi55LCBcbiAgICAgICAgICB6OiB2aWV3Q29uZmlnLnBvc2l0aW9uLnogXG4gICAgICAgIH0sIGR1cmF0aW9uKVxuICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5DdWJpYy5Jbk91dClcbiAgICAgICAgLm9uQ29tcGxldGUocmVzb2x2ZSlcbiAgICAgICAgLnN0YXJ0KCk7XG4gICAgICAgIFxuICAgICAgLy8g6K6+572u5o6n5Yi25Zmo55uu5qCH54K5XG4gICAgICBjb25zdCB0YXJnZXRUd2VlbiA9IG5ldyBUV0VFTi5Ud2Vlbih0aGlzLmNvbnRyb2xsZXJzLmNvbnRyb2xzLnRhcmdldCwgdHdlZW5Hcm91cClcbiAgICAgICAgLnRvKHsgXG4gICAgICAgICAgeDogdmlld0NvbmZpZy50YXJnZXQueCwgXG4gICAgICAgICAgeTogdmlld0NvbmZpZy50YXJnZXQueSwgXG4gICAgICAgICAgejogdmlld0NvbmZpZy50YXJnZXQueiBcbiAgICAgICAgfSwgZHVyYXRpb24pXG4gICAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLkN1YmljLkluT3V0KVxuICAgICAgICAuc3RhcnQoKTtcbiAgICAgICAgXG4gICAgICB0aGlzLnR3ZWVucy5wdXNoKHBvc1R3ZWVuLCB0YXJnZXRUd2Vlbik7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu66L+e57ut55S15a2Q5p2f5rWBXG4gICAqIEBwYXJhbSB7VEhSRUUuVmVjdG9yM30gc3RhcnRQb3MgLSDotbflp4vkvY3nva5cbiAgICogQHBhcmFtIHtUSFJFRS5WZWN0b3IzfSBlbmRQb3MgLSDnu5PmnZ/kvY3nva5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGNvdW50IC0g57KS5a2Q5pWw6YePXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvbiAtIOWKqOeUu+aMgee7reaXtumXtFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkNvbXBsZXRlIC0g5a6M5oiQ5Zue6LCDXG4gICAqL1xuICBjcmVhdGVFbGVjdHJvblBhcnRpY2xlcyhzdGFydFBvcywgZW5kUG9zLCBjb3VudCA9IDEwLCBkdXJhdGlvbiA9IDIwMDAsIG9uQ29tcGxldGUgPSBudWxsKSB7XG4gICAgLy8g5L2/55So6YWN572u5Lit55qE5Y+R5bCE6aKR546H77yM5aaC5p6c5rKh5pyJ5YiZ5L2/55So6buY6K6k5YC8XG4gICAgY29uc3QgZW1pc3Npb25SYXRlID0gQ09ORklHLmRlbW9BbmltYXRpb24uZWxlY3Ryb25QYXJ0aWNsZS5lbWlzc2lvblJhdGUgfHwgODtcbiAgICBjb25zdCBwYXJ0aWNsZUludGVydmFsID0gMTAwMCAvIGVtaXNzaW9uUmF0ZTsgLy8g5qC55o2u5Y+R5bCE6aKR546H6K6h566X6Ze06ZqU5pe26Ze077yI5q+r56eS77yJXG4gICAgXG4gICAgLy8g6K6h566X55S15a2Q5p2f55qE5oC76Lev5b6E6ZW/5bqm77yM55So5LqO56Gu5a6a57KS5a2Q55qE55Sf5ZG95ZGo5pyfXG4gICAgY29uc3QgYmVhbURpc3RhbmNlID0gc3RhcnRQb3MuZGlzdGFuY2VUbyhlbmRQb3MpO1xuICAgIGNvbnN0IHBhcnRpY2xlU3BlZWQgPSBiZWFtRGlzdGFuY2UgLyAxNTAwOyAvLyDnspLlrZDnp7vliqjpgJ/luqbvvIjljZXkvY0v5q+r56eS77yJXG4gICAgY29uc3QgcGFydGljbGVMaWZldGltZSA9IGJlYW1EaXN0YW5jZSAvIHBhcnRpY2xlU3BlZWQgKyA1MDA7IC8vIOeykuWtkOeUn+WRveWRqOacn+eojemVv+S4gOS6m1xuICAgIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgLy8g5L2/55SoIHNldFRpbWVvdXQg5p2l5a6e546w55yf5q2j55qE5a6e5pe25Y+R5bCEXG4gICAgICBjb25zdCB0aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIC8vIOS7juWvueixoeaxoOiOt+WPlueykuWtkO+8jOiAjOS4jeaYr+WIm+W7uuaWsOeahCAo5oCn6IO95LyY5YyWKVxuICAgICAgICBjb25zdCBwYXJ0aWNsZSA9IHRoaXMucGFydGljbGVQb29sLmdldFBhcnRpY2xlKCk7XG4gICAgICAgIFxuICAgICAgICAvLyDorr7nva7liJ3lp4vkvY3nva5cbiAgICAgICAgcGFydGljbGUucG9zaXRpb24uY29weShzdGFydFBvcyk7XG4gICAgICAgIFxuICAgICAgICAvLyDmt7vliqDlj5HlsITmlYjmnpzvvJrnspLlrZDku47lsI/liLDmraPluLjlpKflsI9cbiAgICAgICAgcGFydGljbGUuc2NhbGUuc2V0U2NhbGFyKDAuMSk7XG4gICAgICAgIFxuICAgICAgICAvLyDmt7vliqDliLDlnLrmma9cbiAgICAgICAgdGhpcy5zY2VuZS5hZGQocGFydGljbGUpO1xuICAgICAgICB0aGlzLnBhcnRpY2xlcy5wdXNoKHBhcnRpY2xlKTtcbiAgICAgICAgXG4gICAgICAgIC8vIOWIm+W7uueykuWtkOWHuueOsOWKqOeUu1xuICAgICAgICBjb25zdCBhcHBlYXJUd2VlbiA9IG5ldyBUV0VFTi5Ud2VlbihwYXJ0aWNsZS5zY2FsZSwgdHdlZW5Hcm91cClcbiAgICAgICAgICAudG8oeyB4OiAxLCB5OiAxLCB6OiAxIH0sIDIwMClcbiAgICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5CYWNrLk91dClcbiAgICAgICAgICAuc3RhcnQoKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMudHdlZW5zLnB1c2goYXBwZWFyVHdlZW4pO1xuICAgICAgICBcbiAgICAgICAgLy8g5Yib5bu66L+e57ut56e75Yqo5Yqo55S7IC0g57KS5a2Q5Lya57un57ut5ZCR5YmN6L+Q5Yqo6ICM5LiN5piv5ZyoZW5kUG9z5YGc5q2iXG4gICAgICAgIGNvbnN0IGV4dGVuZGVkRW5kUG9zID0gdGhpcy5jYWxjdWxhdGVFeHRlbmRlZEVuZFBvc2l0aW9uKHN0YXJ0UG9zLCBlbmRQb3MpO1xuICAgICAgICBjb25zdCBtb3ZlRHVyYXRpb24gPSBwYXJ0aWNsZUxpZmV0aW1lO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgdHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4ocGFydGljbGUucG9zaXRpb24sIHR3ZWVuR3JvdXApXG4gICAgICAgICAgLnRvKHtcbiAgICAgICAgICAgIHg6IGV4dGVuZGVkRW5kUG9zLngsXG4gICAgICAgICAgICB5OiBleHRlbmRlZEVuZFBvcy55LFxuICAgICAgICAgICAgejogZXh0ZW5kZWRFbmRQb3MuelxuICAgICAgICAgIH0sIG1vdmVEdXJhdGlvbilcbiAgICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5MaW5lYXIuTm9uZSlcbiAgICAgICAgICAub25VcGRhdGUoKCkgPT4ge1xuICAgICAgICAgICAgLy8g5b2T57KS5a2Q5o6l6L+R6I2n5YWJ5bGP5pe277yM5re75Yqg5Y+R5YWJ5pWI5p6cXG4gICAgICAgICAgICBjb25zdCBkaXN0YW5jZVRvU2NyZWVuID0gcGFydGljbGUucG9zaXRpb24uZGlzdGFuY2VUbyhlbmRQb3MpO1xuICAgICAgICAgICAgaWYgKGRpc3RhbmNlVG9TY3JlZW4gPCAwLjEpIHtcbiAgICAgICAgICAgICAgLy8g5Zyo6I2n5YWJ5bGP5LiK5re75Yqg5Y+R5YWJ54K5XG4gICAgICAgICAgICAgIGlmICh0aGlzLmNvbXBvbmVudHMgJiYgdGhpcy5jb21wb25lbnRzLnNjcmVlbikge1xuICAgICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50cy5zY3JlZW4uYWRkR2xvd1BvaW50KHBhcnRpY2xlLnBvc2l0aW9uLmNsb25lKCkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICAub25Db21wbGV0ZSgoKSA9PiB7XG4gICAgICAgICAgICAvLyDmnIDlkI7kuIDkuKrnspLlrZDlrozmiJDml7bop6blj5Hlm57osINcbiAgICAgICAgICAgIGlmIChpID09PSBjb3VudCAtIDEgJiYgb25Db21wbGV0ZSkge1xuICAgICAgICAgICAgICBvbkNvbXBsZXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIOS7juWcuuaZr+S4reenu+mZpOeykuWtkFxuICAgICAgICAgICAgdGhpcy5zY2VuZS5yZW1vdmUocGFydGljbGUpO1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnBhcnRpY2xlcy5pbmRleE9mKHBhcnRpY2xlKTtcbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8g5b2S6L+Y57KS5a2Q5Yiw5a+56LGh5rGg77yM6ICM5LiN5piv6ZSA5q+BICjmgKfog73kvJjljJYpXG4gICAgICAgICAgICB0aGlzLnBhcnRpY2xlUG9vbC5yZWxlYXNlUGFydGljbGUocGFydGljbGUpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLnN0YXJ0KCk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLnR3ZWVucy5wdXNoKHR3ZWVuKTtcbiAgICAgIH0sIGkgKiBwYXJ0aWNsZUludGVydmFsKTtcbiAgICAgIFxuICAgICAgLy8g5L+d5a2YdGltZW91dOS7peS+v+WcqOWBnOatouWKqOeUu+aXtuWPr+S7pea4hemZpFxuICAgICAgdGhpcy5zdGVwQ2FsbGJhY2tzLnB1c2godGltZW91dCk7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog6K6h566X5bu25Ly455qE57uT5p2f5L2N572u77yM6K6p55S15a2Q57KS5a2Q55yL6LW35p2l57un57ut6L+Q5YqoXG4gICAqIEBwYXJhbSB7VEhSRUUuVmVjdG9yM30gc3RhcnRQb3MgLSDotbflp4vkvY3nva5cbiAgICogQHBhcmFtIHtUSFJFRS5WZWN0b3IzfSBlbmRQb3MgLSDljp/lp4vnu5PmnZ/kvY3nva5cbiAgICogQHJldHVybnMge1RIUkVFLlZlY3RvcjN9IOW7tuS8uOeahOe7k+adn+S9jee9rlxuICAgKi9cbiAgY2FsY3VsYXRlRXh0ZW5kZWRFbmRQb3NpdGlvbihzdGFydFBvcywgZW5kUG9zKSB7XG4gICAgLy8g6K6h566X6L+Q5Yqo5pa55ZCR5ZCR6YePXG4gICAgY29uc3QgZGlyZWN0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoKS5zdWJWZWN0b3JzKGVuZFBvcywgc3RhcnRQb3MpLm5vcm1hbGl6ZSgpO1xuICAgIFxuICAgIC8vIOWwhue7k+adn+S9jee9ruWQkeWJjeW7tuS8uO+8jOiuqeeykuWtkOeci+i1t+adpee7p+e7rei/kOWKqFxuICAgIGNvbnN0IGV4dGVuc2lvbkRpc3RhbmNlID0gMi4wOyAvLyDlu7bkvLjot53nprtcbiAgICBjb25zdCBleHRlbmRlZEVuZFBvcyA9IGVuZFBvcy5jbG9uZSgpLmFkZChkaXJlY3Rpb24ubXVsdGlwbHlTY2FsYXIoZXh0ZW5zaW9uRGlzdGFuY2UpKTtcbiAgICBcbiAgICByZXR1cm4gZXh0ZW5kZWRFbmRQb3M7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliJvlu7rov57nu63nlLXlrZDmnZ/mtYHvvIjml6DpmZDlvqrnjq/nm7TliLDlgZzmraLvvIlcbiAgICogQHBhcmFtIHtUSFJFRS5WZWN0b3IzfSBzdGFydFBvcyAtIOi1t+Wni+S9jee9rlxuICAgKiBAcGFyYW0ge1RIUkVFLlZlY3RvcjN9IGVuZFBvcyAtIOe7k+adn+S9jee9rlxuICAgKi9cbiAgc3RhcnRDb250aW51b3VzRWxlY3Ryb25CZWFtKHN0YXJ0UG9zLCBlbmRQb3MpIHtcbiAgICAvLyDlpoLmnpzlt7Lnu4/mnInov57nu63nlLXlrZDmnZ/lnKjov5DooYzvvIzlhYjlgZzmraLlroNcbiAgICB0aGlzLnN0b3BDb250aW51b3VzRWxlY3Ryb25CZWFtKCk7XG4gICAgXG4gICAgY29uc3QgZW1pc3Npb25SYXRlID0gQ09ORklHLmRlbW9BbmltYXRpb24uZWxlY3Ryb25QYXJ0aWNsZS5lbWlzc2lvblJhdGUgfHwgODtcbiAgICBjb25zdCBwYXJ0aWNsZUludGVydmFsID0gMTAwMCAvIGVtaXNzaW9uUmF0ZTtcbiAgICBcbiAgICAvLyDorqHnrpfnlLXlrZDmnZ/lj4LmlbBcbiAgICBjb25zdCBiZWFtRGlzdGFuY2UgPSBzdGFydFBvcy5kaXN0YW5jZVRvKGVuZFBvcyk7XG4gICAgY29uc3QgcGFydGljbGVTcGVlZCA9IGJlYW1EaXN0YW5jZSAvIDE1MDA7IC8vIOeykuWtkOenu+WKqOmAn+W6plxuICAgIGNvbnN0IHBhcnRpY2xlTGlmZXRpbWUgPSBiZWFtRGlzdGFuY2UgLyBwYXJ0aWNsZVNwZWVkICsgMTAwMDsgLy8g5bu26ZW/55Sf5ZG95ZGo5pyfXG4gICAgXG4gICAgLy8g5Yib5bu66L+e57ut5Y+R5bCE55qE5a6a5pe25ZmoXG4gICAgdGhpcy5jb250aW51b3VzQmVhbUludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmlzUGxheWluZykgcmV0dXJuOyAvLyDlpoLmnpzliqjnlLvlt7LlgZzmraLvvIzkuI3lho3lj5HlsITmlrDnspLlrZBcbiAgICAgIFxuICAgICAgLy8g5Yib5bu65Y2V5Liq55S15a2Q57KS5a2QIC0g5L2/55So5LyY5YyW55qE5p2Q6LSoXG4gICAgICBjb25zdCBnZW9tZXRyeSA9IG5ldyBUSFJFRS5TcGhlcmVHZW9tZXRyeShDT05GSUcuZGVtb0FuaW1hdGlvbi5lbGVjdHJvblBhcnRpY2xlLnNpemUsIDYsIDYpO1xuICAgICAgY29uc3QgcGFydGljbGVNYXQgPSB0aGlzLnBhcnRpY2xlTWF0ZXJpYWwuY2xvbmUoKTtcbiAgICAgIFxuICAgICAgLy8g56Gu5L+d57KS5a2Q5p2Q6LSo5YW35pyJ5pyA5L2z5Y+v6KeB5oCnXG4gICAgICBwYXJ0aWNsZU1hdC5kZXB0aFRlc3QgPSB0cnVlOyAgLy8g5ZCv55So5rex5bqm5rWL6K+V77yM56Gu5L+d6KKr5aSW5aOz5q2j56Gu6YGu5oyhXG4gICAgICBwYXJ0aWNsZU1hdC5kZXB0aFdyaXRlID0gZmFsc2U7XG4gICAgICBwYXJ0aWNsZU1hdC5ibGVuZGluZyA9IFRIUkVFLkFkZGl0aXZlQmxlbmRpbmc7XG4gICAgICBcbiAgICAgIGNvbnN0IHBhcnRpY2xlID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIHBhcnRpY2xlTWF0KTtcbiAgICAgIFxuICAgICAgLy8g6K6+572u57KS5a2Q55qE5riy5p+T6aG65bqP77yM56Gu5L+d5Zyo5p6B5p2/5LmL5ZCO5riy5p+TXG4gICAgICBwYXJ0aWNsZS5yZW5kZXJPcmRlciA9IDEwO1xuICAgICAgXG4gICAgICAvLyDorr7nva7liJ3lp4vkvY3nva5cbiAgICAgIHBhcnRpY2xlLnBvc2l0aW9uLmNvcHkoc3RhcnRQb3MpO1xuICAgICAgcGFydGljbGUuc2NhbGUuc2V0U2NhbGFyKDAuMSk7XG4gICAgICBcbiAgICAgIC8vIOa3u+WKoOWIsOWcuuaZr1xuICAgICAgdGhpcy5zY2VuZS5hZGQocGFydGljbGUpO1xuICAgICAgdGhpcy5wYXJ0aWNsZXMucHVzaChwYXJ0aWNsZSk7XG4gICAgICBcbiAgICAgIC8vIOeykuWtkOWHuueOsOWKqOeUu1xuICAgICAgY29uc3QgYXBwZWFyVHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4ocGFydGljbGUuc2NhbGUsIHR3ZWVuR3JvdXApXG4gICAgICAgIC50byh7IHg6IDEsIHk6IDEsIHo6IDEgfSwgMjAwKVxuICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5CYWNrLk91dClcbiAgICAgICAgLnN0YXJ0KCk7XG4gICAgICBcbiAgICAgIHRoaXMudHdlZW5zLnB1c2goYXBwZWFyVHdlZW4pO1xuICAgICAgXG4gICAgICAvLyDojrflj5blvZPliY3nlLXlrZDmnZ/ovajov7not6/lvoRcbiAgICAgIGNvbnN0IGJlYW1QYXRoID0gdGhpcy5nZXRDdXJyZW50QmVhbVBhdGgoc3RhcnRQb3MsIGVuZFBvcyk7XG4gICAgICBjb25zdCBleHRlbmRlZEVuZFBvcyA9IHRoaXMuY2FsY3VsYXRlRXh0ZW5kZWRFbmRQb3NpdGlvbihzdGFydFBvcywgZW5kUG9zKTtcbiAgICAgIFxuICAgICAgLy8g57KS5a2Q5rK/552A55S15a2Q5p2f6L2o6L+556e75Yqo5Yqo55S7XG4gICAgICBjb25zdCBtb3ZlVHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4oeyBwcm9ncmVzczogMCB9LCB0d2Vlbkdyb3VwKVxuICAgICAgICAudG8oeyBwcm9ncmVzczogMSB9LCBwYXJ0aWNsZUxpZmV0aW1lKVxuICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5MaW5lYXIuTm9uZSlcbiAgICAgICAgLm9uVXBkYXRlKChvYmopID0+IHtcbiAgICAgICAgICAvLyDmoLnmja7ov5vluqbmsr/nnYDnlLXlrZDmnZ/ot6/lvoTnp7vliqjnspLlrZBcbiAgICAgICAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMuZ2V0UG9zaXRpb25BbG9uZ0JlYW1QYXRoKGJlYW1QYXRoLCBvYmoucHJvZ3Jlc3MsIGV4dGVuZGVkRW5kUG9zKTtcbiAgICAgICAgICBwYXJ0aWNsZS5wb3NpdGlvbi5jb3B5KHBvc2l0aW9uKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyDlvZPnspLlrZDmjqXov5HojaflhYnlsY/ml7bvvIzmt7vliqDlj5HlhYnmlYjmnpxcbiAgICAgICAgICBjb25zdCBkaXN0YW5jZVRvU2NyZWVuID0gcGFydGljbGUucG9zaXRpb24uZGlzdGFuY2VUbyhlbmRQb3MpO1xuICAgICAgICAgIGlmIChkaXN0YW5jZVRvU2NyZWVuIDwgMC4xICYmICFwYXJ0aWNsZS5oYXNIaXRTY3JlZW4pIHtcbiAgICAgICAgICAgIHBhcnRpY2xlLmhhc0hpdFNjcmVlbiA9IHRydWU7IC8vIOmYsuatoumHjeWkjeinpuWPkVxuICAgICAgICAgICAgaWYgKHRoaXMuY29tcG9uZW50cyAmJiB0aGlzLmNvbXBvbmVudHMuc2NyZWVuKSB7XG4gICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50cy5zY3JlZW4uYWRkR2xvd1BvaW50KHBhcnRpY2xlLnBvc2l0aW9uLmNsb25lKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLm9uQ29tcGxldGUoKCkgPT4ge1xuICAgICAgICAgIC8vIOenu+mZpOeykuWtkFxuICAgICAgICAgIHRoaXMuc2NlbmUucmVtb3ZlKHBhcnRpY2xlKTtcbiAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMucGFydGljbGVzLmluZGV4T2YocGFydGljbGUpO1xuICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMucGFydGljbGVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGdlb21ldHJ5LmRpc3Bvc2UoKTtcbiAgICAgICAgICBwYXJ0aWNsZS5tYXRlcmlhbC5kaXNwb3NlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5zdGFydCgpO1xuICAgICAgXG4gICAgICB0aGlzLnR3ZWVucy5wdXNoKG1vdmVUd2Vlbik7XG4gICAgICBcbiAgICB9LCBwYXJ0aWNsZUludGVydmFsKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiOt+WPluW9k+WJjeeUteWtkOadn+i3r+W+hFxuICAgKiBAcGFyYW0ge1RIUkVFLlZlY3RvcjN9IHN0YXJ0UG9zIC0g6LW35aeL5L2N572uXG4gICAqIEBwYXJhbSB7VEhSRUUuVmVjdG9yM30gZW5kUG9zIC0g57uT5p2f5L2N572uXG4gICAqIEByZXR1cm5zIHtBcnJheTxUSFJFRS5WZWN0b3IzPn0g55S15a2Q5p2f6Lev5b6E54K55pWw57uEXG4gICAqL1xuICBnZXRDdXJyZW50QmVhbVBhdGgoc3RhcnRQb3MsIGVuZFBvcykge1xuICAgIC8vIOWmguaenOacieeUteWtkOadn+e7hOS7tuS4lOacieW9k+WJjei3r+W+hO+8jOS9v+eUqOWunumZheeahOeUteWtkOadn+i3r+W+hFxuICAgIGlmICh0aGlzLmNvbXBvbmVudHMgJiYgdGhpcy5jb21wb25lbnRzLmVsZWN0cm9uQmVhbSAmJiB0aGlzLmNvbXBvbmVudHMuZWxlY3Ryb25CZWFtLmJlYW1Qb2ludHMgJiYgdGhpcy5jb21wb25lbnRzLmVsZWN0cm9uQmVhbS5iZWFtUG9pbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgIHJldHVybiB0aGlzLmNvbXBvbmVudHMuZWxlY3Ryb25CZWFtLmJlYW1Qb2ludHM7XG4gICAgfVxuICAgIFxuICAgIC8vIOWQpuWImeeUn+aIkOeugOWNleeahOebtOe6v+i3r+W+hFxuICAgIGNvbnN0IHBhdGhQb2ludHMgPSBbXTtcbiAgICBjb25zdCBudW1TZWdtZW50cyA9IDIwO1xuICAgIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IG51bVNlZ21lbnRzOyBpKyspIHtcbiAgICAgIGNvbnN0IHQgPSBpIC8gbnVtU2VnbWVudHM7XG4gICAgICBjb25zdCBwb2ludCA9IG5ldyBUSFJFRS5WZWN0b3IzKCkubGVycFZlY3RvcnMoc3RhcnRQb3MsIGVuZFBvcywgdCk7XG4gICAgICBwYXRoUG9pbnRzLnB1c2gocG9pbnQpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcGF0aFBvaW50cztcbiAgfVxuICBcbiAgLyoqXG4gICAqIOagueaNrui/m+W6puiOt+WPluayv+eUteWtkOadn+i3r+W+hOeahOS9jee9rlxuICAgKiBAcGFyYW0ge0FycmF5PFRIUkVFLlZlY3RvcjM+fSBiZWFtUGF0aCAtIOeUteWtkOadn+i3r+W+hOeCueaVsOe7hFxuICAgKiBAcGFyYW0ge251bWJlcn0gcHJvZ3Jlc3MgLSDov5vluqYgKDAtMSlcbiAgICogQHBhcmFtIHtUSFJFRS5WZWN0b3IzfSBleHRlbmRlZEVuZFBvcyAtIOW7tuS8uOeahOe7k+adn+S9jee9rlxuICAgKiBAcmV0dXJucyB7VEhSRUUuVmVjdG9yM30g5b2T5YmN5L2N572uXG4gICAqL1xuICBnZXRQb3NpdGlvbkFsb25nQmVhbVBhdGgoYmVhbVBhdGgsIHByb2dyZXNzLCBleHRlbmRlZEVuZFBvcykge1xuICAgIGlmICghYmVhbVBhdGggfHwgYmVhbVBhdGgubGVuZ3RoID09PSAwKSB7XG4gICAgICAvLyDlpoLmnpzmsqHmnInot6/lvoTvvIzov5Tlm57otbflp4vkvY3nva5cbiAgICAgIHJldHVybiBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICAgIH1cbiAgICBcbiAgICBpZiAoYmVhbVBhdGgubGVuZ3RoID09PSAxKSB7XG4gICAgICByZXR1cm4gYmVhbVBhdGhbMF0uY2xvbmUoKTtcbiAgICB9XG4gICAgXG4gICAgLy8g5aaC5p6c6L+b5bqm6LaF6L+HMe+8jOe7p+e7reWQkeW7tuS8uOS9jee9ruenu+WKqFxuICAgIGlmIChwcm9ncmVzcyA+IDEpIHtcbiAgICAgIGNvbnN0IGxhc3RQb2ludCA9IGJlYW1QYXRoW2JlYW1QYXRoLmxlbmd0aCAtIDFdO1xuICAgICAgY29uc3Qgb3ZlclByb2dyZXNzID0gcHJvZ3Jlc3MgLSAxO1xuICAgICAgcmV0dXJuIGxhc3RQb2ludC5jbG9uZSgpLmxlcnAoZXh0ZW5kZWRFbmRQb3MsIG92ZXJQcm9ncmVzcyk7XG4gICAgfVxuICAgIFxuICAgIC8vIOWcqOi3r+W+hOS4iuaPkuWAvFxuICAgIGNvbnN0IHNjYWxlZFByb2dyZXNzID0gcHJvZ3Jlc3MgKiAoYmVhbVBhdGgubGVuZ3RoIC0gMSk7XG4gICAgY29uc3Qgc2VnbWVudEluZGV4ID0gTWF0aC5mbG9vcihzY2FsZWRQcm9ncmVzcyk7XG4gICAgY29uc3Qgc2VnbWVudFByb2dyZXNzID0gc2NhbGVkUHJvZ3Jlc3MgLSBzZWdtZW50SW5kZXg7XG4gICAgXG4gICAgaWYgKHNlZ21lbnRJbmRleCA+PSBiZWFtUGF0aC5sZW5ndGggLSAxKSB7XG4gICAgICByZXR1cm4gYmVhbVBhdGhbYmVhbVBhdGgubGVuZ3RoIC0gMV0uY2xvbmUoKTtcbiAgICB9XG4gICAgXG4gICAgY29uc3Qgc3RhcnRQb2ludCA9IGJlYW1QYXRoW3NlZ21lbnRJbmRleF07XG4gICAgY29uc3QgZW5kUG9pbnQgPSBiZWFtUGF0aFtzZWdtZW50SW5kZXggKyAxXTtcbiAgICBcbiAgICByZXR1cm4gc3RhcnRQb2ludC5jbG9uZSgpLmxlcnAoZW5kUG9pbnQsIHNlZ21lbnRQcm9ncmVzcyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDlgZzmraLov57nu63nlLXlrZDmnZ/mtYFcbiAgICovXG4gIHN0b3BDb250aW51b3VzRWxlY3Ryb25CZWFtKCkge1xuICAgIGlmICh0aGlzLmNvbnRpbnVvdXNCZWFtSW50ZXJ2YWwpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5jb250aW51b3VzQmVhbUludGVydmFsKTtcbiAgICAgIHRoaXMuY29udGludW91c0JlYW1JbnRlcnZhbCA9IG51bGw7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog5qih5ouf55S15Y6L5Y+Y5YyWXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkaXJlY3Rpb24gLSDmlrnlkJHvvIgnaG9yaXpvbnRhbCcg5oiWICd2ZXJ0aWNhbCfvvIlcbiAgICogQHBhcmFtIHtudW1iZXJ9IHRhcmdldFZvbHRhZ2UgLSDnm67moIfnlLXljotcbiAgICogQHBhcmFtIHtudW1iZXJ9IGR1cmF0aW9uIC0g5Yqo55S75oyB57ut5pe26Ze0XG4gICAqL1xuICBzaW11bGF0ZVZvbHRhZ2VDaGFuZ2UoZGlyZWN0aW9uLCB0YXJnZXRWb2x0YWdlLCBkdXJhdGlvbiA9IDEwMDApIHtcbiAgICBjb25zdCBkZWZsZWN0aW9uID0gQ09ORklHLmRlZmxlY3Rpb25bZGlyZWN0aW9uXTtcbiAgICBpZiAoIWRlZmxlY3Rpb24pIHJldHVybjtcbiAgICBcbiAgICAvLyDliJvlu7rnlLXljovlj5jljJbliqjnlLtcbiAgICBjb25zdCB0d2VlbiA9IG5ldyBUV0VFTi5Ud2Vlbih7IHZvbHRhZ2U6IGRlZmxlY3Rpb24udm9sdGFnZSB9LCB0d2Vlbkdyb3VwKVxuICAgICAgLnRvKHsgdm9sdGFnZTogdGFyZ2V0Vm9sdGFnZSB9LCBkdXJhdGlvbilcbiAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLlF1YWRyYXRpYy5Jbk91dClcbiAgICAgIC5vblVwZGF0ZShvYmogPT4ge1xuICAgICAgICAvLyDmm7TmlrDnlLXljovlgLxcbiAgICAgICAgZGVmbGVjdGlvbi52b2x0YWdlID0gb2JqLnZvbHRhZ2U7XG4gICAgICAgIFxuICAgICAgICAvLyDmm7TmlrDnlLXlrZDmnZ9cbiAgICAgICAgaWYgKHRoaXMuY29udHJvbGxlcnMub25EZWZsZWN0aW9uQ2hhbmdlKSB7XG4gICAgICAgICAgdGhpcy5jb250cm9sbGVycy5vbkRlZmxlY3Rpb25DaGFuZ2UoQ09ORklHLmRlZmxlY3Rpb24pO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLnN0YXJ0KCk7XG4gICAgXG4gICAgdGhpcy50d2VlbnMucHVzaCh0d2Vlbik7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDorr7nva7ms6LlvaLlj4LmlbBcbiAgICogQHBhcmFtIHtPYmplY3R9IHBhcmFtcyAtIOazouW9ouWPguaVsFxuICAgKi9cbiAgc2V0V2F2ZWZvcm1QYXJhbXMocGFyYW1zKSB7XG4gICAgT2JqZWN0LmFzc2lnbihDT05GSUcud2F2ZWZvcm0sIHBhcmFtcyk7XG4gICAgXG4gICAgLy8g5pu05paw5rOi5b2iXG4gICAgaWYgKHRoaXMuY29udHJvbGxlcnMub25XYXZlZm9ybUNoYW5nZSkge1xuICAgICAgdGhpcy5jb250cm9sbGVycy5vbldhdmVmb3JtQ2hhbmdlKENPTkZJRy53YXZlZm9ybSk7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog5L+d5a2Y5Y6f5aeL5Y+C5pWwXG4gICAqL1xuICBzYXZlT3JpZ2luYWxQYXJhbXMoKSB7XG4gICAgdGhpcy5vcmlnaW5hbFBhcmFtcyA9IHtcbiAgICAgIGRlZmxlY3Rpb246IHtcbiAgICAgICAgaG9yaXpvbnRhbDogeyB2b2x0YWdlOiBDT05GSUcuZGVmbGVjdGlvbi5ob3Jpem9udGFsLnZvbHRhZ2UgfSxcbiAgICAgICAgdmVydGljYWw6IHsgdm9sdGFnZTogQ09ORklHLmRlZmxlY3Rpb24udmVydGljYWwudm9sdGFnZSB9XG4gICAgICB9LFxuICAgICAgd2F2ZWZvcm06IHsgLi4uQ09ORklHLndhdmVmb3JtIH0sXG4gICAgICBiZWFtOiB7XG4gICAgICAgIGludGVuc2l0eTogQ09ORklHLmJlYW0uaW50ZW5zaXR5XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOS/neWtmEdVSemdouadv+eKtuaAgeW5tuaKmOWPoOaJgOaciemdouadv1xuICAgKi9cbiAgY29sbGFwc2VHdWlGb2xkZXJzKCkge1xuICAgIC8vIOiOt+WPlkdVSeaOp+WItuWZqFxuICAgIGNvbnN0IGd1aUNvbnRyb2xsZXIgPSB0aGlzLmNvbnRyb2xsZXJzLmd1aUNvbnRyb2xsZXI7XG4gICAgaWYgKCFndWlDb250cm9sbGVyIHx8ICFndWlDb250cm9sbGVyLmd1aSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyDkv53lrZjljp/lp4vnirbmgIFcbiAgICB0aGlzLm9yaWdpbmFsR3VpU3RhdGUgPSB7fTtcbiAgICBcbiAgICAvLyDpgY3ljobmiYDmnInmlofku7blpLnlubbkv53lrZjlhbblsZXlvIDnirbmgIHvvIznhLblkI7mipjlj6BcbiAgICBndWlDb250cm9sbGVyLmd1aS5fX2ZvbGRlcnMgJiYgT2JqZWN0LmtleXMoZ3VpQ29udHJvbGxlci5ndWkuX19mb2xkZXJzKS5mb3JFYWNoKGZvbGRlck5hbWUgPT4ge1xuICAgICAgY29uc3QgZm9sZGVyID0gZ3VpQ29udHJvbGxlci5ndWkuX19mb2xkZXJzW2ZvbGRlck5hbWVdO1xuICAgICAgaWYgKGZvbGRlcikge1xuICAgICAgICAvLyDkv53lrZjljp/lp4vlsZXlvIDnirbmgIFcbiAgICAgICAgdGhpcy5vcmlnaW5hbEd1aVN0YXRlW2ZvbGRlck5hbWVdID0gZm9sZGVyLmNsb3NlZDtcbiAgICAgICAgLy8g5oqY5Y+g6Z2i5p2/XG4gICAgICAgIGZvbGRlci5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdHVUnpnaLmnb/lt7Lmipjlj6DvvIzkv53lrZjnmoTljp/lp4vnirbmgIE6JywgdGhpcy5vcmlnaW5hbEd1aVN0YXRlKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOaBouWkjUdVSemdouadv+eKtuaAgVxuICAgKi9cbiAgcmVzdG9yZUd1aUZvbGRlcnMoKSB7XG4gICAgLy8g6I635Y+WR1VJ5o6n5Yi25ZmoXG4gICAgY29uc3QgZ3VpQ29udHJvbGxlciA9IHRoaXMuY29udHJvbGxlcnMuZ3VpQ29udHJvbGxlcjtcbiAgICBpZiAoIWd1aUNvbnRyb2xsZXIgfHwgIWd1aUNvbnRyb2xsZXIuZ3VpIHx8ICF0aGlzLm9yaWdpbmFsR3VpU3RhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgLy8g5oGi5aSN5omA5pyJ5paH5Lu25aS555qE5Y6f5aeL5bGV5byA54q25oCBXG4gICAgT2JqZWN0LmtleXModGhpcy5vcmlnaW5hbEd1aVN0YXRlKS5mb3JFYWNoKGZvbGRlck5hbWUgPT4ge1xuICAgICAgY29uc3QgZm9sZGVyID0gZ3VpQ29udHJvbGxlci5ndWkuX19mb2xkZXJzW2ZvbGRlck5hbWVdO1xuICAgICAgaWYgKGZvbGRlcikge1xuICAgICAgICBpZiAodGhpcy5vcmlnaW5hbEd1aVN0YXRlW2ZvbGRlck5hbWVdKSB7XG4gICAgICAgICAgZm9sZGVyLmNsb3NlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZm9sZGVyLm9wZW4oKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdHVUnpnaLmnb/nirbmgIHlt7LmgaLlpI0nKTtcbiAgICB0aGlzLm9yaWdpbmFsR3VpU3RhdGUgPSBudWxsO1xuICB9XG4gIFxuICAvKipcbiAgICog6YeN572u5omA5pyJ5Y+C5pWwXG4gICAqL1xuICByZXNldEFsbFBhcmFtcygpIHtcbiAgICBpZiAoIXRoaXMub3JpZ2luYWxQYXJhbXMpIHJldHVybjtcbiAgICBcbiAgICAvLyDmgaLlpI3lgY/ovazlj4LmlbBcbiAgICBDT05GSUcuZGVmbGVjdGlvbi5ob3Jpem9udGFsLnZvbHRhZ2UgPSB0aGlzLm9yaWdpbmFsUGFyYW1zLmRlZmxlY3Rpb24uaG9yaXpvbnRhbC52b2x0YWdlO1xuICAgIENPTkZJRy5kZWZsZWN0aW9uLnZlcnRpY2FsLnZvbHRhZ2UgPSB0aGlzLm9yaWdpbmFsUGFyYW1zLmRlZmxlY3Rpb24udmVydGljYWwudm9sdGFnZTtcbiAgICBcbiAgICAvLyDmgaLlpI3ms6LlvaLlj4LmlbBcbiAgICBPYmplY3QuYXNzaWduKENPTkZJRy53YXZlZm9ybSwgdGhpcy5vcmlnaW5hbFBhcmFtcy53YXZlZm9ybSk7XG4gICAgXG4gICAgLy8g5oGi5aSN55S15a2Q5p2f5Y+C5pWwXG4gICAgQ09ORklHLmJlYW0uaW50ZW5zaXR5ID0gdGhpcy5vcmlnaW5hbFBhcmFtcy5iZWFtLmludGVuc2l0eTtcbiAgICBcbiAgICAvLyDms6jmhI/vvJrkuI3lnKjov5nph4zph43nva7niIbngrjmlYjmnpzvvIzlm6DkuLrmvJTnpLrnu5PmnZ/ml7blt7Lnu4/pgJrov4dleHBsb2RlQnRuLmNsaWNrKCnlpITnkIbkuoZcbiAgICAvLyDpgb/lhY3ph43lpI3mk43kvZzlr7zoh7TnirbmgIHkuI3kuIDoh7RcbiAgICBcbiAgICAvLyDph43nva5DUlTlpJblo7PnirbmgIFcbiAgICB0aGlzLnJlc2V0Q1JUU2hlbGwoKTtcbiAgICBcbiAgICAvLyDmm7TmlrDmjqfliLblmahcbiAgICBpZiAodGhpcy5jb250cm9sbGVycy5vbkRlZmxlY3Rpb25DaGFuZ2UpIHtcbiAgICAgIHRoaXMuY29udHJvbGxlcnMub25EZWZsZWN0aW9uQ2hhbmdlKENPTkZJRy5kZWZsZWN0aW9uKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKHRoaXMuY29udHJvbGxlcnMub25XYXZlZm9ybUNoYW5nZSkge1xuICAgICAgdGhpcy5jb250cm9sbGVycy5vbldhdmVmb3JtQ2hhbmdlKENPTkZJRy53YXZlZm9ybSk7XG4gICAgfVxuICAgIFxuICAgIGlmICh0aGlzLmNvbnRyb2xsZXJzLm9uQmVhbUNoYW5nZSkge1xuICAgICAgdGhpcy5jb250cm9sbGVycy5vbkJlYW1DaGFuZ2UoQ09ORklHLmJlYW0pO1xuICAgIH1cbiAgfVxuICBcbiAgLyoqXG4gICAqIOmHjee9rkNSVOWkluWjs+eKtuaAgVxuICAgKiDmgaLlpI3lpJblo7PnmoTlj6/op4HmgKflkozlkITnu4Tku7bnmoTliIbop6PnirbmgIFcbiAgICovXG4gIHJlc2V0Q1JUU2hlbGwoKSB7XG4gICAgY29uc29sZS5sb2coJ+mHjee9rkNSVOWkluWjs+eKtuaAgScpO1xuICAgIFxuICAgIGNvbnN0IGNydFNoZWxsID0gdGhpcy5jb21wb25lbnRzLmNydFNoZWxsO1xuICAgIGlmICghY3J0U2hlbGwpIHtcbiAgICAgIGNvbnNvbGUud2Fybign5om+5LiN5YiwQ1JUU2hlbGznu4Tku7YnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgY29uc3Qgc2hlbGxHcm91cCA9IGNydFNoZWxsLmdldFNoZWxsKCk7XG4gICAgaWYgKCFzaGVsbEdyb3VwKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ+aJvuS4jeWIsENSVOWkluWjs+e7hCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyAxLiDmgaLlpI3lpJblo7Plj6/op4HmgKdcbiAgICBzaGVsbEdyb3VwLnZpc2libGUgPSBDT05GSUcuc2hlbGwudmlzaWJsZTtcbiAgICBjb25zb2xlLmxvZygn5oGi5aSN5aSW5aOz5Y+v6KeB5oCnOicsIENPTkZJRy5zaGVsbC52aXNpYmxlKTtcbiAgICBcbiAgICAvLyAyLiDph43nva7lkITnu4Tku7bnmoTliIbop6PnirbmgIHkuLrlkIjlubbnirbmgIFcbiAgICBjb25zb2xlLmxvZygn6YeN572u6LaF5qSt5ZyG5YiG6Kej54q25oCBJyk7XG4gICAgY3J0U2hlbGwudG9nZ2xlU3VwZXJlbGxpcHNlRXhwbG9kZShmYWxzZSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ+mHjee9ruaXi+i9rOabsue6v+i/nuaOpeWIhuino+eKtuaAgScpO1xuICAgIGNydFNoZWxsLnRvZ2dsZUNvbm5lY3Rpb25FeHBsb2RlKGZhbHNlKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZygn6YeN572uQ3lsaW5kZXIy5YiG6Kej54q25oCBJyk7XG4gICAgY3J0U2hlbGwudG9nZ2xlQ3lsaW5kZXIyRXhwbG9kZShmYWxzZSk7XG4gICAgXG4gICAgLy8gMy4g5oGi5aSN5omA5pyJ5p2Q6LSo55qE6YCP5piO5bqmXG4gICAgdGhpcy5yZXN0b3JlQ1JUU2hlbGxNYXRlcmlhbHMoc2hlbGxHcm91cCk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ0NSVOWkluWjs+eKtuaAgemHjee9ruWujOaIkCcpO1xuICB9XG4gIFxuICAvKipcbiAgICog5oGi5aSNQ1JU5aSW5aOz5p2Q6LSo55qE6YCP5piO5bqmXG4gICAqIEBwYXJhbSB7VEhSRUUuR3JvdXB9IHNoZWxsR3JvdXAgLSBDUlTlpJblo7Pnu4RcbiAgICovXG4gIHJlc3RvcmVDUlRTaGVsbE1hdGVyaWFscyhzaGVsbEdyb3VwKSB7XG4gICAgY29uc29sZS5sb2coJ+aBouWkjUNSVOWkluWjs+adkOi0qOmAj+aYjuW6picpO1xuICAgIFxuICAgIC8vIOmBjeWOhuaJgOacieWtkOWvueixoe+8jOaBouWkjeadkOi0qOmAj+aYjuW6plxuICAgIHNoZWxsR3JvdXAudHJhdmVyc2UoKGNoaWxkKSA9PiB7XG4gICAgICBpZiAoY2hpbGQubWF0ZXJpYWwpIHtcbiAgICAgICAgY29uc3QgbWF0ZXJpYWxzID0gQXJyYXkuaXNBcnJheShjaGlsZC5tYXRlcmlhbCkgPyBjaGlsZC5tYXRlcmlhbCA6IFtjaGlsZC5tYXRlcmlhbF07XG4gICAgICAgIFxuICAgICAgICBtYXRlcmlhbHMuZm9yRWFjaChtYXRlcmlhbCA9PiB7XG4gICAgICAgICAgLy8g5oGi5aSN5Y6f5aeL6YCP5piO5bqmXG4gICAgICAgICAgbWF0ZXJpYWwub3BhY2l0eSA9IENPTkZJRy5zaGVsbC5vcGFjaXR5O1xuICAgICAgICAgIG1hdGVyaWFsLnRyYW5zcGFyZW50ID0gQ09ORklHLnNoZWxsLm9wYWNpdHkgPCAxLjA7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICog5riF6Zmk5omA5pyJ57KS5a2QXG4gICAqL1xuICBjbGVhckFsbFBhcnRpY2xlcygpIHtcbiAgICB0aGlzLnBhcnRpY2xlcy5mb3JFYWNoKHBhcnRpY2xlID0+IHtcbiAgICAgIHRoaXMuc2NlbmUucmVtb3ZlKHBhcnRpY2xlKTtcbiAgICAgIHBhcnRpY2xlLmdlb21ldHJ5LmRpc3Bvc2UoKTtcbiAgICAgIHBhcnRpY2xlLm1hdGVyaWFsLmRpc3Bvc2UoKTtcbiAgICB9KTtcbiAgICB0aGlzLnBhcnRpY2xlcyA9IFtdO1xuICB9XG4gIFxuICAvKipcbiAgICog6K6+572u5p6B5p2/5LiN6YCP5piO5bqmXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBvcGFjaXR5IC0g5LiN6YCP5piO5bqm5YC8ICgwLTEpXG4gICAqL1xuICBzZXRQbGF0ZU9wYWNpdHkob3BhY2l0eSkge1xuICAgIC8vIOWmguaenOi/mOayoeacieS/neWtmOWOn+Wni+S4jemAj+aYjuW6pu+8jOWFiOS/neWtmFxuICAgIGlmICghdGhpcy5vcmlnaW5hbFBsYXRlT3BhY2l0aWVzKSB7XG4gICAgICB0aGlzLm9yaWdpbmFsUGxhdGVPcGFjaXRpZXMgPSB7fTtcbiAgICAgIFxuICAgICAgLy8g5L+d5a2Y5Z6C55u05YGP6L2s5p2/55qE5Y6f5aeL5LiN6YCP5piO5bqmXG4gICAgICBpZiAodGhpcy5jb21wb25lbnRzLnYxICYmIHRoaXMuY29tcG9uZW50cy52MS5tYXRlcmlhbCkge1xuICAgICAgICB0aGlzLm9yaWdpbmFsUGxhdGVPcGFjaXRpZXMudjEgPSB0aGlzLmNvbXBvbmVudHMudjEubWF0ZXJpYWwub3BhY2l0eSB8fCAxLjA7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5jb21wb25lbnRzLnYyICYmIHRoaXMuY29tcG9uZW50cy52Mi5tYXRlcmlhbCkge1xuICAgICAgICB0aGlzLm9yaWdpbmFsUGxhdGVPcGFjaXRpZXMudjIgPSB0aGlzLmNvbXBvbmVudHMudjIubWF0ZXJpYWwub3BhY2l0eSB8fCAxLjA7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIOS/neWtmOawtOW5s+WBj+i9rOadv+eahOWOn+Wni+S4jemAj+aYjuW6plxuICAgICAgaWYgKHRoaXMuY29tcG9uZW50cy5oMSAmJiB0aGlzLmNvbXBvbmVudHMuaDEubWF0ZXJpYWwpIHtcbiAgICAgICAgdGhpcy5vcmlnaW5hbFBsYXRlT3BhY2l0aWVzLmgxID0gdGhpcy5jb21wb25lbnRzLmgxLm1hdGVyaWFsLm9wYWNpdHkgfHwgMS4wO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuY29tcG9uZW50cy5oMiAmJiB0aGlzLmNvbXBvbmVudHMuaDIubWF0ZXJpYWwpIHtcbiAgICAgICAgdGhpcy5vcmlnaW5hbFBsYXRlT3BhY2l0aWVzLmgyID0gdGhpcy5jb21wb25lbnRzLmgyLm1hdGVyaWFsLm9wYWNpdHkgfHwgMS4wO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyDorr7nva7mnoHmnb/nmoTmlrDkuI3pgI/mmI7luqYgLSDkvJjljJbpgI/mmI7luqbmuLLmn5NcbiAgICBjb25zdCBwbGF0ZXMgPSBbdGhpcy5jb21wb25lbnRzLnYxLCB0aGlzLmNvbXBvbmVudHMudjIsIHRoaXMuY29tcG9uZW50cy5oMSwgdGhpcy5jb21wb25lbnRzLmgyXTtcbiAgICBwbGF0ZXMuZm9yRWFjaChwbGF0ZSA9PiB7XG4gICAgICBpZiAocGxhdGUgJiYgcGxhdGUubWF0ZXJpYWwpIHtcbiAgICAgICAgcGxhdGUubWF0ZXJpYWwudHJhbnNwYXJlbnQgPSB0cnVlO1xuICAgICAgICBwbGF0ZS5tYXRlcmlhbC5vcGFjaXR5ID0gb3BhY2l0eTtcbiAgICAgICAgcGxhdGUubWF0ZXJpYWwuZGVwdGhXcml0ZSA9IGZhbHNlOyAvLyDnpoHnlKjmt7HluqblhpnlhaXvvIzpgb/lhY3pga7mjKHnlLXlrZDmnZ9cbiAgICAgICAgcGxhdGUubWF0ZXJpYWwuc2lkZSA9IFRIUkVFLkRvdWJsZVNpZGU7IC8vIOWPjOmdoua4suafk++8jOehruS/neWQhOS4quinkuW6pumDveiDveeci+WIsFxuICAgICAgICBwbGF0ZS5tYXRlcmlhbC5uZWVkc1VwZGF0ZSA9IHRydWU7XG4gICAgICAgIFxuICAgICAgICAvLyDosIPmlbTmuLLmn5Ppobrluo/vvIzorqnmnoHmnb/lnKjnlLXlrZDmnZ/kuYvliY3muLLmn5NcbiAgICAgICAgcGxhdGUucmVuZGVyT3JkZXIgPSAtMTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOaBouWkjeaegeadv+WOn+Wni+S4jemAj+aYjuW6plxuICAgKi9cbiAgcmVzdG9yZVBsYXRlT3BhY2l0eSgpIHtcbiAgICBpZiAoIXRoaXMub3JpZ2luYWxQbGF0ZU9wYWNpdGllcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyDmgaLlpI3miYDmnInmnoHmnb/nmoTljp/lp4vkuI3pgI/mmI7luqblkozmuLLmn5PlsZ7mgKdcbiAgICBjb25zdCBwbGF0ZXMgPSBbXG4gICAgICB7IGNvbXBvbmVudDogdGhpcy5jb21wb25lbnRzLnYxLCBrZXk6ICd2MScgfSxcbiAgICAgIHsgY29tcG9uZW50OiB0aGlzLmNvbXBvbmVudHMudjIsIGtleTogJ3YyJyB9LFxuICAgICAgeyBjb21wb25lbnQ6IHRoaXMuY29tcG9uZW50cy5oMSwga2V5OiAnaDEnIH0sXG4gICAgICB7IGNvbXBvbmVudDogdGhpcy5jb21wb25lbnRzLmgyLCBrZXk6ICdoMicgfVxuICAgIF07XG4gICAgXG4gICAgcGxhdGVzLmZvckVhY2goKHsgY29tcG9uZW50LCBrZXkgfSkgPT4ge1xuICAgICAgaWYgKGNvbXBvbmVudCAmJiBjb21wb25lbnQubWF0ZXJpYWwpIHtcbiAgICAgICAgY29tcG9uZW50Lm1hdGVyaWFsLm9wYWNpdHkgPSB0aGlzLm9yaWdpbmFsUGxhdGVPcGFjaXRpZXNba2V5XTtcbiAgICAgICAgY29tcG9uZW50Lm1hdGVyaWFsLnRyYW5zcGFyZW50ID0gdGhpcy5vcmlnaW5hbFBsYXRlT3BhY2l0aWVzW2tleV0gPCAxLjA7XG4gICAgICAgIGNvbXBvbmVudC5tYXRlcmlhbC5kZXB0aFdyaXRlID0gdHJ1ZTsgLy8g5oGi5aSN5rex5bqm5YaZ5YWlXG4gICAgICAgIGNvbXBvbmVudC5tYXRlcmlhbC5zaWRlID0gVEhSRUUuRnJvbnRTaWRlOyAvLyDmgaLlpI3ljZXpnaLmuLLmn5NcbiAgICAgICAgY29tcG9uZW50Lm1hdGVyaWFsLm5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgXG4gICAgICAgIC8vIOaBouWkjea4suafk+mhuuW6j1xuICAgICAgICBjb21wb25lbnQucmVuZGVyT3JkZXIgPSAwO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIC8vIOa4hemZpOS/neWtmOeahOWOn+Wni+WAvFxuICAgIHRoaXMub3JpZ2luYWxQbGF0ZU9wYWNpdGllcyA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICog5pu05paw5Yqo55S7XG4gICAqL1xuICB1cGRhdGUoKSB7XG4gICAgLy8g5pu05paw5omA5pyJdHdlZW5zXG4gICAgdGhpcy50d2VlbnMuZm9yRWFjaCh0d2VlbiA9PiB7XG4gICAgICBpZiAodHdlZW4gJiYgdHdlZW4uaXNQbGF5aW5nKSB7XG4gICAgICAgIHR3ZWVuLnVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIC8vIOa4heeQhuW3suWujOaIkOeahHR3ZWVuc1xuICAgIHRoaXMudHdlZW5zID0gdGhpcy50d2VlbnMuZmlsdGVyKHR3ZWVuID0+IHR3ZWVuICYmIHR3ZWVuLmlzUGxheWluZyk7XG4gICAgXG4gICAgLy8g5pu05pawVFdFRU7vvIjkvb/nlKjmlrDnmoQgR3JvdXAgQVBJ77yJXG4gICAgdHdlZW5Hcm91cC51cGRhdGUoKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiOt+WPluWvueixoeaxoOaAp+iDvee7n+iuoeS/oeaBr1xuICAgKiBAcmV0dXJucyB7T2JqZWN0fSDlr7nosaHmsaDnirbmgIHlkozmgKfog73nu5/orqFcbiAgICovXG4gIGdldFBhcnRpY2xlUG9vbFN0YXR1cygpIHtcbiAgICBpZiAoIXRoaXMucGFydGljbGVQb29sKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMucGFydGljbGVQb29sLmdldFN0YXR1cygpO1xuICB9XG4gIFxuICAvKipcbiAgICog5omT5Y2w5a+56LGh5rGg6K+m57uG54q25oCB77yI6LCD6K+V55So77yJXG4gICAqL1xuICBwcmludFBhcnRpY2xlUG9vbFN0YXR1cygpIHtcbiAgICBpZiAodGhpcy5wYXJ0aWNsZVBvb2wpIHtcbiAgICAgIHRoaXMucGFydGljbGVQb29sLnByaW50U3RhdHVzKCk7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICogQ1JU5aSW5aOz5YiG6Kej5ZKM5raI5aSx5pWI5p6cXG4gICAqL1xuICBzdGFydENSVFNoZWxsRGlzYXBwZWFyKCkge1xuICAgIGNvbnNvbGUubG9nKCflvIDlp4tDUlTlpJblo7PliIbop6PlkozmtojlpLHmlYjmnpwnKTtcbiAgICBcbiAgICBjb25zdCBjcnRTaGVsbCA9IHRoaXMuY29tcG9uZW50cy5jcnRTaGVsbDtcbiAgICBpZiAoIWNydFNoZWxsKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ+aJvuS4jeWIsENSVFNoZWxs57uE5Lu2Jyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIC8vIOesrOS4gOmYtuaute+8muS9v+eUqOWQhOe7hOS7tuiHquW4pueahOWIhuino+WKqOeUu1xuICAgIHRoaXMuZXhwbG9kZUNSVFNoZWxsQ29tcG9uZW50cyhjcnRTaGVsbCk7XG4gICAgXG4gICAgLy8g56ys5LqM6Zi25q6177ya5Zyo5YiG6Kej5Yqo55S75a6M5oiQ5ZCO5byA5aeL5riQ5Y+Y5raI5aSx77yIMS4156eS5ZCO5byA5aeL77yM5oyB57utMS4156eS77yJXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zdCBzaGVsbEdyb3VwID0gY3J0U2hlbGwuZ2V0U2hlbGwoKTtcbiAgICAgIGlmIChzaGVsbEdyb3VwKSB7XG4gICAgICAgIHRoaXMuZmFkZUNSVFNoZWxsKHNoZWxsR3JvdXAsIDE1MDApO1xuICAgICAgfVxuICAgIH0sIDE1MDApOyAvLyDnrYnlvoXliIbop6PliqjnlLvlrozmiJBcbiAgfVxuICBcbiAgLyoqXG4gICAqIOS9v+eUqOWQhOe7hOS7tuiHquW4pueahOWIhuino+WKqOeUu+WIhuino0NSVOWkluWjs1xuICAgKiBAcGFyYW0ge0NSVFNoZWxsfSBjcnRTaGVsbCAtIENSVOWkluWjs+e7hOS7tlxuICAgKi9cbiAgZXhwbG9kZUNSVFNoZWxsQ29tcG9uZW50cyhjcnRTaGVsbCkge1xuICAgIGNvbnNvbGUubG9nKCfkvb/nlKjnu4Tku7boh6rluKbnmoTliIbop6PliqjnlLvliIbop6NDUlTlpJblo7MnKTtcbiAgICBcbiAgICAvLyDliIbop6PotoXmpK3lnIbnu4Tku7bvvIjluKblu7bov5/ku6XkuqfnlJ/lsYLmrKHmhJ/vvIlcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCfliIbop6PotoXmpK3lnIbnu4Tku7YnKTtcbiAgICAgIGNydFNoZWxsLnRvZ2dsZVN1cGVyZWxsaXBzZUV4cGxvZGUodHJ1ZSk7XG4gICAgfSwgMCk7XG4gICAgXG4gICAgLy8g5YiG6Kej5peL6L2s5puy57q/6L+e5o6l57uE5Lu2XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygn5YiG6Kej5peL6L2s5puy57q/6L+e5o6l57uE5Lu2Jyk7XG4gICAgICBjcnRTaGVsbC50b2dnbGVDb25uZWN0aW9uRXhwbG9kZSh0cnVlKTtcbiAgICB9LCAyMDApOyAvLyAyMDBtc+W7tui/n1xuICAgIFxuICAgIC8vIOWIhuino0N5bGluZGVyMue7hOS7tlxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ+WIhuino0N5bGluZGVyMue7hOS7ticpO1xuICAgICAgY3J0U2hlbGwudG9nZ2xlQ3lsaW5kZXIyRXhwbG9kZSh0cnVlKTtcbiAgICB9LCA0MDApOyAvLyA0MDBtc+W7tui/n1xuICB9XG4gIFxuICAvKipcbiAgICogQ1JU5aSW5aOz5riQ5Y+Y5raI5aSxXG4gICAqIEBwYXJhbSB7VEhSRUUuR3JvdXB9IHNoZWxsR3JvdXAgLSBDUlTlpJblo7Pnu4RcbiAgICogQHBhcmFtIHtudW1iZXJ9IGR1cmF0aW9uIC0g5raI5aSx5oyB57ut5pe26Ze0XG4gICAqL1xuICBmYWRlQ1JUU2hlbGwoc2hlbGxHcm91cCwgZHVyYXRpb24pIHtcbiAgICBjb25zb2xlLmxvZygnQ1JU5aSW5aOz5byA5aeL5riQ5Y+Y5raI5aSxJyk7XG4gICAgXG4gICAgLy8g5pS26ZuG5omA5pyJ5aSW5aOz5p2Q6LSoXG4gICAgY29uc3QgbWF0ZXJpYWxzVG9GYWRlID0gW107XG4gICAgc2hlbGxHcm91cC50cmF2ZXJzZSgoY2hpbGQpID0+IHtcbiAgICAgIGlmIChjaGlsZC5tYXRlcmlhbCkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZC5tYXRlcmlhbCkpIHtcbiAgICAgICAgICBtYXRlcmlhbHNUb0ZhZGUucHVzaCguLi5jaGlsZC5tYXRlcmlhbCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbWF0ZXJpYWxzVG9GYWRlLnB1c2goY2hpbGQubWF0ZXJpYWwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgLy8g6K6w5b2V5Y6f5aeL6YCP5piO5bqm5bm26K6+572u6YCP5piO5bGe5oCnXG4gICAgY29uc3Qgb3JpZ2luYWxPcGFjaXRpZXMgPSBtYXRlcmlhbHNUb0ZhZGUubWFwKG1hdGVyaWFsID0+IHtcbiAgICAgIGNvbnN0IG9yaWdpbmFsT3BhY2l0eSA9IG1hdGVyaWFsLm9wYWNpdHk7XG4gICAgICBjb25zdCBvcmlnaW5hbFRyYW5zcGFyZW50ID0gbWF0ZXJpYWwudHJhbnNwYXJlbnQ7XG4gICAgICBcbiAgICAgIC8vIOehruS/neadkOi0qOaUr+aMgemAj+aYjlxuICAgICAgbWF0ZXJpYWwudHJhbnNwYXJlbnQgPSB0cnVlO1xuICAgICAgXG4gICAgICByZXR1cm4ge1xuICAgICAgICBtYXRlcmlhbDogbWF0ZXJpYWwsXG4gICAgICAgIG9yaWdpbmFsT3BhY2l0eTogb3JpZ2luYWxPcGFjaXR5LFxuICAgICAgICBvcmlnaW5hbFRyYW5zcGFyZW50OiBvcmlnaW5hbFRyYW5zcGFyZW50XG4gICAgICB9O1xuICAgIH0pO1xuICAgIFxuICAgIC8vIOWIm+W7uua4kOWPmOa2iOWkseWKqOeUu1xuICAgIGNvbnN0IGZhZGVPdXRUd2VlbiA9IG5ldyBUV0VFTi5Ud2Vlbih7IG9wYWNpdHk6IDEuMCB9LCB0d2Vlbkdyb3VwKVxuICAgICAgLnRvKHsgb3BhY2l0eTogMC4wIH0sIGR1cmF0aW9uKVxuICAgICAgLmVhc2luZyhUV0VFTi5FYXNpbmcuUXVhZHJhdGljLkluT3V0KVxuICAgICAgLm9uVXBkYXRlKGZ1bmN0aW9uKG9iaikge1xuICAgICAgICBtYXRlcmlhbHNUb0ZhZGUuZm9yRWFjaChtYXRlcmlhbCA9PiB7XG4gICAgICAgICAgbWF0ZXJpYWwub3BhY2l0eSA9IG9iai5vcGFjaXR5O1xuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgICAub25Db21wbGV0ZSgoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdDUlTlpJblo7PmtojlpLHlrozmiJDvvIzpmpDol4/lpJblo7MnKTtcbiAgICAgICAgLy8g5a6M5YWo6ZqQ6JeP5aSW5aOzXG4gICAgICAgIHNoZWxsR3JvdXAudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgfSlcbiAgICAgIC5zdGFydCgpO1xuICAgIFxuICAgIHRoaXMudHdlZW5zLnB1c2goZmFkZU91dFR3ZWVuKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOW8gOWni+aJqeW8oOW5tua4kOWPmOa2iOWkseaViOaenFxuICAgKiDorqnmqKHlnovnu6fnu63lkJHlpJbmianlvKDvvIznhLblkI7lnKgy56eS5YaF5riQ5Y+Y5raI5aSxXG4gICAqL1xuICBzdGFydEV4cGFuZEFuZEZhZGVPdXQoKSB7XG4gICAgY29uc29sZS5sb2coJ+W8gOWni+aJqeW8oOW5tua4kOWPmOa2iOWkseaViOaenCcpO1xuICAgIFxuICAgIC8vIOiOt+WPluaJgOaciemcgOimgeWkhOeQhueahOe7hOS7tlxuICAgIGNvbnN0IGNydFNoZWxsID0gdGhpcy5jb21wb25lbnRzLmNydFNoZWxsO1xuICAgIGlmICghY3J0U2hlbGwpIHtcbiAgICAgIGNvbnNvbGUud2Fybign5om+5LiN5YiwQ1JUU2hlbGznu4Tku7YnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgLy8g56ys5LiA6Zi25q6177ya57un57ut5omp5byg77yI5oyB57utMeenku+8iVxuICAgIHRoaXMuY29udGludWVFeHBhbnNpb24oY3J0U2hlbGwsIDEwMDApO1xuICAgIFxuICAgIC8vIOesrOS6jOmYtuaute+8muW8gOWni+a4kOWPmOa2iOWkse+8iDHnp5LlkI7lvIDlp4vvvIzmjIHnu60y56eS77yJXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnN0YXJ0RmFkZU91dChjcnRTaGVsbCwgMjAwMCk7XG4gICAgfSwgMTAwMCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDnu6fnu63mianlvKDmlYjmnpxcbiAgICogQHBhcmFtIHtPYmplY3R9IGNydFNoZWxsIC0gQ1JUU2hlbGznu4Tku7ZcbiAgICogQHBhcmFtIHtudW1iZXJ9IGR1cmF0aW9uIC0g5omp5byg5oyB57ut5pe26Ze0XG4gICAqL1xuICBjb250aW51ZUV4cGFuc2lvbihjcnRTaGVsbCwgZHVyYXRpb24pIHtcbiAgICBjb25zb2xlLmxvZygn57un57ut5omp5byg5pWI5p6cJyk7XG4gICAgXG4gICAgLy8g55u05o6l5pON5L2c5omA5pyJ57uE5Lu255qE5L2N572u77yM6K6p5a6D5Lus57un57ut5ZCR5aSW5omp5bygXG4gICAgT2JqZWN0LmVudHJpZXModGhpcy5jb21wb25lbnRzKS5mb3JFYWNoKChba2V5LCBjb21wb25lbnRdKSA9PiB7XG4gICAgICBpZiAoIWNvbXBvbmVudCB8fCAhY29tcG9uZW50LnBvc2l0aW9uKSByZXR1cm47XG4gICAgICBcbiAgICAgIC8vIOiuoeeul+S7juWOn+eCueWIsOW9k+WJjeS9jee9rueahOaWueWQkVxuICAgICAgY29uc3QgY3VycmVudFBvcyA9IGNvbXBvbmVudC5wb3NpdGlvbi5jbG9uZSgpO1xuICAgICAgY29uc3QgZGlyZWN0aW9uID0gY3VycmVudFBvcy5jbG9uZSgpLm5vcm1hbGl6ZSgpO1xuICAgICAgXG4gICAgICAvLyDlpoLmnpzmlrnlkJHkuLrpm7blkJHph4/vvIzkvb/nlKjpu5jorqTmlrnlkJFcbiAgICAgIGlmIChkaXJlY3Rpb24ubGVuZ3RoKCkgPT09IDApIHtcbiAgICAgICAgZGlyZWN0aW9uLnNldCgxLCAwLCAwKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8g6K6h566X55uu5qCH5L2N572u77yI57un57ut5ZCR5aSW5omp5bygMS415YCN77yJXG4gICAgICBjb25zdCB0YXJnZXRQb3MgPSBjdXJyZW50UG9zLmNsb25lKCkuYWRkKGRpcmVjdGlvbi5tdWx0aXBseVNjYWxhcigyLjApKTtcbiAgICAgIFxuICAgICAgLy8g5Yib5bu65omp5byg5Yqo55S7XG4gICAgICBjb25zdCBleHBhbmRUd2VlbiA9IG5ldyBUV0VFTi5Ud2Vlbihjb21wb25lbnQucG9zaXRpb24sIHR3ZWVuR3JvdXApXG4gICAgICAgIC50byh7XG4gICAgICAgICAgeDogdGFyZ2V0UG9zLngsXG4gICAgICAgICAgeTogdGFyZ2V0UG9zLnksXG4gICAgICAgICAgejogdGFyZ2V0UG9zLnpcbiAgICAgICAgfSwgZHVyYXRpb24pXG4gICAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLlF1YWRyYXRpYy5PdXQpXG4gICAgICAgIC5zdGFydCgpO1xuICAgICAgICBcbiAgICAgIHRoaXMudHdlZW5zLnB1c2goZXhwYW5kVHdlZW4pO1xuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICog5byA5aeL5riQ5Y+Y5raI5aSx5pWI5p6cXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjcnRTaGVsbCAtIENSVFNoZWxs57uE5Lu2XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvbiAtIOa4kOWPmOaMgee7reaXtumXtFxuICAgKi9cbiAgc3RhcnRGYWRlT3V0KGNydFNoZWxsLCBkdXJhdGlvbikge1xuICAgIGNvbnNvbGUubG9nKCflvIDlp4vmuJDlj5jmtojlpLHmlYjmnpwnKTtcbiAgICBcbiAgICAvLyDmlLbpm4bmiYDmnInpnIDopoHmuJDlj5jnmoTmnZDotKhcbiAgICBjb25zdCBtYXRlcmlhbHNUb0ZhZGUgPSBbXTtcbiAgICBcbiAgICAvLyDpgY3ljobmiYDmnInnu4Tku7bvvIzmlLbpm4bmnZDotKhcbiAgICBPYmplY3QuZW50cmllcyh0aGlzLmNvbXBvbmVudHMpLmZvckVhY2goKFtrZXksIGNvbXBvbmVudF0pID0+IHtcbiAgICAgIGlmIChjb21wb25lbnQgJiYgY29tcG9uZW50Lm1hdGVyaWFsKSB7XG4gICAgICAgIG1hdGVyaWFsc1RvRmFkZS5wdXNoKGNvbXBvbmVudC5tYXRlcmlhbCk7XG4gICAgICB9IGVsc2UgaWYgKGNvbXBvbmVudCAmJiBjb21wb25lbnQudHJhdmVyc2UpIHtcbiAgICAgICAgLy8g5a+55LqO57uE5a+56LGh77yM6YGN5Y6G5omA5pyJ5a2Q5a+56LGhXG4gICAgICAgIGNvbXBvbmVudC50cmF2ZXJzZSgoY2hpbGQpID0+IHtcbiAgICAgICAgICBpZiAoY2hpbGQubWF0ZXJpYWwpIHtcbiAgICAgICAgICAgIG1hdGVyaWFsc1RvRmFkZS5wdXNoKGNoaWxkLm1hdGVyaWFsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIC8vIOiusOW9leWOn+Wni+mAj+aYjuW6plxuICAgIGNvbnN0IG9yaWdpbmFsT3BhY2l0aWVzID0gbWF0ZXJpYWxzVG9GYWRlLm1hcChtYXRlcmlhbCA9PiAoe1xuICAgICAgbWF0ZXJpYWw6IG1hdGVyaWFsLFxuICAgICAgb3JpZ2luYWxPcGFjaXR5OiBtYXRlcmlhbC5vcGFjaXR5LFxuICAgICAgb3JpZ2luYWxUcmFuc3BhcmVudDogbWF0ZXJpYWwudHJhbnNwYXJlbnRcbiAgICB9KSk7XG4gICAgXG4gICAgLy8g5Yib5bu65riQ5Y+Y5Yqo55S7XG4gICAgY29uc3QgZmFkZU91dFR3ZWVuID0gbmV3IFRXRUVOLlR3ZWVuKHsgb3BhY2l0eTogMS4wIH0sIHR3ZWVuR3JvdXApXG4gICAgICAudG8oeyBvcGFjaXR5OiAwLjAgfSwgZHVyYXRpb24pXG4gICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5RdWFkcmF0aWMuSW5PdXQpXG4gICAgICAub25VcGRhdGUoKG9iamVjdCkgPT4ge1xuICAgICAgICAvLyDmm7TmlrDmiYDmnInmnZDotKjnmoTpgI/mmI7luqZcbiAgICAgICAgb3JpZ2luYWxPcGFjaXRpZXMuZm9yRWFjaCgoeyBtYXRlcmlhbCwgb3JpZ2luYWxPcGFjaXR5IH0pID0+IHtcbiAgICAgICAgICBtYXRlcmlhbC50cmFuc3BhcmVudCA9IHRydWU7XG4gICAgICAgICAgbWF0ZXJpYWwub3BhY2l0eSA9IG9yaWdpbmFsT3BhY2l0eSAqIG9iamVjdC5vcGFjaXR5O1xuICAgICAgICAgIG1hdGVyaWFsLm5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9KVxuICAgICAgLm9uQ29tcGxldGUoKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygn5riQ5Y+Y5raI5aSx5a6M5oiQ77yM6ZqQ6JeP5aSW5aOzJyk7XG4gICAgICAgIC8vIOWKqOeUu+WujOaIkOWQju+8jOmakOiXj+WkluWjs1xuICAgICAgICB0aGlzLmhpZGVTaGVsbENvbXBsZXRlbHkoKTtcbiAgICAgIH0pXG4gICAgICAuc3RhcnQoKTtcbiAgICAgIFxuICAgIHRoaXMudHdlZW5zLnB1c2goZmFkZU91dFR3ZWVuKTtcbiAgfVxuICBcbiAgXG4gIC8qKlxuICAgKiDlrozlhajpmpDol4/lpJblo7NcbiAgICovXG4gIGhpZGVTaGVsbENvbXBsZXRlbHkoKSB7XG4gICAgY29uc29sZS5sb2coJ+WujOWFqOmakOiXj+WkluWjsycpO1xuICAgIFxuICAgIC8vIOmAmui/h0dVSeaOp+WItuWZqOmakOiXj+WkluWjs1xuICAgIGNvbnN0IHNoZWxsQ2hlY2tib3hlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXScpO1xuICAgIGxldCBzaGVsbENoZWNrYm94ID0gbnVsbDtcbiAgICBcbiAgICAvLyDmn6Xmib7lr7nlupTnmoTlpI3pgInmoYZcbiAgICBzaGVsbENoZWNrYm94ZXMuZm9yRWFjaChjaGVja2JveCA9PiB7XG4gICAgICBjb25zdCBsYWJlbCA9IGNoZWNrYm94LmNsb3Nlc3QoJ2xpJyk/LnF1ZXJ5U2VsZWN0b3IoJy5wcm9wZXJ0eS1uYW1lJyk7XG4gICAgICBpZiAobGFiZWwgJiYgbGFiZWwudGV4dENvbnRlbnQuaW5jbHVkZXMoJ+aYvuekuuWkluWjsycpKSB7XG4gICAgICAgIHNoZWxsQ2hlY2tib3ggPSBjaGVja2JveDtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICBpZiAoc2hlbGxDaGVja2JveCAmJiBzaGVsbENoZWNrYm94LmNoZWNrZWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfpgJrov4flpI3pgInmoYbpmpDol4/lpJblo7MnKTtcbiAgICAgIHNoZWxsQ2hlY2tib3guY2xpY2soKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8g5aaC5p6c5om+5LiN5Yiw5aSN6YCJ5qGG77yM55u05o6l6YCa6L+HQ09ORklH5L+u5pS5XG4gICAgICBjb25zb2xlLmxvZygn55u05o6l6YCa6L+HQ09ORklH6ZqQ6JeP5aSW5aOzJyk7XG4gICAgICBpZiAod2luZG93LkNPTkZJRykge1xuICAgICAgICB3aW5kb3cuQ09ORklHLnNoZWxsLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgLy8g6Kem5Y+R5aSW5aOz5pu05pawXG4gICAgICAgIGlmICh0aGlzLmNvbnRyb2xsZXJzICYmIHRoaXMuY29udHJvbGxlcnMub25TaGVsbENoYW5nZSkge1xuICAgICAgICAgIHRoaXMuY29udHJvbGxlcnMub25TaGVsbENoYW5nZSh3aW5kb3cuQ09ORklHLnNoZWxsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSAiLCJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5cbi8qKlxuICog5peL6L2s5puy57q/5Yeg5L2V5L2T55Sf5oiQ5ZmoXG4gKiDln7rkuo7mlbDlrablhazlvI/nlJ/miJDlubPmu5Hov57mjqXnmoTml4vovazmm7LpnaJcbiAqIOaUr+aMgUcx5ZKMRzLov57nu63mgKdcbiAqL1xuZXhwb3J0IGNsYXNzIFJvdGF0aW9uQ3VydmVHZW9tZXRyeSB7XG4gIFxuICAvKipcbiAgICog5p6E6YCg5Ye95pWwXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByMSAtIOWwj+WNiuW+hFxuICAgKiBAcGFyYW0ge251bWJlcn0gcjIgLSDlpKfljYrlvoQgIFxuICAgKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoIC0g6L+H5rih6ZW/5bqmXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjdXJ2ZVR5cGUgLSDmm7Lnur/nsbvlnosgKCdHMScg5oiWICdHMicpXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzZWdtZW50cyAtIOWIhuauteaVsOmHj1xuICAgKiBAcGFyYW0ge251bWJlcn0gcmFkaWFsU2VnbWVudHMgLSDlvoTlkJHliIbmrrXmlbBcbiAgICovXG4gIGNvbnN0cnVjdG9yKHIxLCByMiwgbGVuZ3RoLCBjdXJ2ZVR5cGUgPSAnRzInLCBzZWdtZW50cyA9IDUwLCByYWRpYWxTZWdtZW50cyA9IDMyKSB7XG4gICAgdGhpcy5yMSA9IHIxO1xuICAgIHRoaXMucjIgPSByMjtcbiAgICB0aGlzLmxlbmd0aCA9IGxlbmd0aDtcbiAgICB0aGlzLmN1cnZlVHlwZSA9IGN1cnZlVHlwZTtcbiAgICB0aGlzLnNlZ21lbnRzID0gc2VnbWVudHM7XG4gICAgdGhpcy5yYWRpYWxTZWdtZW50cyA9IHJhZGlhbFNlZ21lbnRzO1xuICAgIFxuICAgIHRoaXMuZ2VvbWV0cnkgPSBuZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnkoKTtcbiAgICB0aGlzLmdlbmVyYXRlR2VvbWV0cnkoKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIEcx6L+e57ut5oCn5puy57q/ICjpm7bmlpznjofnq6/ngrnvvIzlpJ/pobrmu5EpXG4gICAqIHIoeikgPSByMSArIChyMiAtIHIxKSAqICgzc8KyIC0gMnPCsylcbiAgICog5YW25LitIHMgPSB6L0wg4oiIIFswLDFdXG4gICAqL1xuICBjYWxjdWxhdGVHMVJhZGl1cyhzKSB7XG4gICAgY29uc3QgdCA9IDMgKiBzICogcyAtIDIgKiBzICogcyAqIHM7XG4gICAgcmV0dXJuIHRoaXMucjEgKyAodGhpcy5yMiAtIHRoaXMucjEpICogdDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIEcy6L+e57ut5oCn5puy57q/ICjov57mm7LnjofkuZ/ov57nu63vvIzmm7Tlg49cIumTtueZvemHkeWxnlwi6Iis5Lid5ruRKVxuICAgKiByKHopID0gcjEgKyAocjIgLSByMSkgKiAoMTBzwrMgLSAxNXPigbQgKyA2c+KBtSlcbiAgICog5YW25LitIHMgPSB6L0wg4oiIIFswLDFdXG4gICAqL1xuICBjYWxjdWxhdGVHMlJhZGl1cyhzKSB7XG4gICAgY29uc3QgczMgPSBzICogcyAqIHM7XG4gICAgY29uc3QgczQgPSBzMyAqIHM7XG4gICAgY29uc3QgczUgPSBzNCAqIHM7XG4gICAgY29uc3QgdCA9IDEwICogczMgLSAxNSAqIHM0ICsgNiAqIHM1O1xuICAgIHJldHVybiB0aGlzLnIxICsgKHRoaXMucjIgLSB0aGlzLnIxKSAqIHQ7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDmoLnmja7mm7Lnur/nsbvlnovorqHnrpfljYrlvoRcbiAgICovXG4gIGNhbGN1bGF0ZVJhZGl1cyhzKSB7XG4gICAgc3dpdGNoICh0aGlzLmN1cnZlVHlwZSkge1xuICAgICAgY2FzZSAnRzEnOlxuICAgICAgICByZXR1cm4gdGhpcy5jYWxjdWxhdGVHMVJhZGl1cyhzKTtcbiAgICAgIGNhc2UgJ0cyJzpcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FsY3VsYXRlRzJSYWRpdXMocyk7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gdGhpcy5jYWxjdWxhdGVHMlJhZGl1cyhzKTsgLy8g6buY6K6k5L2/55SoRzJcbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDnlJ/miJDml4vovazmm7LpnaLlh6DkvZXkvZNcbiAgICovXG4gIGdlbmVyYXRlR2VvbWV0cnkoKSB7XG4gICAgY29uc3QgdmVydGljZXMgPSBbXTtcbiAgICBjb25zdCBub3JtYWxzID0gW107XG4gICAgY29uc3QgdXZzID0gW107XG4gICAgY29uc3QgaW5kaWNlcyA9IFtdO1xuICAgIFxuICAgIC8vIOeUn+aIkOmhtueCuVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IHRoaXMuc2VnbWVudHM7IGkrKykge1xuICAgICAgY29uc3QgcyA9IGkgLyB0aGlzLnNlZ21lbnRzOyAvLyDlj4LmlbAgcyDiiIggWzAsMV1cbiAgICAgIGNvbnN0IHogPSBzICogdGhpcy5sZW5ndGg7ICAgLy8gWuWdkOagh1xuICAgICAgY29uc3QgcmFkaXVzID0gdGhpcy5jYWxjdWxhdGVSYWRpdXMocyk7XG4gICAgICBcbiAgICAgIC8vIOiuoeeul+azleWQkemHj+mcgOimgeeahOWvvOaVsFxuICAgICAgY29uc3QgZGVsdGFTID0gMC4wMDE7XG4gICAgICBjb25zdCByX25leHQgPSB0aGlzLmNhbGN1bGF0ZVJhZGl1cyhNYXRoLm1pbigxLCBzICsgZGVsdGFTKSk7XG4gICAgICBjb25zdCByX3ByZXYgPSB0aGlzLmNhbGN1bGF0ZVJhZGl1cyhNYXRoLm1heCgwLCBzIC0gZGVsdGFTKSk7XG4gICAgICBjb25zdCBkcl9kcyA9IChyX25leHQgLSByX3ByZXYpIC8gKDIgKiBkZWx0YVMpO1xuICAgICAgY29uc3QgZHJfZHogPSBkcl9kcyAvIHRoaXMubGVuZ3RoO1xuICAgICAgXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8PSB0aGlzLnJhZGlhbFNlZ21lbnRzOyBqKyspIHtcbiAgICAgICAgY29uc3QgYW5nbGUgPSAoaiAvIHRoaXMucmFkaWFsU2VnbWVudHMpICogTWF0aC5QSSAqIDI7XG4gICAgICAgIFxuICAgICAgICAvLyDorqHnrpfpobbngrnkvY3nva5cbiAgICAgICAgY29uc3QgeCA9IE1hdGguY29zKGFuZ2xlKSAqIHJhZGl1cztcbiAgICAgICAgY29uc3QgeSA9IE1hdGguc2luKGFuZ2xlKSAqIHJhZGl1cztcbiAgICAgICAgXG4gICAgICAgIHZlcnRpY2VzLnB1c2goeCwgeSwgeik7XG4gICAgICAgIFxuICAgICAgICAvLyDorqHnrpfms5XlkJHph49cbiAgICAgICAgLy8g5a+55LqO5peL6L2s5puy6Z2i77yM5rOV5ZCR6YePID0gKC1kci9keiAqIGNvcyjOuCksIC1kci9keiAqIHNpbijOuCksIDEpIOW9kuS4gOWMllxuICAgICAgICBjb25zdCBueCA9IC1kcl9keiAqIE1hdGguY29zKGFuZ2xlKTtcbiAgICAgICAgY29uc3QgbnkgPSAtZHJfZHogKiBNYXRoLnNpbihhbmdsZSk7XG4gICAgICAgIGNvbnN0IG56ID0gMTtcbiAgICAgICAgY29uc3QgbGVuZ3RoX24gPSBNYXRoLnNxcnQobnggKiBueCArIG55ICogbnkgKyBueiAqIG56KTtcbiAgICAgICAgXG4gICAgICAgIG5vcm1hbHMucHVzaChueCAvIGxlbmd0aF9uLCBueSAvIGxlbmd0aF9uLCBueiAvIGxlbmd0aF9uKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFVW5Z2Q5qCHXG4gICAgICAgIHV2cy5wdXNoKGogLyB0aGlzLnJhZGlhbFNlZ21lbnRzLCBzKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8g55Sf5oiQ57Si5byVXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNlZ21lbnRzOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5yYWRpYWxTZWdtZW50czsgaisrKSB7XG4gICAgICAgIGNvbnN0IGEgPSBpICogKHRoaXMucmFkaWFsU2VnbWVudHMgKyAxKSArIGo7XG4gICAgICAgIGNvbnN0IGIgPSBhICsgdGhpcy5yYWRpYWxTZWdtZW50cyArIDE7XG4gICAgICAgIGNvbnN0IGMgPSBhICsgMTtcbiAgICAgICAgY29uc3QgZCA9IGIgKyAxO1xuICAgICAgICBcbiAgICAgICAgLy8g5Lik5Liq5LiJ6KeS5b2i57uE5oiQ5LiA5Liq5Zub6L655b2iXG4gICAgICAgIGluZGljZXMucHVzaChhLCBiLCBjKTtcbiAgICAgICAgaW5kaWNlcy5wdXNoKGIsIGQsIGMpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyDorr7nva7lh6DkvZXkvZPlsZ7mgKdcbiAgICB0aGlzLmdlb21ldHJ5LnNldEluZGV4KGluZGljZXMpO1xuICAgIHRoaXMuZ2VvbWV0cnkuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKHZlcnRpY2VzLCAzKSk7XG4gICAgdGhpcy5nZW9tZXRyeS5zZXRBdHRyaWJ1dGUoJ25vcm1hbCcsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKG5vcm1hbHMsIDMpKTtcbiAgICB0aGlzLmdlb21ldHJ5LnNldEF0dHJpYnV0ZSgndXYnLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSh1dnMsIDIpKTtcbiAgICBcbiAgICAvLyDorqHnrpfovrnnlYznkIPlkozovrnnlYzmoYZcbiAgICB0aGlzLmdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpO1xuICAgIHRoaXMuZ2VvbWV0cnkuY29tcHV0ZUJvdW5kaW5nQm94KCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDojrflj5bnlJ/miJDnmoTlh6DkvZXkvZNcbiAgICovXG4gIGdldEdlb21ldHJ5KCkge1xuICAgIHJldHVybiB0aGlzLmdlb21ldHJ5O1xuICB9XG4gIFxuICAvKipcbiAgICog5Yib5bu65omH5b2i54mH5q615Yeg5L2V5L2TXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzZWdtZW50SW5kZXggLSDmiYflvaLntKLlvJUgKDAtMylcbiAgICogQHBhcmFtIHtudW1iZXJ9IHNlY3RvckNvdW50IC0g5oC75omH5b2i5pWw6YePICjpgJrluLjmmK80KVxuICAgKiBAcmV0dXJucyB7VEhSRUUuQnVmZmVyR2VvbWV0cnl9IOaJh+W9oueJh+auteWHoOS9leS9k1xuICAgKi9cbiAgY3JlYXRlU2VjdG9yR2VvbWV0cnkoc2VnbWVudEluZGV4LCBzZWN0b3JDb3VudCA9IDQpIHtcbiAgICBjb25zdCB2ZXJ0aWNlcyA9IFtdO1xuICAgIGNvbnN0IG5vcm1hbHMgPSBbXTtcbiAgICBjb25zdCB1dnMgPSBbXTtcbiAgICBjb25zdCBpbmRpY2VzID0gW107XG4gICAgXG4gICAgLy8g6K6h566X6KeS5bqm6IyD5Zu0XG4gICAgY29uc3QgYW5nbGVQZXJTZWN0b3IgPSAoTWF0aC5QSSAqIDIpIC8gc2VjdG9yQ291bnQ7XG4gICAgY29uc3Qgc3RhcnRBbmdsZSA9IHNlZ21lbnRJbmRleCAqIGFuZ2xlUGVyU2VjdG9yO1xuICAgIGNvbnN0IGVuZEFuZ2xlID0gKHNlZ21lbnRJbmRleCArIDEpICogYW5nbGVQZXJTZWN0b3I7XG4gICAgXG4gICAgLy8g6K6h566X5q+P5Liq5omH5b2i55qE5b6E5ZCR5YiG5q615pWwXG4gICAgY29uc3QgcmFkaWFsU2VnbWVudHNQZXJTZWN0b3IgPSBNYXRoLm1heCg4LCBNYXRoLmZsb29yKHRoaXMucmFkaWFsU2VnbWVudHMgLyBzZWN0b3JDb3VudCkpO1xuICAgIFxuICAgIC8vIOeUn+aIkOaJh+W9oumhtueCuVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IHRoaXMuc2VnbWVudHM7IGkrKykge1xuICAgICAgY29uc3QgcyA9IGkgLyB0aGlzLnNlZ21lbnRzOyAvLyDlj4LmlbAgcyDiiIggWzAsMV1cbiAgICAgIGNvbnN0IHogPSBzICogdGhpcy5sZW5ndGg7ICAgLy8gWuWdkOagh1xuICAgICAgY29uc3QgcmFkaXVzID0gdGhpcy5jYWxjdWxhdGVSYWRpdXMocyk7XG4gICAgICBcbiAgICAgIC8vIOiuoeeul+azleWQkemHj+mcgOimgeeahOWvvOaVsFxuICAgICAgY29uc3QgZGVsdGFTID0gMC4wMDE7XG4gICAgICBjb25zdCByX25leHQgPSB0aGlzLmNhbGN1bGF0ZVJhZGl1cyhNYXRoLm1pbigxLCBzICsgZGVsdGFTKSk7XG4gICAgICBjb25zdCByX3ByZXYgPSB0aGlzLmNhbGN1bGF0ZVJhZGl1cyhNYXRoLm1heCgwLCBzIC0gZGVsdGFTKSk7XG4gICAgICBjb25zdCBkcl9kcyA9IChyX25leHQgLSByX3ByZXYpIC8gKDIgKiBkZWx0YVMpO1xuICAgICAgY29uc3QgZHJfZHogPSBkcl9kcyAvIHRoaXMubGVuZ3RoO1xuICAgICAgXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8PSByYWRpYWxTZWdtZW50c1BlclNlY3RvcjsgaisrKSB7XG4gICAgICAgIC8vIOWcqOaJh+W9ouinkuW6puiMg+WbtOWGheWIhuW4g1xuICAgICAgICBjb25zdCB0ID0gaiAvIHJhZGlhbFNlZ21lbnRzUGVyU2VjdG9yO1xuICAgICAgICBjb25zdCBhbmdsZSA9IHN0YXJ0QW5nbGUgKyB0ICogKGVuZEFuZ2xlIC0gc3RhcnRBbmdsZSk7XG4gICAgICAgIFxuICAgICAgICAvLyDorqHnrpfpobbngrnkvY3nva5cbiAgICAgICAgY29uc3QgeCA9IE1hdGguY29zKGFuZ2xlKSAqIHJhZGl1cztcbiAgICAgICAgY29uc3QgeSA9IE1hdGguc2luKGFuZ2xlKSAqIHJhZGl1cztcbiAgICAgICAgXG4gICAgICAgIHZlcnRpY2VzLnB1c2goeCwgeSwgeik7XG4gICAgICAgIFxuICAgICAgICAvLyDorqHnrpfms5XlkJHph49cbiAgICAgICAgY29uc3QgbnggPSAtZHJfZHogKiBNYXRoLmNvcyhhbmdsZSk7XG4gICAgICAgIGNvbnN0IG55ID0gLWRyX2R6ICogTWF0aC5zaW4oYW5nbGUpO1xuICAgICAgICBjb25zdCBueiA9IDE7XG4gICAgICAgIGNvbnN0IGxlbmd0aF9uID0gTWF0aC5zcXJ0KG54ICogbnggKyBueSAqIG55ICsgbnogKiBueik7XG4gICAgICAgIFxuICAgICAgICBub3JtYWxzLnB1c2gobnggLyBsZW5ndGhfbiwgbnkgLyBsZW5ndGhfbiwgbnogLyBsZW5ndGhfbik7XG4gICAgICAgIFxuICAgICAgICAvLyBVVuWdkOagh1xuICAgICAgICB1dnMucHVzaCh0LCBzKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8g55Sf5oiQ57Si5byVXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNlZ21lbnRzOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcmFkaWFsU2VnbWVudHNQZXJTZWN0b3I7IGorKykge1xuICAgICAgICBjb25zdCBhID0gaSAqIChyYWRpYWxTZWdtZW50c1BlclNlY3RvciArIDEpICsgajtcbiAgICAgICAgY29uc3QgYiA9IGEgKyByYWRpYWxTZWdtZW50c1BlclNlY3RvciArIDE7XG4gICAgICAgIGNvbnN0IGMgPSBhICsgMTtcbiAgICAgICAgY29uc3QgZCA9IGIgKyAxO1xuICAgICAgICBcbiAgICAgICAgLy8g5Lik5Liq5LiJ6KeS5b2i57uE5oiQ5LiA5Liq5Zub6L655b2iXG4gICAgICAgIGluZGljZXMucHVzaChhLCBiLCBjKTtcbiAgICAgICAgaW5kaWNlcy5wdXNoKGIsIGQsIGMpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyDliJvlu7rmlrDnmoTlh6DkvZXkvZNcbiAgICBjb25zdCBzZWN0b3JHZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xuICAgIHNlY3Rvckdlb21ldHJ5LnNldEluZGV4KGluZGljZXMpO1xuICAgIHNlY3Rvckdlb21ldHJ5LnNldEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSh2ZXJ0aWNlcywgMykpO1xuICAgIHNlY3Rvckdlb21ldHJ5LnNldEF0dHJpYnV0ZSgnbm9ybWFsJywgbmV3IFRIUkVFLkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUobm9ybWFscywgMykpO1xuICAgIHNlY3Rvckdlb21ldHJ5LnNldEF0dHJpYnV0ZSgndXYnLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSh1dnMsIDIpKTtcbiAgICBcbiAgICAvLyDorqHnrpfovrnnlYznkIPlkozovrnnlYzmoYZcbiAgICBzZWN0b3JHZW9tZXRyeS5jb21wdXRlQm91bmRpbmdTcGhlcmUoKTtcbiAgICBzZWN0b3JHZW9tZXRyeS5jb21wdXRlQm91bmRpbmdCb3goKTtcbiAgICBcbiAgICByZXR1cm4gc2VjdG9yR2VvbWV0cnk7XG4gIH1cblxuICAvKipcbiAgICog6ZSA5q+B5Yeg5L2V5L2T6LWE5rqQXG4gICAqL1xuICBkaXNwb3NlKCkge1xuICAgIGlmICh0aGlzLmdlb21ldHJ5KSB7XG4gICAgICB0aGlzLmdlb21ldHJ5LmRpc3Bvc2UoKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiDkvr/mjbflh73mlbDvvJrliJvlu7rml4vovazmm7Lnur/lh6DkvZXkvZNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvdGF0aW9uQ3VydmVHZW9tZXRyeShyMSwgcjIsIGxlbmd0aCwgY3VydmVUeXBlID0gJ0cyJywgc2VnbWVudHMgPSA1MCwgcmFkaWFsU2VnbWVudHMgPSAzMikge1xuICBjb25zdCBnZW5lcmF0b3IgPSBuZXcgUm90YXRpb25DdXJ2ZUdlb21ldHJ5KHIxLCByMiwgbGVuZ3RoLCBjdXJ2ZVR5cGUsIHNlZ21lbnRzLCByYWRpYWxTZWdtZW50cyk7XG4gIHJldHVybiBnZW5lcmF0b3IuZ2V0R2VvbWV0cnkoKTtcbn1cbiIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7IENPTkZJRyB9IGZyb20gJy4uL2NvbmZpZ0xvYWRlci5qcyc7XG5cbi8qKlxuICog57uf5LiA57uE5Lu25p2Q6LSo566h55CG5ZmoXG4gKiDkuLpjeWxpbmRlcjLjgIFyb3RhdGlvbkN1cnZlQ29ubmVjdGlvbuWSjHN1cGVyZWxsaXBzZVRyYW5zaXRpb27mj5Dkvpvnu5/kuIDnmoTmnZDotKjnrqHnkIZcbiAqIOS9v+WFtuminOiJsuWSjOadkOi0qOespuWQiOekuuazouWZqOWGhemDqOeahOmHkeWxnuadkOi0qOmjjuagvFxuICovXG5leHBvcnQgY2xhc3MgVW5pZmllZENvbXBvbmVudE1hdGVyaWFsIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy50ZXh0dXJlTG9hZGVyID0gbmV3IFRIUkVFLlRleHR1cmVMb2FkZXIoKTtcbiAgICB0aGlzLm1hdGVyaWFsQ2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgdGhpcy50ZXh0dXJlcyA9IHt9O1xuICAgIFxuICAgIC8vIOe7n+S4gOeahOadkOi0qOmFjee9ru+8iOWfuuS6juekuuazouWZqOWGhemDqOmHkeWxnuadkOi0qO+8iVxuICAgIHRoaXMudW5pZmllZENvbmZpZyA9IHtcbiAgICAgIGNvbG9yOiAweEYwRjBGMCwgICAgICAgIC8vIOmTtueZveiJsumHkeWxnuiJslxuICAgICAgbWV0YWxuZXNzOiAwLjYsICAgICAgICAgLy8g6YeR5bGe5bqmXG4gICAgICByb3VnaG5lc3M6IDAuMywgICAgICAgICAvLyDnspfns5nluqZcbiAgICAgIG9wYWNpdHk6IDEuMCwgICAgICAgICAgIC8vIOmAj+aYjuW6piAtIOS/ruaUueS4uuWujOWFqOS4jemAj+aYjlxuICAgICAgZW52TWFwSW50ZW5zaXR5OiAxLjAsICAgLy8g546v5aKD6LS05Zu+5by65bqmXG4gICAgICBzaWRlOiBUSFJFRS5Eb3VibGVTaWRlLCAvLyDlj4zpnaLmuLLmn5NcbiAgICAgIGRlcHRoV3JpdGU6IHRydWUsICAgICAgIC8vIOWQr+eUqOa3seW6puWGmeWFpe+8iOS4jemAj+aYjueJqeS9k++8iVxuICAgICAgdHJhbnNwYXJlbnQ6IGZhbHNlICAgICAgLy8g56aB55So6YCP5piOXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiDliJ3lp4vljJbnu5/kuIDmnZDotKjns7vnu59cbiAgICogQHJldHVybnMge1Byb21pc2V9IOi/lOWbnlByb21pc2XvvIzlnKjliJ3lp4vljJblrozmiJDlkI7op6PmnpBcbiAgICovXG4gIGFzeW5jIGluaXRpYWxpemUoKSB7XG4gICAgY29uc29sZS5sb2coJ/Cfjqgg5q2j5Zyo5Yid5aeL5YyW57uf5LiA57uE5Lu25p2Q6LSo57O757ufLi4uJyk7XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIC8vIOWKoOi9vemHkeWxnui0tOWbvlxuICAgICAgYXdhaXQgdGhpcy5sb2FkTWV0YWxUZXh0dXJlcygpO1xuICAgICAgXG4gICAgICAvLyDpooTliJvlu7rluLjnlKjmnZDotKhcbiAgICAgIHRoaXMuY3JlYXRlU3RhbmRhcmRNYXRlcmlhbCgpO1xuICAgICAgdGhpcy5jcmVhdGVFeHBsb2RlZE1hdGVyaWFsKCk7XG4gICAgICB0aGlzLmNyZWF0ZVRyYW5zaXRpb25NYXRlcmlhbCgpO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygn4pyFIOe7n+S4gOe7hOS7tuadkOi0qOezu+e7n+WIneWni+WMluWujOaIkCcpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUud2Fybign4pqg77iPIOe7n+S4gOadkOi0qOezu+e7n+WIneWni+WMluWksei0pe+8jOS9v+eUqOaXoOi0tOWbvuadkOi0qDonLCBlcnJvcik7XG4gICAgICB0aGlzLmNyZWF0ZUZhbGxiYWNrTWF0ZXJpYWxzKCk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOWKoOi9vemHkeWxnui0tOWbvlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX0g6LS05Zu+5Yqg6L29UHJvbWlzZVxuICAgKi9cbiAgYXN5bmMgbG9hZE1ldGFsVGV4dHVyZXMoKSB7XG4gICAgY29uc3QgbWV0YWxDb25maWcgPSBDT05GSUcubWF0ZXJpYWxzLm1ldGFsO1xuICAgIGNvbnN0IGxvYWRQcm9taXNlcyA9IFtdO1xuXG4gICAgaWYgKG1ldGFsQ29uZmlnLnRleHR1cmVzICYmIG1ldGFsQ29uZmlnLnRleHR1cmVzLm1hcCkge1xuICAgICAgbG9hZFByb21pc2VzLnB1c2godGhpcy5sb2FkVGV4dHVyZSgnbWV0YWxNYXAnLCBtZXRhbENvbmZpZy50ZXh0dXJlcy5tYXApKTtcbiAgICB9XG5cbiAgICBpZiAobWV0YWxDb25maWcudGV4dHVyZXMgJiYgbWV0YWxDb25maWcudGV4dHVyZXMubm9ybWFsTWFwKSB7XG4gICAgICBsb2FkUHJvbWlzZXMucHVzaCh0aGlzLmxvYWRUZXh0dXJlKCdtZXRhbE5vcm1hbCcsIG1ldGFsQ29uZmlnLnRleHR1cmVzLm5vcm1hbE1hcCkpO1xuICAgIH1cblxuICAgIGlmIChtZXRhbENvbmZpZy50ZXh0dXJlcyAmJiBtZXRhbENvbmZpZy50ZXh0dXJlcy5yb3VnaG5lc3NNYXApIHtcbiAgICAgIGxvYWRQcm9taXNlcy5wdXNoKHRoaXMubG9hZFRleHR1cmUoJ21ldGFsUm91Z2huZXNzJywgbWV0YWxDb25maWcudGV4dHVyZXMucm91Z2huZXNzTWFwKSk7XG4gICAgfVxuXG4gICAgaWYgKG1ldGFsQ29uZmlnLnRleHR1cmVzICYmIG1ldGFsQ29uZmlnLnRleHR1cmVzLm1ldGFsbmVzc01hcCkge1xuICAgICAgbG9hZFByb21pc2VzLnB1c2godGhpcy5sb2FkVGV4dHVyZSgnbWV0YWxNZXRhbG5lc3MnLCBtZXRhbENvbmZpZy50ZXh0dXJlcy5tZXRhbG5lc3NNYXApKTtcbiAgICB9XG5cbiAgICBhd2FpdCBQcm9taXNlLmFsbChsb2FkUHJvbWlzZXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIOWKoOi9veWNleS4qui0tOWbvlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIOi0tOWbvuWQjeensFxuICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aCAtIOi0tOWbvui3r+W+hFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX0g6LS05Zu+5Yqg6L29UHJvbWlzZVxuICAgKi9cbiAgbG9hZFRleHR1cmUobmFtZSwgcGF0aCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLnRleHR1cmVMb2FkZXIubG9hZChcbiAgICAgICAgcGF0aCxcbiAgICAgICAgKHRleHR1cmUpID0+IHtcbiAgICAgICAgICAvLyDorr7nva7otLTlm77lj4LmlbBcbiAgICAgICAgICB0ZXh0dXJlLndyYXBTID0gVEhSRUUuUmVwZWF0V3JhcHBpbmc7XG4gICAgICAgICAgdGV4dHVyZS53cmFwVCA9IFRIUkVFLlJlcGVhdFdyYXBwaW5nO1xuICAgICAgICAgIHRleHR1cmUuZmxpcFkgPSBmYWxzZTtcbiAgICAgICAgICBcbiAgICAgICAgICB0aGlzLnRleHR1cmVzW25hbWVdID0gdGV4dHVyZTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhg8J+TuCDotLTlm77liqDovb3miJDlip86ICR7bmFtZX1gKTtcbiAgICAgICAgICByZXNvbHZlKHRleHR1cmUpO1xuICAgICAgICB9LFxuICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgIChlcnJvcikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUud2Fybihg4p2MIOi0tOWbvuWKoOi9veWksei0pTogJHtuYW1lfWAsIGVycm9yKTtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG4gICAgICApO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIOWIm+W7uuagh+WHhue7n+S4gOadkOi0qFxuICAgKi9cbiAgY3JlYXRlU3RhbmRhcmRNYXRlcmlhbCgpIHtcbiAgICBjb25zdCBtYXRlcmlhbFByb3BzID0ge1xuICAgICAgLi4udGhpcy51bmlmaWVkQ29uZmlnXG4gICAgfTtcblxuICAgIC8vIOa3u+WKoOi0tOWbvu+8iOWmguaenOacie+8iVxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWFwKSB7XG4gICAgICBtYXRlcmlhbFByb3BzLm1hcCA9IHRoaXMudGV4dHVyZXMubWV0YWxNYXA7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudGV4dHVyZXMubWV0YWxOb3JtYWwpIHtcbiAgICAgIG1hdGVyaWFsUHJvcHMubm9ybWFsTWFwID0gdGhpcy50ZXh0dXJlcy5tZXRhbE5vcm1hbDtcbiAgICAgIG1hdGVyaWFsUHJvcHMubm9ybWFsU2NhbGUgPSBuZXcgVEhSRUUuVmVjdG9yMigxLCAxKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy50ZXh0dXJlcy5tZXRhbFJvdWdobmVzcykge1xuICAgICAgbWF0ZXJpYWxQcm9wcy5yb3VnaG5lc3NNYXAgPSB0aGlzLnRleHR1cmVzLm1ldGFsUm91Z2huZXNzO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWV0YWxuZXNzKSB7XG4gICAgICBtYXRlcmlhbFByb3BzLm1ldGFsbmVzc01hcCA9IHRoaXMudGV4dHVyZXMubWV0YWxNZXRhbG5lc3M7XG4gICAgfVxuXG4gICAgY29uc3QgbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFN0YW5kYXJkTWF0ZXJpYWwobWF0ZXJpYWxQcm9wcyk7XG4gICAgdGhpcy5tYXRlcmlhbENhY2hlLnNldCgnc3RhbmRhcmQnLCBtYXRlcmlhbCk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/CflKcg5qCH5YeG57uf5LiA5p2Q6LSo5Yib5bu65a6M5oiQJyk7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu654iG54K45YiG6Kej5pWI5p6c5p2Q6LSo77yI56iN5b6u6YCP5piO5LiA5Lqb77yJXG4gICAqL1xuICBjcmVhdGVFeHBsb2RlZE1hdGVyaWFsKCkge1xuICAgIGNvbnN0IG1hdGVyaWFsUHJvcHMgPSB7XG4gICAgICAuLi50aGlzLnVuaWZpZWRDb25maWcsXG4gICAgICBvcGFjaXR5OiAxLjAsICAgICAgICAgLy8g54iG54K45p2Q6LSo5Lmf5L+d5oyB5LiN6YCP5piOXG4gICAgICB0cmFuc3BhcmVudDogZmFsc2UsICAgLy8g56aB55So6YCP5piOXG4gICAgICBkZXB0aFdyaXRlOiB0cnVlICAgICAgLy8g5ZCv55So5rex5bqm5YaZ5YWlXG4gICAgfTtcblxuICAgIC8vIOa3u+WKoOi0tOWbvu+8iOWmguaenOacie+8iVxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWFwKSB7XG4gICAgICBtYXRlcmlhbFByb3BzLm1hcCA9IHRoaXMudGV4dHVyZXMubWV0YWxNYXA7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudGV4dHVyZXMubWV0YWxOb3JtYWwpIHtcbiAgICAgIG1hdGVyaWFsUHJvcHMubm9ybWFsTWFwID0gdGhpcy50ZXh0dXJlcy5tZXRhbE5vcm1hbDtcbiAgICAgIG1hdGVyaWFsUHJvcHMubm9ybWFsU2NhbGUgPSBuZXcgVEhSRUUuVmVjdG9yMigxLCAxKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy50ZXh0dXJlcy5tZXRhbFJvdWdobmVzcykge1xuICAgICAgbWF0ZXJpYWxQcm9wcy5yb3VnaG5lc3NNYXAgPSB0aGlzLnRleHR1cmVzLm1ldGFsUm91Z2huZXNzO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWV0YWxuZXNzKSB7XG4gICAgICBtYXRlcmlhbFByb3BzLm1ldGFsbmVzc01hcCA9IHRoaXMudGV4dHVyZXMubWV0YWxNZXRhbG5lc3M7XG4gICAgfVxuXG4gICAgY29uc3QgbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFN0YW5kYXJkTWF0ZXJpYWwobWF0ZXJpYWxQcm9wcyk7XG4gICAgdGhpcy5tYXRlcmlhbENhY2hlLnNldCgnZXhwbG9kZWQnLCBtYXRlcmlhbCk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/CfkqUg54iG54K45p2Q6LSo5Yib5bu65a6M5oiQJyk7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu66L+H5rih5p2Q6LSo77yI55So5LqOU3VwZXJlbGxpcHNlVHJhbnNpdGlvbu+8iVxuICAgKi9cbiAgY3JlYXRlVHJhbnNpdGlvbk1hdGVyaWFsKCkge1xuICAgIGNvbnN0IG1hdGVyaWFsUHJvcHMgPSB7XG4gICAgICAuLi50aGlzLnVuaWZpZWRDb25maWcsXG4gICAgICBvcGFjaXR5OiAxLjAsICAgICAgICAgLy8g6L+H5rih5p2Q6LSo5Lmf5L+d5oyB5LiN6YCP5piOXG4gICAgICB0cmFuc3BhcmVudDogZmFsc2UsICAgLy8g56aB55So6YCP5piOXG4gICAgICBkZXB0aFdyaXRlOiB0cnVlICAgICAgLy8g5ZCv55So5rex5bqm5YaZ5YWlXG4gICAgfTtcblxuICAgIC8vIOa3u+WKoOi0tOWbvu+8iOWmguaenOacie+8iVxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWFwKSB7XG4gICAgICBtYXRlcmlhbFByb3BzLm1hcCA9IHRoaXMudGV4dHVyZXMubWV0YWxNYXA7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudGV4dHVyZXMubWV0YWxOb3JtYWwpIHtcbiAgICAgIG1hdGVyaWFsUHJvcHMubm9ybWFsTWFwID0gdGhpcy50ZXh0dXJlcy5tZXRhbE5vcm1hbDtcbiAgICAgIG1hdGVyaWFsUHJvcHMubm9ybWFsU2NhbGUgPSBuZXcgVEhSRUUuVmVjdG9yMigxLCAxKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy50ZXh0dXJlcy5tZXRhbFJvdWdobmVzcykge1xuICAgICAgbWF0ZXJpYWxQcm9wcy5yb3VnaG5lc3NNYXAgPSB0aGlzLnRleHR1cmVzLm1ldGFsUm91Z2huZXNzO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWV0YWxuZXNzKSB7XG4gICAgICBtYXRlcmlhbFByb3BzLm1ldGFsbmVzc01hcCA9IHRoaXMudGV4dHVyZXMubWV0YWxNZXRhbG5lc3M7XG4gICAgfVxuXG4gICAgY29uc3QgbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFN0YW5kYXJkTWF0ZXJpYWwobWF0ZXJpYWxQcm9wcyk7XG4gICAgdGhpcy5tYXRlcmlhbENhY2hlLnNldCgndHJhbnNpdGlvbicsIG1hdGVyaWFsKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZygn8J+UhCDov4fmuKHmnZDotKjliJvlu7rlrozmiJAnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDliJvlu7rlpIfnlKjmnZDotKjvvIjml6DotLTlm77niYjmnKzvvIlcbiAgICovXG4gIGNyZWF0ZUZhbGxiYWNrTWF0ZXJpYWxzKCkge1xuICAgIGNvbnNvbGUubG9nKCfwn5qnIOWIm+W7uuWkh+eUqOe7n+S4gOadkOi0qO+8iOaXoOi0tOWbvu+8iScpO1xuICAgIFxuICAgIC8vIOagh+WHhuadkOi0qFxuICAgIGNvbnN0IHN0YW5kYXJkTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFN0YW5kYXJkTWF0ZXJpYWwodGhpcy51bmlmaWVkQ29uZmlnKTtcbiAgICB0aGlzLm1hdGVyaWFsQ2FjaGUuc2V0KCdzdGFuZGFyZCcsIHN0YW5kYXJkTWF0ZXJpYWwpO1xuICAgIFxuICAgIC8vIOeIhueCuOadkOi0qFxuICAgIGNvbnN0IGV4cGxvZGVkTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFN0YW5kYXJkTWF0ZXJpYWwoe1xuICAgICAgLi4udGhpcy51bmlmaWVkQ29uZmlnLFxuICAgICAgb3BhY2l0eTogMS4wLFxuICAgICAgdHJhbnNwYXJlbnQ6IGZhbHNlLFxuICAgICAgZGVwdGhXcml0ZTogdHJ1ZVxuICAgIH0pO1xuICAgIHRoaXMubWF0ZXJpYWxDYWNoZS5zZXQoJ2V4cGxvZGVkJywgZXhwbG9kZWRNYXRlcmlhbCk7XG4gICAgXG4gICAgLy8g6L+H5rih5p2Q6LSoXG4gICAgY29uc3QgdHJhbnNpdGlvbk1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKHtcbiAgICAgIC4uLnRoaXMudW5pZmllZENvbmZpZyxcbiAgICAgIG9wYWNpdHk6IDEuMCxcbiAgICAgIHRyYW5zcGFyZW50OiBmYWxzZSxcbiAgICAgIGRlcHRoV3JpdGU6IHRydWVcbiAgICB9KTtcbiAgICB0aGlzLm1hdGVyaWFsQ2FjaGUuc2V0KCd0cmFuc2l0aW9uJywgdHJhbnNpdGlvbk1hdGVyaWFsKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5bmjIflrprnsbvlnovnmoTmnZDotKhcbiAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGUgLSDmnZDotKjnsbvlnosgKCdzdGFuZGFyZCcsICdleHBsb2RlZCcsICd0cmFuc2l0aW9uJylcbiAgICogQHJldHVybnMge1RIUkVFLk1hdGVyaWFsfSDmnZDotKjlr7nosaFcbiAgICovXG4gIGdldE1hdGVyaWFsKHR5cGUgPSAnc3RhbmRhcmQnKSB7XG4gICAgaWYgKCF0aGlzLm1hdGVyaWFsQ2FjaGUuaGFzKHR5cGUpKSB7XG4gICAgICBjb25zb2xlLndhcm4oYOKaoO+4jyDmnKrmib7liLDmnZDotKjnsbvlnos6ICR7dHlwZX3vvIzov5Tlm57moIflh4bmnZDotKhgKTtcbiAgICAgIHJldHVybiB0aGlzLm1hdGVyaWFsQ2FjaGUuZ2V0KCdzdGFuZGFyZCcpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5tYXRlcmlhbENhY2hlLmdldCh0eXBlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDliJvlu7roh6rlrprkuYnmnZDotKjvvIjln7rkuo7nu5/kuIDphY3nva7vvIlcbiAgICogQHBhcmFtIHtPYmplY3R9IGN1c3RvbVByb3BzIC0g6Ieq5a6a5LmJ5bGe5oCnXG4gICAqIEByZXR1cm5zIHtUSFJFRS5NYXRlcmlhbH0g6Ieq5a6a5LmJ5p2Q6LSoXG4gICAqL1xuICBjcmVhdGVDdXN0b21NYXRlcmlhbChjdXN0b21Qcm9wcyA9IHt9KSB7XG4gICAgY29uc3QgbWF0ZXJpYWxQcm9wcyA9IHtcbiAgICAgIC4uLnRoaXMudW5pZmllZENvbmZpZyxcbiAgICAgIC4uLmN1c3RvbVByb3BzXG4gICAgfTtcblxuICAgIC8vIOa3u+WKoOi0tOWbvu+8iOWmguaenOacieS4lOeUqOaIt+ayoeacieimhueblu+8iVxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWFwICYmICFjdXN0b21Qcm9wcy5tYXApIHtcbiAgICAgIG1hdGVyaWFsUHJvcHMubWFwID0gdGhpcy50ZXh0dXJlcy5tZXRhbE1hcDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy50ZXh0dXJlcy5tZXRhbE5vcm1hbCAmJiAhY3VzdG9tUHJvcHMubm9ybWFsTWFwKSB7XG4gICAgICBtYXRlcmlhbFByb3BzLm5vcm1hbE1hcCA9IHRoaXMudGV4dHVyZXMubWV0YWxOb3JtYWw7XG4gICAgICBtYXRlcmlhbFByb3BzLm5vcm1hbFNjYWxlID0gbmV3IFRIUkVFLlZlY3RvcjIoMSwgMSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudGV4dHVyZXMubWV0YWxSb3VnaG5lc3MgJiYgIWN1c3RvbVByb3BzLnJvdWdobmVzc01hcCkge1xuICAgICAgbWF0ZXJpYWxQcm9wcy5yb3VnaG5lc3NNYXAgPSB0aGlzLnRleHR1cmVzLm1ldGFsUm91Z2huZXNzO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWV0YWxuZXNzICYmICFjdXN0b21Qcm9wcy5tZXRhbG5lc3NNYXApIHtcbiAgICAgIG1hdGVyaWFsUHJvcHMubWV0YWxuZXNzTWFwID0gdGhpcy50ZXh0dXJlcy5tZXRhbE1ldGFsbmVzcztcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKG1hdGVyaWFsUHJvcHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPlue7n+S4gOeahOminOiJsuWAvFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSAxNui/m+WItuminOiJsuWAvFxuICAgKi9cbiAgZ2V0VW5pZmllZENvbG9yKCkge1xuICAgIHJldHVybiB0aGlzLnVuaWZpZWRDb25maWcuY29sb3I7XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W57uf5LiA55qE6YCP5piO5bqm5YC8XG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlIC0g5p2Q6LSo57G75Z6LXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IOmAj+aYjuW6puWAvFxuICAgKi9cbiAgZ2V0VW5pZmllZE9wYWNpdHkodHlwZSA9ICdzdGFuZGFyZCcpIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ2V4cGxvZGVkJzpcbiAgICAgICAgcmV0dXJuIDAuNjtcbiAgICAgIGNhc2UgJ3RyYW5zaXRpb24nOlxuICAgICAgICByZXR1cm4gMC44O1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZmllZENvbmZpZy5vcGFjaXR5O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDmm7TmlrDnu5/kuIDphY3nva5cbiAgICogQHBhcmFtIHtPYmplY3R9IG5ld0NvbmZpZyAtIOaWsOeahOmFjee9rlxuICAgKi9cbiAgdXBkYXRlVW5pZmllZENvbmZpZyhuZXdDb25maWcpIHtcbiAgICB0aGlzLnVuaWZpZWRDb25maWcgPSB7IC4uLnRoaXMudW5pZmllZENvbmZpZywgLi4ubmV3Q29uZmlnIH07XG4gICAgXG4gICAgLy8g6YeN5paw5Yib5bu65omA5pyJ5p2Q6LSoXG4gICAgdGhpcy5tYXRlcmlhbENhY2hlLmNsZWFyKCk7XG4gICAgaWYgKE9iamVjdC5rZXlzKHRoaXMudGV4dHVyZXMpLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuY3JlYXRlU3RhbmRhcmRNYXRlcmlhbCgpO1xuICAgICAgdGhpcy5jcmVhdGVFeHBsb2RlZE1hdGVyaWFsKCk7XG4gICAgICB0aGlzLmNyZWF0ZVRyYW5zaXRpb25NYXRlcmlhbCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNyZWF0ZUZhbGxiYWNrTWF0ZXJpYWxzKCk7XG4gICAgfVxuICAgIFxuICAgIGNvbnNvbGUubG9nKCfwn5SEIOe7n+S4gOadkOi0qOmFjee9ruW3suabtOaWsCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIOmHiuaUvuaJgOaciei1hOa6kFxuICAgKi9cbiAgZGlzcG9zZSgpIHtcbiAgICAvLyDph4rmlL7otLTlm75cbiAgICBPYmplY3QudmFsdWVzKHRoaXMudGV4dHVyZXMpLmZvckVhY2godGV4dHVyZSA9PiB7XG4gICAgICB0ZXh0dXJlLmRpc3Bvc2UoKTtcbiAgICB9KTtcblxuICAgIC8vIOmHiuaUvuadkOi0qFxuICAgIHRoaXMubWF0ZXJpYWxDYWNoZS5mb3JFYWNoKG1hdGVyaWFsID0+IHtcbiAgICAgIG1hdGVyaWFsLmRpc3Bvc2UoKTtcbiAgICB9KTtcblxuICAgIHRoaXMudGV4dHVyZXMgPSB7fTtcbiAgICB0aGlzLm1hdGVyaWFsQ2FjaGUuY2xlYXIoKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZygn8J+Xke+4jyDnu5/kuIDnu4Tku7bmnZDotKjotYTmupDlt7Lph4rmlL4nKTtcbiAgfVxufVxuXG4vLyDliJvlu7rljZXkvovlrp7kvotcbmV4cG9ydCBjb25zdCB1bmlmaWVkQ29tcG9uZW50TWF0ZXJpYWwgPSBuZXcgVW5pZmllZENvbXBvbmVudE1hdGVyaWFsKCk7XG4iLCJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgeyBSb3RhdGlvbkN1cnZlR2VvbWV0cnkgfSBmcm9tICcuLi9nZW9tZXRyeS9Sb3RhdGlvbkN1cnZlR2VvbWV0cnkuanMnO1xuaW1wb3J0IHsgdW5pZmllZENvbXBvbmVudE1hdGVyaWFsIH0gZnJvbSAnLi4vbWF0ZXJpYWxzL1VuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5qcyc7XG5cbi8qKlxuICog5ZyG5p+x5L2T6L+e5o6l57uE5Lu2XG4gKiDkvb/nlKjml4vovazmm7Lnur/nlJ/miJDkuKTkuKrlnIbmn7HkvZPkuYvpl7TnmoTlubPmu5Hov57mjqVcbiAqL1xuZXhwb3J0IGNsYXNzIEN5bGluZGVyQ29ubmVjdGlvbiB7XG4gIFxuICAvKipcbiAgICog5p6E6YCg5Ye95pWwXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjeWxpbmRlcjFDb25maWcgLSDnrKzkuIDkuKrlnIbmn7HkvZPphY3nva5cbiAgICogQHBhcmFtIHtPYmplY3R9IGN5bGluZGVyMkNvbmZpZyAtIOesrOS6jOS4quWchuafseS9k+mFjee9rlxuICAgKiBAcGFyYW0ge09iamVjdH0gY29ubmVjdGlvbkNvbmZpZyAtIOi/nuaOpemFjee9rlxuICAgKi9cbiAgY29uc3RydWN0b3IoY3lsaW5kZXIxQ29uZmlnLCBjeWxpbmRlcjJDb25maWcsIGNvbm5lY3Rpb25Db25maWcgPSB7fSkge1xuICAgIHRoaXMuY3lsaW5kZXIxQ29uZmlnID0gY3lsaW5kZXIxQ29uZmlnO1xuICAgIHRoaXMuY3lsaW5kZXIyQ29uZmlnID0gY3lsaW5kZXIyQ29uZmlnO1xuICAgIHRoaXMuY29ubmVjdGlvbkNvbmZpZyA9IHtcbiAgICAgIGN1cnZlVHlwZTogY29ubmVjdGlvbkNvbmZpZy5jdXJ2ZVR5cGUgfHwgJ0cyJyxcbiAgICAgIHNlZ21lbnRzOiBjb25uZWN0aW9uQ29uZmlnLnNlZ21lbnRzIHx8IDUwLFxuICAgICAgcmFkaWFsU2VnbWVudHM6IGNvbm5lY3Rpb25Db25maWcucmFkaWFsU2VnbWVudHMgfHwgMzIsXG4gICAgICB2aXNpYmxlOiBjb25uZWN0aW9uQ29uZmlnLnZpc2libGUgIT09IGZhbHNlLFxuICAgICAgY29sb3I6IGNvbm5lY3Rpb25Db25maWcuY29sb3IgfHwgJzB4NjZhYWZmJyxcbiAgICAgIG9wYWNpdHk6IGNvbm5lY3Rpb25Db25maWcub3BhY2l0eSB8fCAwLjcsXG4gICAgICBjb25uZWN0aW9uTGVuZ3RoOiBjb25uZWN0aW9uQ29uZmlnLmNvbm5lY3Rpb25MZW5ndGggfHwgMS4wLCAvLyDov57mjqXljLrln5/plb/luqZcbiAgICAgIHBvc2l0aW9uOiB7XG4gICAgICAgIG9mZnNldDogY29ubmVjdGlvbkNvbmZpZy5wb3NpdGlvbj8ub2Zmc2V0IHx8IHsgeDogMCwgeTogMCwgejogMCB9XG4gICAgICB9LFxuICAgICAgcm90YXRpb246IHtcbiAgICAgICAgb2Zmc2V0OiBjb25uZWN0aW9uQ29uZmlnLnJvdGF0aW9uPy5vZmZzZXQgfHwgeyB4OiAwLCB5OiAwLCB6OiAwIH1cbiAgICAgIH0sXG4gICAgICAuLi5jb25uZWN0aW9uQ29uZmlnXG4gICAgfTtcbiAgICBcbiAgICB0aGlzLmNvbm5lY3Rpb25Hcm91cCA9IG5ldyBUSFJFRS5Hcm91cCgpO1xuICAgIHRoaXMuY29ubmVjdGlvbkdyb3VwLm5hbWUgPSAnQ3lsaW5kZXJDb25uZWN0aW9uJztcbiAgICBcbiAgICB0aGlzLmNvbm5lY3Rpb25NZXNoZXMgPSBbXTtcbiAgICB0aGlzLm1hdGVyaWFscyA9IFtdO1xuICAgIFxuICAgIHRoaXMuY3JlYXRlQ29ubmVjdGlvbnMoKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOWIm+W7uui/nuaOpVxuICAgKi9cbiAgY3JlYXRlQ29ubmVjdGlvbnMoKSB7XG4gICAgLy8g6K6h566X5Lik5Liq5ZyG5p+x5L2T5LmL6Ze055qE6L+e5o6l5Y+C5pWwXG4gICAgY29uc3QgY29ubmVjdGlvbkluZm8gPSB0aGlzLmNhbGN1bGF0ZUNvbm5lY3Rpb25QYXJhbWV0ZXJzKCk7XG4gICAgXG4gICAgaWYgKGNvbm5lY3Rpb25JbmZvLm5lZWRzQ29ubmVjdGlvbikge1xuICAgICAgdGhpcy5jcmVhdGVDb25uZWN0aW9uTWVzaChjb25uZWN0aW9uSW5mbyk7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog6K6h566X6L+e5o6l5Y+C5pWwXG4gICAqL1xuICBjYWxjdWxhdGVDb25uZWN0aW9uUGFyYW1ldGVycygpIHtcbiAgICBjb25zdCBwb3MxID0gdGhpcy5jeWxpbmRlcjFDb25maWcucG9zaXRpb247XG4gICAgY29uc3QgcG9zMiA9IHRoaXMuY3lsaW5kZXIyQ29uZmlnLnBvc2l0aW9uO1xuICAgIGNvbnN0IHIxID0gdGhpcy5jeWxpbmRlcjFDb25maWcucmFkaXVzO1xuICAgIGNvbnN0IHIyID0gdGhpcy5jeWxpbmRlcjJDb25maWcucmFkaXVzO1xuICAgIFxuICAgIC8vIOiuoeeul+S4pOS4quWchuafseS9k+S4reW/g+S5i+mXtOeahOi3neemu+WSjOaWueWQkVxuICAgIGNvbnN0IGRpc3RhbmNlID0gTWF0aC5zcXJ0KFxuICAgICAgTWF0aC5wb3cocG9zMi54IC0gcG9zMS54LCAyKSArIFxuICAgICAgTWF0aC5wb3cocG9zMi55IC0gcG9zMS55LCAyKSArIFxuICAgICAgTWF0aC5wb3cocG9zMi56IC0gcG9zMS56LCAyKVxuICAgICk7XG4gICAgXG4gICAgLy8g6K6h566X6L+e5o6l5ZCR6YePXG4gICAgY29uc3QgZGlyZWN0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoXG4gICAgICBwb3MyLnggLSBwb3MxLngsXG4gICAgICBwb3MyLnkgLSBwb3MxLnksXG4gICAgICBwb3MyLnogLSBwb3MxLnpcbiAgICApLm5vcm1hbGl6ZSgpO1xuICAgIFxuICAgIC8vIOWIpOaWreaYr+WQpumcgOimgei/nuaOpe+8iOWchuafseS9k+S5i+mXtOaciemXtOmame+8iVxuICAgIGNvbnN0IGN5bGluZGVyTGVuZ3RoMSA9IHRoaXMuY3lsaW5kZXIxQ29uZmlnLmhlaWdodDtcbiAgICBjb25zdCBjeWxpbmRlckxlbmd0aDIgPSB0aGlzLmN5bGluZGVyMkNvbmZpZy5oZWlnaHQ7XG4gICAgXG4gICAgLy8g6K6h566X5ZyG5p+x5L2T56uv54K55L2N572u77yI6ICD6JmR5peL6L2s77yJXG4gICAgY29uc3Qgcm90MSA9IG5ldyBUSFJFRS5FdWxlcihcbiAgICAgIHRoaXMuY3lsaW5kZXIxQ29uZmlnLnJvdGF0aW9uLngsXG4gICAgICB0aGlzLmN5bGluZGVyMUNvbmZpZy5yb3RhdGlvbi55LFxuICAgICAgdGhpcy5jeWxpbmRlcjFDb25maWcucm90YXRpb24uelxuICAgICk7XG4gICAgY29uc3Qgcm90MiA9IG5ldyBUSFJFRS5FdWxlcihcbiAgICAgIHRoaXMuY3lsaW5kZXIyQ29uZmlnLnJvdGF0aW9uLngsXG4gICAgICB0aGlzLmN5bGluZGVyMkNvbmZpZy5yb3RhdGlvbi55LFxuICAgICAgdGhpcy5jeWxpbmRlcjJDb25maWcucm90YXRpb24uelxuICAgICk7XG4gICAgXG4gICAgLy8g566A5YyW5aSE55CG77ya5YGH6K6+5ZyG5p+x5L2T6YO95piv5rC05bmz5pS+572u55qE77yI57uVWui9tOaXi+i9rDkw5bqm77yJXG4gICAgLy8g5Zyo6L+Z56eN5oOF5Ya15LiL77yM5ZyG5p+x5L2T55qEXCLplb/luqZcIuWunumZheS4iuaYr+WcqFjmlrnlkJHkuIpcbiAgICBcbiAgICBjb25zdCBnYXAgPSBNYXRoLmFicyhkaXN0YW5jZSAtIGN5bGluZGVyTGVuZ3RoMS8yIC0gY3lsaW5kZXJMZW5ndGgyLzIpO1xuICAgIGNvbnN0IG5lZWRzQ29ubmVjdGlvbiA9IGdhcCA+IDAuMTsgLy8g5aaC5p6c6Ze06ZqZ5aSn5LqOMC4x77yM5YiZ6ZyA6KaB6L+e5o6lXG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIG5lZWRzQ29ubmVjdGlvbixcbiAgICAgIGRpc3RhbmNlLFxuICAgICAgZGlyZWN0aW9uLFxuICAgICAgZ2FwLFxuICAgICAgc3RhcnRQb3M6IG5ldyBUSFJFRS5WZWN0b3IzKHBvczEueCwgcG9zMS55LCBwb3MxLnopLFxuICAgICAgZW5kUG9zOiBuZXcgVEhSRUUuVmVjdG9yMyhwb3MyLngsIHBvczIueSwgcG9zMi56KSxcbiAgICAgIHN0YXJ0UmFkaXVzOiByMSxcbiAgICAgIGVuZFJhZGl1czogcjIsXG4gICAgICBjb25uZWN0aW9uTGVuZ3RoOiB0aGlzLmNvbm5lY3Rpb25Db25maWcuY29ubmVjdGlvbkxlbmd0aFxuICAgIH07XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliJvlu7rov57mjqXnvZHmoLxcbiAgICovXG4gIGNyZWF0ZUNvbm5lY3Rpb25NZXNoKGNvbm5lY3Rpb25JbmZvKSB7XG4gICAgLy8g5L2/55So57uf5LiA57uE5Lu25p2Q6LSo566h55CG5Zmo6I635Y+W5qCH5YeG5p2Q6LSoXG4gICAgY29uc3QgbWF0ZXJpYWwgPSB1bmlmaWVkQ29tcG9uZW50TWF0ZXJpYWwuZ2V0TWF0ZXJpYWwoJ3N0YW5kYXJkJyk7XG4gICAgXG4gICAgdGhpcy5tYXRlcmlhbHMucHVzaChtYXRlcmlhbCk7XG4gICAgXG4gICAgLy8g5Yib5bu65peL6L2s5puy57q/5Yeg5L2V5L2TXG4gICAgY29uc3QgY3VydmVHZW9tZXRyeSA9IG5ldyBSb3RhdGlvbkN1cnZlR2VvbWV0cnkoXG4gICAgICBjb25uZWN0aW9uSW5mby5zdGFydFJhZGl1cyxcbiAgICAgIGNvbm5lY3Rpb25JbmZvLmVuZFJhZGl1cyxcbiAgICAgIGNvbm5lY3Rpb25JbmZvLmNvbm5lY3Rpb25MZW5ndGgsXG4gICAgICB0aGlzLmNvbm5lY3Rpb25Db25maWcuY3VydmVUeXBlLFxuICAgICAgdGhpcy5jb25uZWN0aW9uQ29uZmlnLnNlZ21lbnRzLFxuICAgICAgdGhpcy5jb25uZWN0aW9uQ29uZmlnLnJhZGlhbFNlZ21lbnRzXG4gICAgKTtcbiAgICBcbiAgICAvLyDliJvlu7rnvZHmoLxcbiAgICBjb25zdCBjb25uZWN0aW9uTWVzaCA9IG5ldyBUSFJFRS5NZXNoKGN1cnZlR2VvbWV0cnkuZ2V0R2VvbWV0cnkoKSwgbWF0ZXJpYWwpO1xuICAgIFxuICAgIC8vIOiuvue9ruS9jee9ruWSjOaXi+i9rFxuICAgIHRoaXMucG9zaXRpb25Db25uZWN0aW9uTWVzaChjb25uZWN0aW9uTWVzaCwgY29ubmVjdGlvbkluZm8pO1xuICAgIFxuICAgIC8vIOiuvue9ruWPr+ingeaAp1xuICAgIGNvbm5lY3Rpb25NZXNoLnZpc2libGUgPSB0aGlzLmNvbm5lY3Rpb25Db25maWcudmlzaWJsZTtcbiAgICBcbiAgICAvLyDmt7vliqDliLDnu4TkuK1cbiAgICB0aGlzLmNvbm5lY3Rpb25Hcm91cC5hZGQoY29ubmVjdGlvbk1lc2gpO1xuICAgIHRoaXMuY29ubmVjdGlvbk1lc2hlcy5wdXNoKGNvbm5lY3Rpb25NZXNoKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOWumuS9jei/nuaOpee9keagvFxuICAgKi9cbiAgcG9zaXRpb25Db25uZWN0aW9uTWVzaChtZXNoLCBjb25uZWN0aW9uSW5mbykge1xuICAgIC8vIOiuoeeul+i/nuaOpeS4reW/g+eCuVxuICAgIGNvbnN0IGNlbnRlclggPSAoY29ubmVjdGlvbkluZm8uc3RhcnRQb3MueCArIGNvbm5lY3Rpb25JbmZvLmVuZFBvcy54KSAvIDI7XG4gICAgY29uc3QgY2VudGVyWSA9IChjb25uZWN0aW9uSW5mby5zdGFydFBvcy55ICsgY29ubmVjdGlvbkluZm8uZW5kUG9zLnkpIC8gMjtcbiAgICBjb25zdCBjZW50ZXJaID0gKGNvbm5lY3Rpb25JbmZvLnN0YXJ0UG9zLnogKyBjb25uZWN0aW9uSW5mby5lbmRQb3MueikgLyAyO1xuICAgIFxuICAgIC8vIOW6lOeUqOS9jee9ruWBj+enu1xuICAgIGNvbnN0IHBvc09mZnNldCA9IHRoaXMuY29ubmVjdGlvbkNvbmZpZy5wb3NpdGlvbi5vZmZzZXQ7XG4gICAgbWVzaC5wb3NpdGlvbi5zZXQoXG4gICAgICBjZW50ZXJYICsgcG9zT2Zmc2V0LngsIFxuICAgICAgY2VudGVyWSArIHBvc09mZnNldC55LCBcbiAgICAgIGNlbnRlclogKyBwb3NPZmZzZXQuelxuICAgICk7XG4gICAgXG4gICAgLy8g6K6h566X5peL6L2s5Lul5a+56b2Q6L+e5o6l5pa55ZCRXG4gICAgLy8g6buY6K6k5Yeg5L2V5L2T5piv5rK/Wui9tOaWueWQkeeahO+8jOmcgOimgeaXi+i9rOS7peWvuem9kOWunumZhei/nuaOpeaWueWQkVxuICAgIGNvbnN0IHRhcmdldERpcmVjdGlvbiA9IGNvbm5lY3Rpb25JbmZvLmRpcmVjdGlvbjtcbiAgICBjb25zdCBkZWZhdWx0RGlyZWN0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMSk7XG4gICAgXG4gICAgLy8g6K6h566X5peL6L2s5Zub5YWD5pWwXG4gICAgY29uc3QgcXVhdGVybmlvbiA9IG5ldyBUSFJFRS5RdWF0ZXJuaW9uKCk7XG4gICAgcXVhdGVybmlvbi5zZXRGcm9tVW5pdFZlY3RvcnMoZGVmYXVsdERpcmVjdGlvbiwgdGFyZ2V0RGlyZWN0aW9uKTtcbiAgICBtZXNoLnNldFJvdGF0aW9uRnJvbVF1YXRlcm5pb24ocXVhdGVybmlvbik7XG4gICAgXG4gICAgLy8g55Sx5LqO5ZyG5p+x5L2T5piv5rC05bmz55qE77yI57uVWui9tOaXi+i9rDkw5bqm77yJ77yM6L+e5o6l5Lmf6ZyA6KaB55u45bqU6LCD5pW0XG4gICAgbWVzaC5yb3RhdGVaKE1hdGguUEkgLyAyKTtcbiAgICBcbiAgICAvLyDlupTnlKjml4vovazlgY/np7tcbiAgICBjb25zdCByb3RPZmZzZXQgPSB0aGlzLmNvbm5lY3Rpb25Db25maWcucm90YXRpb24ub2Zmc2V0O1xuICAgIG1lc2gucm90YXRlWChyb3RPZmZzZXQueCk7XG4gICAgbWVzaC5yb3RhdGVZKHJvdE9mZnNldC55KTtcbiAgICBtZXNoLnJvdGF0ZVoocm90T2Zmc2V0LnopO1xuICB9XG4gIFxuICAvKipcbiAgICog6I635Y+W6L+e5o6l57uEXG4gICAqL1xuICBnZXRDb25uZWN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rpb25Hcm91cDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiuvue9ruWPr+ingeaAp1xuICAgKi9cbiAgc2V0VmlzaWJsZSh2aXNpYmxlKSB7XG4gICAgdGhpcy5jb25uZWN0aW9uR3JvdXAudmlzaWJsZSA9IHZpc2libGU7XG4gICAgdGhpcy5jb25uZWN0aW9uTWVzaGVzLmZvckVhY2gobWVzaCA9PiB7XG4gICAgICBtZXNoLnZpc2libGUgPSB2aXNpYmxlO1xuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICog6K6+572u6aKc6ImyXG4gICAqL1xuICBzZXRDb2xvcihjb2xvcikge1xuICAgIHRoaXMubWF0ZXJpYWxzLmZvckVhY2gobWF0ZXJpYWwgPT4ge1xuICAgICAgbWF0ZXJpYWwuY29sb3Iuc2V0SGV4KGNvbG9yKTtcbiAgICB9KTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiuvue9rumAj+aYjuW6plxuICAgKi9cbiAgc2V0T3BhY2l0eShvcGFjaXR5KSB7XG4gICAgdGhpcy5tYXRlcmlhbHMuZm9yRWFjaChtYXRlcmlhbCA9PiB7XG4gICAgICBtYXRlcmlhbC5vcGFjaXR5ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgb3BhY2l0eSkpO1xuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICog6K6+572u5L2N572u5YGP56e7XG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOi9tOWBj+enu1xuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnovbTlgY/np7sgIFxuICAgKiBAcGFyYW0ge251bWJlcn0geiAtIFrovbTlgY/np7tcbiAgICovXG4gIHNldFBvc2l0aW9uT2Zmc2V0KHgsIHksIHopIHtcbiAgICB0aGlzLmNvbm5lY3Rpb25Db25maWcucG9zaXRpb24ub2Zmc2V0ID0geyB4LCB5LCB6IH07XG4gICAgdGhpcy5yZWNyZWF0ZUNvbm5lY3Rpb25zKCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDorr7nva7ml4vovazlgY/np7tcbiAgICogQHBhcmFtIHtudW1iZXJ9IHggLSBY6L205peL6L2s5YGP56e777yI5byn5bqm77yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB5IC0gWei9tOaXi+i9rOWBj+enu++8iOW8p+W6pu+8iVxuICAgKiBAcGFyYW0ge251bWJlcn0geiAtIFrovbTml4vovazlgY/np7vvvIjlvKfluqbvvIlcbiAgICovXG4gIHNldFJvdGF0aW9uT2Zmc2V0KHgsIHksIHopIHtcbiAgICB0aGlzLmNvbm5lY3Rpb25Db25maWcucm90YXRpb24ub2Zmc2V0ID0geyB4LCB5LCB6IH07XG4gICAgdGhpcy5yZWNyZWF0ZUNvbm5lY3Rpb25zKCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDojrflj5blvZPliY3kvY3nva7lgY/np7tcbiAgICovXG4gIGdldFBvc2l0aW9uT2Zmc2V0KCkge1xuICAgIHJldHVybiB7IC4uLnRoaXMuY29ubmVjdGlvbkNvbmZpZy5wb3NpdGlvbi5vZmZzZXQgfTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiOt+WPluW9k+WJjeaXi+i9rOWBj+enu1xuICAgKi9cbiAgZ2V0Um90YXRpb25PZmZzZXQoKSB7XG4gICAgcmV0dXJuIHsgLi4udGhpcy5jb25uZWN0aW9uQ29uZmlnLnJvdGF0aW9uLm9mZnNldCB9O1xuICB9XG4gIFxuICAvKipcbiAgICog55u05o6l6K6+572u6L+e5o6l57uE55qE5L2N572u77yI5LiN5pS55Y+Y6YWN572u77yM5Y+q5piv5Li05pe256e75Yqo77yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOWdkOagh1xuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnlnZDmoIdcbiAgICogQHBhcmFtIHtudW1iZXJ9IHogLSBa5Z2Q5qCHXG4gICAqL1xuICBzZXRQb3NpdGlvbih4LCB5LCB6KSB7XG4gICAgdGhpcy5jb25uZWN0aW9uR3JvdXAucG9zaXRpb24uc2V0KHgsIHksIHopO1xuICB9XG4gIFxuICAvKipcbiAgICog55u05o6l6K6+572u6L+e5o6l57uE55qE5peL6L2s77yI5LiN5pS55Y+Y6YWN572u77yM5Y+q5piv5Li05pe25peL6L2s77yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOi9tOaXi+i9rO+8iOW8p+W6pu+8iVxuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnovbTml4vovazvvIjlvKfluqbvvIlcbiAgICogQHBhcmFtIHtudW1iZXJ9IHogLSBa6L205peL6L2s77yI5byn5bqm77yJXG4gICAqL1xuICBzZXRSb3RhdGlvbih4LCB5LCB6KSB7XG4gICAgdGhpcy5jb25uZWN0aW9uR3JvdXAucm90YXRpb24uc2V0KHgsIHksIHopO1xuICB9XG4gIFxuICAvKipcbiAgICog6I635Y+W6L+e5o6l57uE55qE5b2T5YmN5L2N572uXG4gICAqL1xuICBnZXRQb3NpdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5jb25uZWN0aW9uR3JvdXAucG9zaXRpb24uY2xvbmUoKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiOt+WPlui/nuaOpee7hOeahOW9k+WJjeaXi+i9rFxuICAgKi9cbiAgZ2V0Um90YXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuY29ubmVjdGlvbkdyb3VwLnJvdGF0aW9uLmNsb25lKCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDorr7nva7mm7Lnur/nsbvlnotcbiAgICovXG4gIHNldEN1cnZlVHlwZShjdXJ2ZVR5cGUpIHtcbiAgICB0aGlzLmNvbm5lY3Rpb25Db25maWcuY3VydmVUeXBlID0gY3VydmVUeXBlO1xuICAgIHRoaXMucmVjcmVhdGVDb25uZWN0aW9ucygpO1xuICB9XG4gIFxuICAvKipcbiAgICog6YeN5paw5Yib5bu66L+e5o6lXG4gICAqL1xuICByZWNyZWF0ZUNvbm5lY3Rpb25zKCkge1xuICAgIC8vIOa4heeQhueOsOaciei/nuaOpVxuICAgIHRoaXMuZGlzcG9zZSgpO1xuICAgIFxuICAgIC8vIOmHjee9ruaVsOe7hFxuICAgIHRoaXMuY29ubmVjdGlvbk1lc2hlcyA9IFtdO1xuICAgIHRoaXMubWF0ZXJpYWxzID0gW107XG4gICAgXG4gICAgLy8g6YeN5paw5Yib5bu6XG4gICAgdGhpcy5jcmVhdGVDb25uZWN0aW9ucygpO1xuICB9XG4gIFxuICAvKipcbiAgICog5pu05paw6YWN572uXG4gICAqL1xuICB1cGRhdGVDb25maWcoY3lsaW5kZXIxQ29uZmlnLCBjeWxpbmRlcjJDb25maWcsIGNvbm5lY3Rpb25Db25maWcpIHtcbiAgICB0aGlzLmN5bGluZGVyMUNvbmZpZyA9IGN5bGluZGVyMUNvbmZpZztcbiAgICB0aGlzLmN5bGluZGVyMkNvbmZpZyA9IGN5bGluZGVyMkNvbmZpZztcbiAgICBcbiAgICBpZiAoY29ubmVjdGlvbkNvbmZpZykge1xuICAgICAgdGhpcy5jb25uZWN0aW9uQ29uZmlnID0geyAuLi50aGlzLmNvbm5lY3Rpb25Db25maWcsIC4uLmNvbm5lY3Rpb25Db25maWcgfTtcbiAgICB9XG4gICAgXG4gICAgdGhpcy5yZWNyZWF0ZUNvbm5lY3Rpb25zKCk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDplIDmr4HotYTmupBcbiAgICovXG4gIGRpc3Bvc2UoKSB7XG4gICAgLy8g6ZSA5q+B5p2Q6LSoXG4gICAgdGhpcy5tYXRlcmlhbHMuZm9yRWFjaChtYXRlcmlhbCA9PiB7XG4gICAgICBtYXRlcmlhbC5kaXNwb3NlKCk7XG4gICAgfSk7XG4gICAgXG4gICAgLy8g6ZSA5q+B5Yeg5L2V5L2TXG4gICAgdGhpcy5jb25uZWN0aW9uR3JvdXAudHJhdmVyc2UoKGNoaWxkKSA9PiB7XG4gICAgICBpZiAoY2hpbGQuZ2VvbWV0cnkpIHtcbiAgICAgICAgY2hpbGQuZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgfVxuICAgICAgaWYgKGNoaWxkLm1hdGVyaWFsKSB7XG4gICAgICAgIGNoaWxkLm1hdGVyaWFsLmRpc3Bvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICAvLyDmuIXnkIbnu4RcbiAgICB0aGlzLmNvbm5lY3Rpb25Hcm91cC5jbGVhcigpO1xuICAgIFxuICAgIC8vIOmHjee9ruaVsOe7hFxuICAgIHRoaXMuY29ubmVjdGlvbk1lc2hlcyA9IFtdO1xuICAgIHRoaXMubWF0ZXJpYWxzID0gW107XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7IHVuaWZpZWRDb21wb25lbnRNYXRlcmlhbCB9IGZyb20gJy4uL21hdGVyaWFscy9VbmlmaWVkQ29tcG9uZW50TWF0ZXJpYWwuanMnO1xuXG4vKipcbiAqIOi2heakreWchuW9oueKtua4kOWPmOe7hOS7tlxuICog5a6e546w5LuO5ZyG5b2i5Yiw5pa55b2i55qE5bmz5ruR5Yeg5L2V6L+H5rih77yM5Z+65LqO6LaF5qSt5ZyG5YWs5byP77yafHgvYXxebSArIHx5L2J8Xm0gPSAxXG4gKiBcbiAqIOWPguaVsOivtOaYju+8mlxuICogLSBtID0gMjog5qSt5ZyGL+WchuW9olxuICogLSBtIOKGkiDiiJ46IOi2i+i/keaWueW9oiAgXG4gKiAtIG0gPSA2fjEyOiDlnIbop5LmlrnlvaLmlYjmnpxcbiAqIFxuICog5pSv5oyBRzLkupTmrKHnvJPliqjnoa7kv53mm7Lnjofov57nu63mgKdcbiAqL1xuZXhwb3J0IGNsYXNzIFN1cGVyZWxsaXBzZVRyYW5zaXRpb24ge1xuICAvKipcbiAgICog5p6E6YCg5Ye95pWwXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBzdGFydENvbmZpZyAtIOi1t+Wni+WHoOS9lemFjee9ru+8iOWchuW9ou+8iVxuICAgKiBAcGFyYW0ge09iamVjdH0gZW5kQ29uZmlnIC0g57uT5p2f5Yeg5L2V6YWN572u77yI5pa55b2i77yJXG4gICAqIEBwYXJhbSB7T2JqZWN0fSB0cmFuc2l0aW9uQ29uZmlnIC0g6L+H5rih6YWN572uXG4gICAqL1xuICBjb25zdHJ1Y3RvcihzdGFydENvbmZpZywgZW5kQ29uZmlnLCB0cmFuc2l0aW9uQ29uZmlnKSB7XG4gICAgdGhpcy5zdGFydENvbmZpZyA9IHN0YXJ0Q29uZmlnO1xuICAgIHRoaXMuZW5kQ29uZmlnID0gZW5kQ29uZmlnOyBcbiAgICB0aGlzLnRyYW5zaXRpb25Db25maWcgPSB7XG4gICAgICAvLyDpu5jorqTphY3nva5cbiAgICAgIHNlZ21lbnRzOiA2NCwgICAgICAgICAgICAgIC8vIOmVv+W6puWIhuauteaVsO+8iOW9seWTjei/h+a4oeW5s+a7keW6pu+8iVxuICAgICAgcmFkaWFsU2VnbWVudHM6IDMyLCAgICAgICAgLy8g5b6E5ZCR5YiG5q615pWwXG4gICAgICB0cmFuc2l0aW9uTGVuZ3RoOiAyLjAsICAgICAvLyDov4fmuKHplb/luqZcbiAgICAgIHN0YXJ0RXhwb25lbnQ6IDIuMCwgICAgICAgIC8vIOi1t+Wni+aMh+aVsO+8iOWchuW9ou+8iVxuICAgICAgZW5kRXhwb25lbnQ6IDEwMC4wLCAgICAgICAgLy8g57uT5p2f5oyH5pWw77yI5a6M5YWo55u06KeS55+p5b2i77yJXG4gICAgICBnMlNtb290aGluZzogdHJ1ZSwgICAgICAgICAvLyDlkK/nlKhHMuS6lOasoee8k+WKqFxuICAgICAgY29sb3I6IDB4NjZhYWZmLFxuICAgICAgb3BhY2l0eTogMC43LFxuICAgICAgcG9zaXRpb246IHsgb2Zmc2V0OiB7IHg6IDAsIHk6IDAsIHo6IDAgfSB9LFxuICAgICAgcm90YXRpb246IHsgb2Zmc2V0OiB7IHg6IDAsIHk6IDAsIHo6IDAgfSB9LFxuICAgICAgLy8g6KaG55uW6buY6K6k6YWN572uXG4gICAgICAuLi50cmFuc2l0aW9uQ29uZmlnXG4gICAgfTtcbiAgICBcbiAgICB0aGlzLnRyYW5zaXRpb25Hcm91cCA9IG5ldyBUSFJFRS5Hcm91cCgpO1xuICAgIHRoaXMudHJhbnNpdGlvbkdyb3VwLm5hbWUgPSAnU3VwZXJlbGxpcHNlVHJhbnNpdGlvbic7XG4gICAgXG4gICAgLy8g5p2Q6LSoXG4gICAgdGhpcy5tYXRlcmlhbCA9IG51bGw7XG4gICAgdGhpcy5tZXNoZXMgPSBbXTtcbiAgICBcbiAgICB0aGlzLmNyZWF0ZVRyYW5zaXRpb24oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDliJvlu7rlvaLnirbmuJDlj5jov4fmuKFcbiAgICovXG4gIGNyZWF0ZVRyYW5zaXRpb24oKSB7XG4gICAgLy8g5L2/55So57uf5LiA57uE5Lu25p2Q6LSo77yI56S65rOi5Zmo5YaF6YOo6YeR5bGe5p2Q6LSo77yJXG4gICAgdGhpcy5tYXRlcmlhbCA9IHVuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5nZXRNYXRlcmlhbCgndHJhbnNpdGlvbicpO1xuXG4gICAgLy8g6K6h566X6L+H5rih5Y+C5pWwXG4gICAgY29uc3QgdHJhbnNpdGlvbkluZm8gPSB0aGlzLmNhbGN1bGF0ZVRyYW5zaXRpb25QYXJhbXMoKTtcbiAgICBcbiAgICAvLyDliJvlu7rov4fmuKHlh6DkvZXkvZNcbiAgICBjb25zdCBnZW9tZXRyeSA9IHRoaXMuY3JlYXRlU3VwZXJlbGxpcHNlR2VvbWV0cnkodHJhbnNpdGlvbkluZm8pO1xuICAgIFxuICAgIC8vIOWIm+W7uue9keagvFxuICAgIGNvbnN0IG1lc2ggPSBuZXcgVEhSRUUuTWVzaChnZW9tZXRyeSwgdGhpcy5tYXRlcmlhbCk7XG4gICAgXG4gICAgLy8g5a6a5L2N572R5qC8XG4gICAgdGhpcy5wb3NpdGlvblRyYW5zaXRpb25NZXNoKG1lc2gsIHRyYW5zaXRpb25JbmZvKTtcbiAgICBcbiAgICAvLyDmt7vliqDliLDnu4RcbiAgICB0aGlzLnRyYW5zaXRpb25Hcm91cC5hZGQobWVzaCk7XG4gICAgdGhpcy5tZXNoZXMucHVzaChtZXNoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDorqHnrpfov4fmuKHlj4LmlbBcbiAgICovXG4gIGNhbGN1bGF0ZVRyYW5zaXRpb25QYXJhbXMoKSB7XG4gICAgLy8g6K6h566X6LW35aeL5ZKM57uT5p2f5L2N572uXG4gICAgY29uc3Qgc3RhcnRQb3MgPSBuZXcgVEhSRUUuVmVjdG9yMyhcbiAgICAgIHRoaXMuc3RhcnRDb25maWcucG9zaXRpb24ueCxcbiAgICAgIHRoaXMuc3RhcnRDb25maWcucG9zaXRpb24ueSwgXG4gICAgICB0aGlzLnN0YXJ0Q29uZmlnLnBvc2l0aW9uLnpcbiAgICApO1xuICAgIFxuICAgIGNvbnN0IGVuZFBvcyA9IG5ldyBUSFJFRS5WZWN0b3IzKFxuICAgICAgdGhpcy5lbmRDb25maWcucG9zaXRpb24ueCxcbiAgICAgIHRoaXMuZW5kQ29uZmlnLnBvc2l0aW9uLnksXG4gICAgICB0aGlzLmVuZENvbmZpZy5wb3NpdGlvbi56XG4gICAgKTtcbiAgICBcbiAgICAvLyDorqHnrpfov4fmuKHmlrnlkJHlkozot53nprtcbiAgICBjb25zdCBkaXJlY3Rpb24gPSBuZXcgVEhSRUUuVmVjdG9yMygpLnN1YlZlY3RvcnMoZW5kUG9zLCBzdGFydFBvcykubm9ybWFsaXplKCk7XG4gICAgY29uc3QgZGlzdGFuY2UgPSBzdGFydFBvcy5kaXN0YW5jZVRvKGVuZFBvcyk7XG4gICAgXG4gICAgLy8g6K6h566X6L+H5rih5Lit5b+D54K5XG4gICAgY29uc3QgY2VudGVyID0gbmV3IFRIUkVFLlZlY3RvcjMoKS5hZGRWZWN0b3JzKHN0YXJ0UG9zLCBlbmRQb3MpLm11bHRpcGx5U2NhbGFyKDAuNSk7XG4gICAgXG4gICAgLy8g5L2/55So55So5oi36YWN572u55qE6L+H5rih6ZW/5bqm77yI56e76Zmk6Led56a76ZmQ5Yi277yM6K6p55So5oi36Ieq55Sx5o6n5Yi277yJXG4gICAgY29uc3QgYWRqdXN0ZWRMZW5ndGggPSB0aGlzLnRyYW5zaXRpb25Db25maWcudHJhbnNpdGlvbkxlbmd0aDtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3RhcnRQb3MsXG4gICAgICBlbmRQb3MsXG4gICAgICBjZW50ZXIsXG4gICAgICBkaXJlY3Rpb24sXG4gICAgICBkaXN0YW5jZSxcbiAgICAgIHRyYW5zaXRpb25MZW5ndGg6IGFkanVzdGVkTGVuZ3RoLFxuICAgICAgc3RhcnRSYWRpdXM6IHRoaXMuc3RhcnRDb25maWcucmFkaXVzLFxuICAgICAgZW5kU2l6ZTogdGhpcy5lbmRDb25maWcuc2l6ZSAvLyDnq4vmlrnkvZPlsLrlr7hcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIOWIm+W7uui2heakreWchui/h+a4oeWHoOS9leS9k1xuICAgKiBAcGFyYW0ge09iamVjdH0gdHJhbnNpdGlvbkluZm8gLSDov4fmuKHkv6Hmga9cbiAgICovXG4gIGNyZWF0ZVN1cGVyZWxsaXBzZUdlb21ldHJ5KHRyYW5zaXRpb25JbmZvKSB7XG4gICAgY29uc3Qgc2VnbWVudHMgPSB0aGlzLnRyYW5zaXRpb25Db25maWcuc2VnbWVudHM7XG4gICAgY29uc3QgcmFkaWFsU2VnbWVudHMgPSB0aGlzLnRyYW5zaXRpb25Db25maWcucmFkaWFsU2VnbWVudHM7XG4gICAgY29uc3QgbGVuZ3RoID0gdHJhbnNpdGlvbkluZm8udHJhbnNpdGlvbkxlbmd0aDtcbiAgICBcbiAgICBjb25zdCB2ZXJ0aWNlcyA9IFtdO1xuICAgIGNvbnN0IG5vcm1hbHMgPSBbXTtcbiAgICBjb25zdCB1dnMgPSBbXTtcbiAgICBjb25zdCBpbmRpY2VzID0gW107XG4gICAgXG4gICAgLy8g5rK/6ZW/5bqm5pa55ZCR5Yib5bu65oiq6Z2iXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gc2VnbWVudHM7IGkrKykge1xuICAgICAgY29uc3QgdCA9IGkgLyBzZWdtZW50czsgLy8gMCDliLAgMVxuICAgICAgY29uc3QgeiA9IC1sZW5ndGggLyAyICsgdCAqIGxlbmd0aDsgLy8g5rK/Wui9tOWIhuW4g1xuICAgICAgXG4gICAgICAvLyDlupTnlKhHMuS6lOasoee8k+WKqOi/m+ihjOW5s+a7keaPkuWAvFxuICAgICAgY29uc3Qgc21vb3RoVCA9IHRoaXMudHJhbnNpdGlvbkNvbmZpZy5nMlNtb290aGluZyA/IHRoaXMuZzJTbW9vdGhpbmcodCkgOiB0O1xuICAgICAgXG4gICAgICAvLyDmj5LlgLzorqHnrpflvZPliY3miKrpnaLnmoTotoXmpK3lnIblj4LmlbBcbiAgICAgIGNvbnN0IGN1cnJlbnRFeHBvbmVudCA9IFRIUkVFLk1hdGhVdGlscy5sZXJwKFxuICAgICAgICB0aGlzLnRyYW5zaXRpb25Db25maWcuc3RhcnRFeHBvbmVudCwgXG4gICAgICAgIHRoaXMudHJhbnNpdGlvbkNvbmZpZy5lbmRFeHBvbmVudCwgXG4gICAgICAgIHNtb290aFRcbiAgICAgICk7XG4gICAgICBcbiAgICAgIC8vIOaPkuWAvOiuoeeul+W9k+WJjeaIqumdoueahOWwuuWvuFxuICAgICAgLy8g5rOo5oSP77ya55Sx5LqO6LaF5qSt5ZyG5Lya57uVWui9tOaXi+i9rDkw5bqm77yM6ZyA6KaB5Lqk5o2id2lkdGjlkoxoZWlnaHTnmoTmmKDlsIRcbiAgICAgIC8vIFjovbTvvIjml4vovazlkI7lj5jmiJDlnoLnm7TmlrnlkJHvvInlr7nlupTojaflhYnlsY/nmoRoZWlnaHRcbiAgICAgIC8vIFnovbTvvIjml4vovazlkI7lj5jmiJDmsLTlubPmlrnlkJHvvInlr7nlupTojaflhYnlsY/nmoR3aWR0aFxuICAgICAgY29uc3QgY3VycmVudFJhZGl1c1ggPSBUSFJFRS5NYXRoVXRpbHMubGVycChcbiAgICAgICAgdHJhbnNpdGlvbkluZm8uc3RhcnRSYWRpdXMsXG4gICAgICAgIHRyYW5zaXRpb25JbmZvLmVuZFNpemUuaGVpZ2h0IC8gMiwgIC8vIOmrmOW6puaYoOWwhOWIsFjovbRcbiAgICAgICAgc21vb3RoVFxuICAgICAgKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRSYWRpdXNZID0gVEhSRUUuTWF0aFV0aWxzLmxlcnAoXG4gICAgICAgIHRyYW5zaXRpb25JbmZvLnN0YXJ0UmFkaXVzLFxuICAgICAgICB0cmFuc2l0aW9uSW5mby5lbmRTaXplLndpZHRoIC8gMiwgICAvLyDlrr3luqbmmKDlsITliLBZ6L20XG4gICAgICAgIHNtb290aFRcbiAgICAgICk7XG4gICAgICBcbiAgICAgIC8vIOWIm+W7uuW9k+WJjeaIqumdoueahOi2heakreWchui9ruW7k1xuICAgICAgY29uc3QgY3Jvc3NTZWN0aW9uID0gdGhpcy5nZW5lcmF0ZVN1cGVyZWxsaXBzZUNyb3NzU2VjdGlvbihcbiAgICAgICAgY3VycmVudFJhZGl1c1gsXG4gICAgICAgIGN1cnJlbnRSYWRpdXNZLFxuICAgICAgICBjdXJyZW50RXhwb25lbnQsXG4gICAgICAgIHJhZGlhbFNlZ21lbnRzXG4gICAgICApO1xuICAgICAgXG4gICAgICAvLyDmt7vliqDpobbngrnliLDlh6DkvZXkvZNcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgY3Jvc3NTZWN0aW9uLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGNvbnN0IHBvaW50ID0gY3Jvc3NTZWN0aW9uW2pdO1xuICAgICAgICB2ZXJ0aWNlcy5wdXNoKHBvaW50LngsIHBvaW50LnksIHopO1xuICAgICAgICBcbiAgICAgICAgLy8g6K6h566X5rOV5ZCR6YeP77yI566A5YyW54mI77yM5Y+v6L+b5LiA5q2l5LyY5YyW77yJXG4gICAgICAgIGNvbnN0IG5vcm1hbCA9IG5ldyBUSFJFRS5WZWN0b3IzKHBvaW50LngsIHBvaW50LnksIDApLm5vcm1hbGl6ZSgpO1xuICAgICAgICBub3JtYWxzLnB1c2gobm9ybWFsLngsIG5vcm1hbC55LCBub3JtYWwueik7XG4gICAgICAgIFxuICAgICAgICAvLyBVVuWdkOagh1xuICAgICAgICB1dnMucHVzaChqIC8gcmFkaWFsU2VnbWVudHMsIHQpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyDnlJ/miJDntKLlvJXvvIjov57mjqXnm7jpgrvmiKrpnaLvvIlcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnRzOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcmFkaWFsU2VnbWVudHM7IGorKykge1xuICAgICAgICBjb25zdCBjdXJyZW50ID0gaSAqIHJhZGlhbFNlZ21lbnRzICsgajtcbiAgICAgICAgY29uc3QgbmV4dCA9IGkgKiByYWRpYWxTZWdtZW50cyArICgoaiArIDEpICUgcmFkaWFsU2VnbWVudHMpO1xuICAgICAgICBjb25zdCBjdXJyZW50TmV4dCA9IChpICsgMSkgKiByYWRpYWxTZWdtZW50cyArIGo7XG4gICAgICAgIGNvbnN0IG5leHROZXh0ID0gKGkgKyAxKSAqIHJhZGlhbFNlZ21lbnRzICsgKChqICsgMSkgJSByYWRpYWxTZWdtZW50cyk7XG4gICAgICAgIFxuICAgICAgICAvLyDkuKTkuKrkuInop5LlvaLnu4TmiJDkuIDkuKrlm5vovrnlvaJcbiAgICAgICAgaW5kaWNlcy5wdXNoKGN1cnJlbnQsIG5leHQsIGN1cnJlbnROZXh0KTtcbiAgICAgICAgaW5kaWNlcy5wdXNoKG5leHQsIG5leHROZXh0LCBjdXJyZW50TmV4dCk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIOWIm+W7uuWHoOS9leS9k1xuICAgIGNvbnN0IGdlb21ldHJ5ID0gbmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5KCk7XG4gICAgZ2VvbWV0cnkuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKHZlcnRpY2VzLCAzKSk7XG4gICAgZ2VvbWV0cnkuc2V0QXR0cmlidXRlKCdub3JtYWwnLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZShub3JtYWxzLCAzKSk7XG4gICAgZ2VvbWV0cnkuc2V0QXR0cmlidXRlKCd1dicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKHV2cywgMikpO1xuICAgIGdlb21ldHJ5LnNldEluZGV4KGluZGljZXMpO1xuICAgIFxuICAgIC8vIOiuoeeul+ato+ehrueahOazleWQkemHj1xuICAgIGdlb21ldHJ5LmNvbXB1dGVWZXJ0ZXhOb3JtYWxzKCk7XG4gICAgXG4gICAgcmV0dXJuIGdlb21ldHJ5O1xuICB9XG5cbiAgLyoqXG4gICAqIOeUn+aIkOi2heakreWchuaIqumdoui9ruW7k1xuICAgKiDkvb/nlKjlhazlvI/vvJp8eC9hfF5tICsgfHkvYnxebSA9IDFcbiAgICogQHBhcmFtIHtudW1iZXJ9IHJhZGl1c1ggLSBY6L205Y2K5b6EXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByYWRpdXNZIC0gWei9tOWNiuW+hCAgXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBleHBvbmVudCAtIOi2heakreWchuaMh+aVsFxuICAgKiBAcGFyYW0ge251bWJlcn0gc2VnbWVudHMgLSDliIbmrrXmlbBcbiAgICovXG4gIGdlbmVyYXRlU3VwZXJlbGxpcHNlQ3Jvc3NTZWN0aW9uKHJhZGl1c1gsIHJhZGl1c1ksIGV4cG9uZW50LCBzZWdtZW50cykge1xuICAgIGNvbnN0IHBvaW50cyA9IFtdO1xuICAgIFxuICAgIC8vIOW9k+aMh+aVsOmdnuW4uOWkp+aXtu+8jOebtOaOpeeUn+aIkOefqeW9olxuICAgIGlmIChleHBvbmVudCA+PSA1MCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2VuZXJhdGVSZWN0YW5nbGVDcm9zc1NlY3Rpb24ocmFkaXVzWCwgcmFkaXVzWSwgc2VnbWVudHMpO1xuICAgIH1cbiAgICBcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnRzOyBpKyspIHtcbiAgICAgIGNvbnN0IGFuZ2xlID0gKGkgLyBzZWdtZW50cykgKiBNYXRoLlBJICogMjtcbiAgICAgIFxuICAgICAgLy8g5Y+C5pWw5pa556iL55Sf5oiQ6LaF5qSt5ZyG54K5XG4gICAgICAvLyB4ID0gYSAqIHNpZ24oY29zKM64KSkgKiB8Y29zKM64KXxeKDIvbSlcbiAgICAgIC8vIHkgPSBiICogc2lnbihzaW4ozrgpKSAqIHxzaW4ozrgpfF4oMi9tKVxuICAgICAgY29uc3QgY29zVGhldGEgPSBNYXRoLmNvcyhhbmdsZSk7XG4gICAgICBjb25zdCBzaW5UaGV0YSA9IE1hdGguc2luKGFuZ2xlKTtcbiAgICAgIFxuICAgICAgY29uc3Qgc2lnbkNvcyA9IE1hdGguc2lnbihjb3NUaGV0YSk7XG4gICAgICBjb25zdCBzaWduU2luID0gTWF0aC5zaWduKHNpblRoZXRhKTtcbiAgICAgIFxuICAgICAgLy8g6YG/5YWN5pWw5YC86Zeu6aKY77ya5b2T5oyH5pWw5b6I5aSn5pe277yM6ZmQ5Yi25pyA5bCP5YC8XG4gICAgICBjb25zdCBtaW5WYWx1ZSA9IDFlLTEyO1xuICAgICAgY29uc3QgYWJzQ29zID0gTWF0aC5tYXgoTWF0aC5hYnMoY29zVGhldGEpLCBtaW5WYWx1ZSk7XG4gICAgICBjb25zdCBhYnNTaW4gPSBNYXRoLm1heChNYXRoLmFicyhzaW5UaGV0YSksIG1pblZhbHVlKTtcbiAgICAgIFxuICAgICAgY29uc3QgcG93Q29zID0gTWF0aC5wb3coYWJzQ29zLCAyIC8gZXhwb25lbnQpO1xuICAgICAgY29uc3QgcG93U2luID0gTWF0aC5wb3coYWJzU2luLCAyIC8gZXhwb25lbnQpO1xuICAgICAgXG4gICAgICBjb25zdCB4ID0gcmFkaXVzWCAqIHNpZ25Db3MgKiBwb3dDb3M7XG4gICAgICBjb25zdCB5ID0gcmFkaXVzWSAqIHNpZ25TaW4gKiBwb3dTaW47XG4gICAgICBcbiAgICAgIHBvaW50cy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKHgsIHkpKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHBvaW50cztcbiAgfVxuXG4gIC8qKlxuICAgKiDnlJ/miJDlrozlhajnm7Top5LnmoTnn6nlvaLmiKrpnaLova7lu5NcbiAgICogQHBhcmFtIHtudW1iZXJ9IHJhZGl1c1ggLSBY6L205Y2K5b6EXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByYWRpdXNZIC0gWei9tOWNiuW+hCAgXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzZWdtZW50cyAtIOWIhuauteaVsFxuICAgKi9cbiAgZ2VuZXJhdGVSZWN0YW5nbGVDcm9zc1NlY3Rpb24ocmFkaXVzWCwgcmFkaXVzWSwgc2VnbWVudHMpIHtcbiAgICBjb25zdCBwb2ludHMgPSBbXTtcbiAgICBjb25zdCBzZWdtZW50c1BlclNpZGUgPSBNYXRoLmZsb29yKHNlZ21lbnRzIC8gNCk7XG4gICAgXG4gICAgLy8g5Y+z6L6577yI5LuO5Y+z5LiL5Yiw5Y+z5LiK77yJXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gc2VnbWVudHNQZXJTaWRlOyBpKyspIHtcbiAgICAgIGNvbnN0IHQgPSBpIC8gc2VnbWVudHNQZXJTaWRlO1xuICAgICAgY29uc3QgeCA9IHJhZGl1c1g7XG4gICAgICBjb25zdCB5ID0gcmFkaXVzWSAqICgyICogdCAtIDEpOyAvLyAtcmFkaXVzWSDliLAgcmFkaXVzWVxuICAgICAgcG9pbnRzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjIoeCwgeSkpO1xuICAgIH1cbiAgICBcbiAgICAvLyDkuIrovrnvvIjku47lj7PkuIrliLDlt6bkuIrvvIlcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBzZWdtZW50c1BlclNpZGU7IGkrKykge1xuICAgICAgY29uc3QgdCA9IGkgLyBzZWdtZW50c1BlclNpZGU7XG4gICAgICBjb25zdCB4ID0gcmFkaXVzWCAqICgxIC0gMiAqIHQpOyAvLyByYWRpdXNYIOWIsCAtcmFkaXVzWFxuICAgICAgY29uc3QgeSA9IHJhZGl1c1k7XG4gICAgICBwb2ludHMucHVzaChuZXcgVEhSRUUuVmVjdG9yMih4LCB5KSk7XG4gICAgfVxuICAgIFxuICAgIC8vIOW3pui+ue+8iOS7juW3puS4iuWIsOW3puS4i++8iVxuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHNlZ21lbnRzUGVyU2lkZTsgaSsrKSB7XG4gICAgICBjb25zdCB0ID0gaSAvIHNlZ21lbnRzUGVyU2lkZTtcbiAgICAgIGNvbnN0IHggPSAtcmFkaXVzWDtcbiAgICAgIGNvbnN0IHkgPSByYWRpdXNZICogKDEgLSAyICogdCk7IC8vIHJhZGl1c1kg5YiwIC1yYWRpdXNZXG4gICAgICBwb2ludHMucHVzaChuZXcgVEhSRUUuVmVjdG9yMih4LCB5KSk7XG4gICAgfVxuICAgIFxuICAgIC8vIOS4i+i+ue+8iOS7juW3puS4i+WIsOWPs+S4i++8iVxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgc2VnbWVudHNQZXJTaWRlOyBpKyspIHtcbiAgICAgIGNvbnN0IHQgPSBpIC8gc2VnbWVudHNQZXJTaWRlO1xuICAgICAgY29uc3QgeCA9IHJhZGl1c1ggKiAoMiAqIHQgLSAxKTsgLy8gLXJhZGl1c1gg5YiwIHJhZGl1c1hcbiAgICAgIGNvbnN0IHkgPSAtcmFkaXVzWTtcbiAgICAgIHBvaW50cy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKHgsIHkpKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHBvaW50cztcbiAgfVxuXG4gIC8qKlxuICAgKiBHMuS6lOasoee8k+WKqOWHveaVsFxuICAgKiDkv53or4HkvY3nva7jgIHpgJ/luqblkozliqDpgJ/luqbov57nu63mgKdcbiAgICog5YWs5byP77yaZih0KSA9IDEwdMKzIC0gMTV04oG0ICsgNnTigbVcbiAgICogQHBhcmFtIHtudW1iZXJ9IHQgLSDovpPlhaXlj4LmlbAgWzAsMV1cbiAgICovXG4gIGcyU21vb3RoaW5nKHQpIHtcbiAgICAvLyDpmZDliLbovpPlhaXojIPlm7RcbiAgICB0ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgdCkpO1xuICAgIFxuICAgIC8vIEcy5LqU5qyh57yT5YqoXG4gICAgcmV0dXJuIDEwICogTWF0aC5wb3codCwgMykgLSAxNSAqIE1hdGgucG93KHQsIDQpICsgNiAqIE1hdGgucG93KHQsIDUpO1xuICB9XG5cbiAgLyoqXG4gICAqIOWumuS9jei/h+a4oee9keagvFxuICAgKiBAcGFyYW0ge1RIUkVFLk1lc2h9IG1lc2ggLSDnvZHmoLzlr7nosaFcbiAgICogQHBhcmFtIHtPYmplY3R9IHRyYW5zaXRpb25JbmZvIC0g6L+H5rih5L+h5oGvXG4gICAqL1xuICBwb3NpdGlvblRyYW5zaXRpb25NZXNoKG1lc2gsIHRyYW5zaXRpb25JbmZvKSB7XG4gICAgLy8g6K6+572u5Z+656GA5L2N572u77yI6L+H5rih5Lit5b+D54K577yJXG4gICAgY29uc3QgY2VudGVyID0gdHJhbnNpdGlvbkluZm8uY2VudGVyO1xuICAgIGNvbnN0IHBvc09mZnNldCA9IHRoaXMudHJhbnNpdGlvbkNvbmZpZy5wb3NpdGlvbi5vZmZzZXQ7XG4gICAgXG4gICAgbWVzaC5wb3NpdGlvbi5zZXQoXG4gICAgICBjZW50ZXIueCArIHBvc09mZnNldC54LFxuICAgICAgY2VudGVyLnkgKyBwb3NPZmZzZXQueSwgXG4gICAgICBjZW50ZXIueiArIHBvc09mZnNldC56XG4gICAgKTtcbiAgICBcbiAgICAvLyDorqHnrpfml4vovazku6Xlr7npvZDov4fmuKHmlrnlkJFcbiAgICBjb25zdCB0YXJnZXREaXJlY3Rpb24gPSB0cmFuc2l0aW9uSW5mby5kaXJlY3Rpb247XG4gICAgY29uc3QgZGVmYXVsdERpcmVjdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKDAsIDAsIDEpO1xuICAgIFxuICAgIC8vIOiuoeeul+aXi+i9rOWbm+WFg+aVsFxuICAgIGNvbnN0IHF1YXRlcm5pb24gPSBuZXcgVEhSRUUuUXVhdGVybmlvbigpO1xuICAgIHF1YXRlcm5pb24uc2V0RnJvbVVuaXRWZWN0b3JzKGRlZmF1bHREaXJlY3Rpb24sIHRhcmdldERpcmVjdGlvbik7XG4gICAgbWVzaC5zZXRSb3RhdGlvbkZyb21RdWF0ZXJuaW9uKHF1YXRlcm5pb24pO1xuICAgIFxuICAgIC8vIOeUseS6juWchuafseS9k+aYr+awtOW5s+eahO+8iOe7lVrovbTml4vovaw5MOW6pu+8ie+8jOi/h+a4oeS5n+mcgOimgeebuOW6lOiwg+aVtFxuICAgIG1lc2gucm90YXRlWihNYXRoLlBJIC8gMik7XG4gICAgXG4gICAgLy8g5bqU55So5peL6L2s5YGP56e7XG4gICAgY29uc3Qgcm90T2Zmc2V0ID0gdGhpcy50cmFuc2l0aW9uQ29uZmlnLnJvdGF0aW9uLm9mZnNldDtcbiAgICBtZXNoLnJvdGF0ZVgocm90T2Zmc2V0LngpO1xuICAgIG1lc2gucm90YXRlWShyb3RPZmZzZXQueSk7XG4gICAgbWVzaC5yb3RhdGVaKHJvdE9mZnNldC56KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5bov4fmuKHnu4RcbiAgICovXG4gIGdldFRyYW5zaXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNpdGlvbkdyb3VwO1xuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9ruWPr+ingeaAp1xuICAgKi9cbiAgc2V0VmlzaWJsZSh2aXNpYmxlKSB7XG4gICAgdGhpcy50cmFuc2l0aW9uR3JvdXAudmlzaWJsZSA9IHZpc2libGU7XG4gIH1cblxuICAvKipcbiAgICog6K6+572u6aKc6ImyXG4gICAqL1xuICBzZXRDb2xvcihjb2xvcikge1xuICAgIGlmICh0aGlzLm1hdGVyaWFsKSB7XG4gICAgICB0aGlzLm1hdGVyaWFsLmNvbG9yLnNldEhleChjb2xvcik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9rumAj+aYjuW6plxuICAgKi9cbiAgc2V0T3BhY2l0eShvcGFjaXR5KSB7XG4gICAgaWYgKHRoaXMubWF0ZXJpYWwpIHtcbiAgICAgIHRoaXMubWF0ZXJpYWwub3BhY2l0eSA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIG9wYWNpdHkpKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6+572u5L2N572u5YGP56e7XG4gICAqL1xuICBzZXRQb3NpdGlvbk9mZnNldCh4LCB5LCB6KSB7XG4gICAgdGhpcy50cmFuc2l0aW9uQ29uZmlnLnBvc2l0aW9uLm9mZnNldCA9IHsgeCwgeSwgeiB9O1xuICAgIHRoaXMudXBkYXRlUG9zaXRpb24oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7ml4vovazlgY/np7sgIFxuICAgKi9cbiAgc2V0Um90YXRpb25PZmZzZXQoeCwgeSwgeikge1xuICAgIHRoaXMudHJhbnNpdGlvbkNvbmZpZy5yb3RhdGlvbi5vZmZzZXQgPSB7IHgsIHksIHogfTtcbiAgICB0aGlzLnVwZGF0ZVJvdGF0aW9uKCk7XG4gIH1cblxuICAvKipcbiAgICog55u05o6l6K6+572u5L2N572uXG4gICAqL1xuICBzZXRQb3NpdGlvbih4LCB5LCB6KSB7XG4gICAgdGhpcy50cmFuc2l0aW9uR3JvdXAucG9zaXRpb24uc2V0KHgsIHksIHopO1xuICB9XG5cbiAgLyoqXG4gICAqIOebtOaOpeiuvue9ruaXi+i9rFxuICAgKi9cbiAgc2V0Um90YXRpb24oeCwgeSwgeikge1xuICAgIHRoaXMudHJhbnNpdGlvbkdyb3VwLnJvdGF0aW9uLnNldCh4LCB5LCB6KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5blvZPliY3kvY3nva5cbiAgICovXG4gIGdldFBvc2l0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnRyYW5zaXRpb25Hcm91cC5wb3NpdGlvbi5jbG9uZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluW9k+WJjeaXi+i9rFxuICAgKi9cbiAgZ2V0Um90YXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNpdGlvbkdyb3VwLnJvdGF0aW9uLmNsb25lKCk7XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W5L2N572u5YGP56e7XG4gICAqL1xuICBnZXRQb3NpdGlvbk9mZnNldCgpIHtcbiAgICByZXR1cm4geyAuLi50aGlzLnRyYW5zaXRpb25Db25maWcucG9zaXRpb24ub2Zmc2V0IH07XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W5peL6L2s5YGP56e7XG4gICAqL1xuICBnZXRSb3RhdGlvbk9mZnNldCgpIHtcbiAgICByZXR1cm4geyAuLi50aGlzLnRyYW5zaXRpb25Db25maWcucm90YXRpb24ub2Zmc2V0IH07XG4gIH1cblxuICAvKipcbiAgICog5pu05paw5L2N572u77yI6YeN5paw6K6h566X5Z+65LqO5YGP56e777yJXG4gICAqL1xuICB1cGRhdGVQb3NpdGlvbigpIHtcbiAgICAvLyDph43mlrDorqHnrpfov4fmuKHlj4LmlbBcbiAgICBjb25zdCB0cmFuc2l0aW9uSW5mbyA9IHRoaXMuY2FsY3VsYXRlVHJhbnNpdGlvblBhcmFtcygpO1xuICAgIFxuICAgIC8vIOabtOaWsOaJgOaciee9keagvOS9jee9rlxuICAgIHRoaXMubWVzaGVzLmZvckVhY2gobWVzaCA9PiB7XG4gICAgICB0aGlzLnBvc2l0aW9uVHJhbnNpdGlvbk1lc2gobWVzaCwgdHJhbnNpdGlvbkluZm8pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIOabtOaWsOaXi+i9rO+8iOmHjeaWsOiuoeeul+WfuuS6juWBj+enu++8iVxuICAgKi9cbiAgdXBkYXRlUm90YXRpb24oKSB7XG4gICAgdGhpcy51cGRhdGVQb3NpdGlvbigpOyAvLyDml4vovazlgY/np7vpnIDopoHph43mlrDlrprkvY1cbiAgfVxuXG4gIC8qKlxuICAgKiDmm7TmlrDphY3nva5cbiAgICovXG4gIHVwZGF0ZUNvbmZpZyhzdGFydENvbmZpZywgZW5kQ29uZmlnLCB0cmFuc2l0aW9uQ29uZmlnKSB7XG4gICAgdGhpcy5zdGFydENvbmZpZyA9IHN0YXJ0Q29uZmlnO1xuICAgIHRoaXMuZW5kQ29uZmlnID0gZW5kQ29uZmlnO1xuICAgIHRoaXMudHJhbnNpdGlvbkNvbmZpZyA9IHsgLi4udGhpcy50cmFuc2l0aW9uQ29uZmlnLCAuLi50cmFuc2l0aW9uQ29uZmlnIH07XG4gICAgXG4gICAgLy8g6YeN5paw5Yib5bu66L+H5rihXG4gICAgdGhpcy5kaXNwb3NlKCk7XG4gICAgdGhpcy5jcmVhdGVUcmFuc2l0aW9uKCk7XG4gIH1cblxuICAvKipcbiAgICog5Yqo5oCB5pu05paw6LaF5qSt5ZyG5oyH5pWw77yI55So5LqO5Yqo55S75pWI5p6c77yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydEV4cG9uZW50IC0g6LW35aeL5oyH5pWwXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBlbmRFeHBvbmVudCAtIOe7k+adn+aMh+aVsFxuICAgKi9cbiAgdXBkYXRlRXhwb25lbnRzKHN0YXJ0RXhwb25lbnQsIGVuZEV4cG9uZW50KSB7XG4gICAgdGhpcy50cmFuc2l0aW9uQ29uZmlnLnN0YXJ0RXhwb25lbnQgPSBzdGFydEV4cG9uZW50O1xuICAgIHRoaXMudHJhbnNpdGlvbkNvbmZpZy5lbmRFeHBvbmVudCA9IGVuZEV4cG9uZW50O1xuICAgIFxuICAgIC8vIOmHjeaWsOWIm+W7uuWHoOS9leS9k1xuICAgIHRoaXMuZGlzcG9zZSgpO1xuICAgIHRoaXMuY3JlYXRlVHJhbnNpdGlvbigpO1xuICB9XG5cbiAgLyoqXG4gICAqIOmUgOavgei1hOa6kFxuICAgKi9cbiAgZGlzcG9zZSgpIHtcbiAgICBpZiAodGhpcy5tYXRlcmlhbCkge1xuICAgICAgdGhpcy5tYXRlcmlhbC5kaXNwb3NlKCk7XG4gICAgfVxuICAgIFxuICAgIHRoaXMubWVzaGVzLmZvckVhY2gobWVzaCA9PiB7XG4gICAgICBpZiAobWVzaC5nZW9tZXRyeSkgbWVzaC5nZW9tZXRyeS5kaXNwb3NlKCk7XG4gICAgICB0aGlzLnRyYW5zaXRpb25Hcm91cC5yZW1vdmUobWVzaCk7XG4gICAgfSk7XG4gICAgXG4gICAgdGhpcy5tZXNoZXMgPSBbXTtcbiAgfVxufVxuIiwiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0ICogYXMgVFdFRU4gZnJvbSAnQHR3ZWVuanMvdHdlZW4uanMnO1xuaW1wb3J0IHsgQ09ORklHIH0gZnJvbSAnLi4vY29uZmlnTG9hZGVyLmpzJztcbmltcG9ydCB7IHR3ZWVuR3JvdXAgfSBmcm9tICcuLi9tYWluLmpzJztcbmltcG9ydCB7IHVuaWZpZWRDb21wb25lbnRNYXRlcmlhbCB9IGZyb20gJy4uL21hdGVyaWFscy9VbmlmaWVkQ29tcG9uZW50TWF0ZXJpYWwuanMnO1xuXG4vKipcbiAqIEN5bGluZGVyMueIhueCuOWIhuino+aViOaenOexu1xuICog5bCGY3lsaW5kZXIy5qih5Z6L5YiG6Kej5oiQ56ev5pyo5Z2X54q257uE5Lu277yM5qih5ouf56ev5pyo57uE6KOFL+WIhuino+aViOaenFxuICovXG5leHBvcnQgY2xhc3MgQ3lsaW5kZXIyRXhwbG9kZUVmZmVjdCB7XG4gIC8qKlxuICAgKiDmnoTpgKDlh73mlbBcbiAgICogQHBhcmFtIHtUSFJFRS5NZXNofSBjeWxpbmRlcjJNZXNoIC0gY3lsaW5kZXIy572R5qC85a+56LGhXG4gICAqIEBwYXJhbSB7VEhSRUUuR3JvdXB9IHBhcmVudEdyb3VwIC0g54i257qn57uE5a+56LGhXG4gICAqL1xuICBjb25zdHJ1Y3RvcihjeWxpbmRlcjJNZXNoLCBwYXJlbnRHcm91cCkge1xuICAgIHRoaXMub3JpZ2luYWxNZXNoID0gY3lsaW5kZXIyTWVzaDtcbiAgICB0aGlzLnBhcmVudEdyb3VwID0gcGFyZW50R3JvdXA7XG4gICAgdGhpcy5leHBsb2RlZCA9IGZhbHNlO1xuICAgIHRoaXMuYmxvY2tzID0gW107XG4gICAgdGhpcy50d2VlbnMgPSBbXTtcbiAgICB0aGlzLm9yaWdpbmFsVmlzaWJsZSA9IGN5bGluZGVyMk1lc2gudmlzaWJsZTtcbiAgICBcbiAgICAvLyDliIbop6Plj4LmlbBcbiAgICB0aGlzLmNvbmZpZyA9IHtcbiAgICAgIC8vIOWIhuino+i3neemu+ezu+aVsFxuICAgICAgZXhwbG9kZURpc3RhbmNlOiAxLjUsXG4gICAgICAvLyDliqjnlLvmjIHnu63ml7bpl7RcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiAxMjAwXG4gICAgfTtcbiAgICBcbiAgICB0aGlzLmNyZWF0ZUJsb2NrcygpO1xuICB9XG4gIFxuICAvKipcbiAgICog5Yib5bu656ev5pyo5Z2XXG4gICAqL1xuICBjcmVhdGVCbG9ja3MoKSB7XG4gICAgY29uc3QgY29uZmlnID0gQ09ORklHLnNoZWxsLmN5bGluZGVyMjtcbiAgICBjb25zdCByYWRpdXMgPSBjb25maWcucmFkaXVzO1xuICAgIGNvbnN0IGhlaWdodCA9IGNvbmZpZy5oZWlnaHQ7XG4gICAgXG4gICAgLy8g5L2/55So57uf5LiA57uE5Lu25p2Q6LSo77yI56S65rOi5Zmo5YaF6YOo6YeR5bGe5p2Q6LSo77yJXG4gICAgY29uc3QgYmxvY2tNYXRlcmlhbCA9IHVuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5nZXRNYXRlcmlhbCgnZXhwbG9kZWQnKTtcbiAgICBcbiAgICAvLyDliJvlu7o05Liq5omH5b2i5YiG5Z2X77yI5Zub5YiG5LmL5LiA5ZyG77yJXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcbiAgICAgIGNvbnN0IGJsb2NrID0gdGhpcy5jcmVhdGVRdWFydGVyQmxvY2socmFkaXVzLCBoZWlnaHQsIGJsb2NrTWF0ZXJpYWwsIGkpO1xuICAgICAgXG4gICAgICAvLyDorr7nva7liJ3lp4vkvY3nva5cbiAgICAgIGJsb2NrLnBvc2l0aW9uLmNvcHkodGhpcy5vcmlnaW5hbE1lc2gucG9zaXRpb24pO1xuICAgICAgXG4gICAgICAvLyDkv53lrZjmiYflvaLnmoTln7rnoYDml4vovaxcbiAgICAgIGNvbnN0IGJhc2VSb3RhdGlvbiA9IGJsb2NrLnJvdGF0aW9uLmNsb25lKCk7XG4gICAgICBcbiAgICAgIC8vIOW6lOeUqGN5bGluZGVyMueahOaXi+i9rO+8iOe7hOWQiOaXi+i9rO+8iVxuICAgICAgYmxvY2sucm90YXRpb24uY29weSh0aGlzLm9yaWdpbmFsTWVzaC5yb3RhdGlvbik7XG4gICAgICAvLyDlnKjljp/lp4vml4vovazln7rnoYDkuIrmt7vliqDmiYflvaLnmoTln7rnoYDml4vovaxcbiAgICAgIGJsb2NrLnJvdGF0aW9uLnogKz0gYmFzZVJvdGF0aW9uLno7XG4gICAgICBcbiAgICAgIC8vIOWIneWni+aXtumakOiXj+enr+acqOWdl1xuICAgICAgYmxvY2sudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgXG4gICAgICAvLyDorqHnrpfmiYflvaLnmoTkuK3lv4Pop5LluqbvvIjnlKjkuo7liIbop6PmlrnlkJHvvIlcbiAgICAgIGNvbnN0IGNlbnRlckFuZ2xlID0gaSAqIE1hdGguUEkgLyAyICsgTWF0aC5QSSAvIDQ7IC8vIOavj+S4quaJh+W9oueahOS4reW/g+inkuW6plxuICAgICAgXG4gICAgICB0aGlzLmJsb2Nrcy5wdXNoKHtcbiAgICAgICAgbWVzaDogYmxvY2ssXG4gICAgICAgIG9yaWdpbmFsUG9zaXRpb246IGJsb2NrLnBvc2l0aW9uLmNsb25lKCksXG4gICAgICAgIG9yaWdpbmFsUm90YXRpb246IGJsb2NrLnJvdGF0aW9uLmNsb25lKCksXG4gICAgICAgIHNlZ21lbnRJbmRleDogaSxcbiAgICAgICAgY2VudGVyQW5nbGU6IGNlbnRlckFuZ2xlXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgdGhpcy5wYXJlbnRHcm91cC5hZGQoYmxvY2spO1xuICAgIH1cbiAgfVxuICBcbiAgLyoqXG4gICAqIOWIm+W7uuWbm+WIhuS5i+S4gOWchuaJh+W9ouenr+acqOWdl1xuICAgKi9cbiAgY3JlYXRlUXVhcnRlckJsb2NrKHJhZGl1cywgaGVpZ2h0LCBtYXRlcmlhbCwgc2VnbWVudEluZGV4KSB7XG4gICAgLy8g5Yib5bu65omH5b2i5Yeg5L2V5L2T77yI5Zub5YiG5LmL5LiA5ZyG77yJXG4gICAgY29uc3QgZ2VvbWV0cnkgPSBuZXcgVEhSRUUuQ3lsaW5kZXJHZW9tZXRyeShcbiAgICAgIHJhZGl1cywgXG4gICAgICByYWRpdXMsIFxuICAgICAgaGVpZ2h0LCBcbiAgICAgIDgsIC8vIOavj+S4quaJh+W9oueahOW+hOWQkeauteaVsFxuICAgICAgMSwgLy8g6auY5bqm5YiG5q615pWwXG4gICAgICBmYWxzZSwgLy8g5LiN5bCB6ZetXG4gICAgICBzZWdtZW50SW5kZXggKiBNYXRoLlBJIC8gMiwgLy8g6LW35aeL6KeS5bqmXG4gICAgICBNYXRoLlBJIC8gMiAvLyDmiYflvaLop5LluqbvvIg5MOW6pu+8iVxuICAgICk7XG4gICAgXG4gICAgLy8g5Yib5bu6572R5qC8XG4gICAgY29uc3QgbWVzaCA9IG5ldyBUSFJFRS5NZXNoKGdlb21ldHJ5LCBtYXRlcmlhbCk7XG4gICAgXG4gICAgLy8g6LCD5pW05pa55ZCR5Lul5Yy56YWNY3lsaW5kZXIy55qE5pa55ZCR77yI5rK/WOi9tO+8iVxuICAgIG1lc2gucm90YXRpb24ueiA9IE1hdGguUEkgLyAyO1xuICAgIFxuICAgIHJldHVybiBtZXNoO1xuICB9XG4gIFxuICAvKipcbiAgICog6K6h566X54iG54K45ZCO55qE5L2N572uXG4gICAqL1xuICBjYWxjdWxhdGVFeHBsb2RlZFBvc2l0aW9uKGJsb2NrKSB7XG4gICAgY29uc3QgeyBjZW50ZXJBbmdsZSwgb3JpZ2luYWxQb3NpdGlvbiB9ID0gYmxvY2s7XG4gICAgXG4gICAgLy8g6K6h566X5omH5b2i5Zyo5b6E5ZCR5LiK55qE5YiG6Kej5pa55ZCRXG4gICAgLy8g55Sx5LqOY3lsaW5kZXIy5piv5rK/WOi9tOeahO+8jOaIkeS7rOmcgOimgeWcqFla5bmz6Z2i5LiK5YiG6KejXG4gICAgY29uc3QgZXhwbG9kZURpc3RhbmNlID0gdGhpcy5jb25maWcuZXhwbG9kZURpc3RhbmNlO1xuICAgIFxuICAgIC8vIOiuoeeul+WIhuino+eahOaWueWQkeWQkemHj++8iOWcqFla5bmz6Z2i5LiK77yJXG4gICAgY29uc3QgZGlyZWN0aW9uWSA9IE1hdGguc2luKGNlbnRlckFuZ2xlKSAqIGV4cGxvZGVEaXN0YW5jZTtcbiAgICBjb25zdCBkaXJlY3Rpb25aID0gTWF0aC5jb3MoY2VudGVyQW5nbGUpICogZXhwbG9kZURpc3RhbmNlO1xuICAgIFxuICAgIC8vIOiuoeeul+aWsOS9jee9rlxuICAgIGNvbnN0IGV4cGxvZGVkUG9zaXRpb24gPSBvcmlnaW5hbFBvc2l0aW9uLmNsb25lKCk7XG4gICAgZXhwbG9kZWRQb3NpdGlvbi55ICs9IGRpcmVjdGlvblk7XG4gICAgZXhwbG9kZWRQb3NpdGlvbi56ICs9IGRpcmVjdGlvblo7XG4gICAgXG4gICAgcmV0dXJuIGV4cGxvZGVkUG9zaXRpb247XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliIfmjaLniIbngrjmlYjmnpxcbiAgICovXG4gIHRvZ2dsZShleHBsb2RlID0gIXRoaXMuZXhwbG9kZWQpIHtcbiAgICB0aGlzLmV4cGxvZGVkID0gZXhwbG9kZTtcbiAgICBcbiAgICAvLyDlgZzmraLmiYDmnInmraPlnKjov5vooYznmoTliqjnlLtcbiAgICB0aGlzLnR3ZWVucy5mb3JFYWNoKHR3ZWVuID0+IHR3ZWVuLnN0b3AoKSk7XG4gICAgdGhpcy50d2VlbnMgPSBbXTtcbiAgICBcbiAgICBpZiAodGhpcy5leHBsb2RlZCkge1xuICAgICAgLy8g54iG54K477ya6ZqQ6JeP5Y6f5aeL572R5qC877yM5pi+56S656ev5pyo5Z2XXG4gICAgICB0aGlzLm9yaWdpbmFsTWVzaC52aXNpYmxlID0gZmFsc2U7XG4gICAgICB0aGlzLmV4cGxvZGVCbG9ja3MoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8g5ZCI5bm277ya6YeN5paw57uE6KOF56ev5pyo5Z2X77yM5pi+56S65Y6f5aeL572R5qC8XG4gICAgICB0aGlzLmFzc2VtYmxlQmxvY2tzKCk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0aGlzLmV4cGxvZGVkO1xuICB9XG4gIFxuICAvKipcbiAgICog5YiG6Kej56ev5pyo5Z2XXG4gICAqL1xuICBleHBsb2RlQmxvY2tzKCkge1xuICAgIHRoaXMuYmxvY2tzLmZvckVhY2goKGJsb2NrLCBpbmRleCkgPT4ge1xuICAgICAgLy8g5pi+56S656ev5pyo5Z2XXG4gICAgICBibG9jay5tZXNoLnZpc2libGUgPSB0cnVlO1xuICAgICAgXG4gICAgICAvLyDorqHnrpfnm67moIfkvY3nva5cbiAgICAgIGNvbnN0IHRhcmdldFBvc2l0aW9uID0gdGhpcy5jYWxjdWxhdGVFeHBsb2RlZFBvc2l0aW9uKGJsb2NrKTtcbiAgICAgIFxuICAgICAgLy8g5Yib5bu65L2N572u5Yqo55S777yI5bim5bu26L+f5Lul5Lqn55Sf6L+e6ZSB5pWI5p6c77yJXG4gICAgICBjb25zdCBkZWxheSA9IGluZGV4ICogMTAwOyAvLyAxMDBtc+eahOW7tui/n+mXtOmalO+8jOiuqeWIhuino+aViOaenOabtOaYjuaYvlxuICAgICAgXG4gICAgICBjb25zdCBwb3NpdGlvblR3ZWVuID0gbmV3IFRXRUVOLlR3ZWVuKGJsb2NrLm1lc2gucG9zaXRpb24sIHR3ZWVuR3JvdXApXG4gICAgICAgIC50byh7XG4gICAgICAgICAgeDogdGFyZ2V0UG9zaXRpb24ueCxcbiAgICAgICAgICB5OiB0YXJnZXRQb3NpdGlvbi55LFxuICAgICAgICAgIHo6IHRhcmdldFBvc2l0aW9uLnpcbiAgICAgICAgfSwgdGhpcy5jb25maWcuYW5pbWF0aW9uRHVyYXRpb24pXG4gICAgICAgIC5kZWxheShkZWxheSlcbiAgICAgICAgLmVhc2luZyhUV0VFTi5FYXNpbmcuQmFjay5PdXQpXG4gICAgICAgIC5zdGFydCgpO1xuICAgICAgXG4gICAgICB0aGlzLnR3ZWVucy5wdXNoKHBvc2l0aW9uVHdlZW4pO1xuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICog57uE6KOF56ev5pyo5Z2XXG4gICAqL1xuICBhc3NlbWJsZUJsb2NrcygpIHtcbiAgICB0aGlzLmJsb2Nrcy5mb3JFYWNoKChibG9jaywgaW5kZXgpID0+IHtcbiAgICAgIC8vIOWIm+W7uuWbnuW9kuWKqOeUu++8iOWPjeWQkeW7tui/n+S7peS6p+eUn+mHjeaWsOe7hOijheaViOaenO+8iVxuICAgICAgY29uc3QgZGVsYXkgPSAodGhpcy5ibG9ja3MubGVuZ3RoIC0gaW5kZXggLSAxKSAqIDgwOyAvLyDlj43lkJHlu7bov59cbiAgICAgIFxuICAgICAgY29uc3QgcG9zaXRpb25Ud2VlbiA9IG5ldyBUV0VFTi5Ud2VlbihibG9jay5tZXNoLnBvc2l0aW9uLCB0d2Vlbkdyb3VwKVxuICAgICAgICAudG8oe1xuICAgICAgICAgIHg6IGJsb2NrLm9yaWdpbmFsUG9zaXRpb24ueCxcbiAgICAgICAgICB5OiBibG9jay5vcmlnaW5hbFBvc2l0aW9uLnksXG4gICAgICAgICAgejogYmxvY2sub3JpZ2luYWxQb3NpdGlvbi56XG4gICAgICAgIH0sIHRoaXMuY29uZmlnLmFuaW1hdGlvbkR1cmF0aW9uICogMC44KVxuICAgICAgICAuZGVsYXkoZGVsYXkpXG4gICAgICAgIC5lYXNpbmcoVFdFRU4uRWFzaW5nLkJhY2suSW4pXG4gICAgICAgIC5vbkNvbXBsZXRlKCgpID0+IHtcbiAgICAgICAgICAvLyDmnIDlkI7kuIDkuKrlnZfnu4Too4XlrozmiJDlkI7vvIzpmpDol4/miYDmnInnp6/mnKjlnZflubbmmL7npLrljp/lp4vnvZHmoLxcbiAgICAgICAgICBpZiAoaW5kZXggPT09IHRoaXMuYmxvY2tzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIHRoaXMuYmxvY2tzLmZvckVhY2goYiA9PiBiLm1lc2gudmlzaWJsZSA9IGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMub3JpZ2luYWxNZXNoLnZpc2libGUgPSB0aGlzLm9yaWdpbmFsVmlzaWJsZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5zdGFydCgpO1xuICAgICAgXG4gICAgICB0aGlzLnR3ZWVucy5wdXNoKHBvc2l0aW9uVHdlZW4pO1xuICAgIH0pO1xuICB9XG4gIFxuICAvKipcbiAgICog5riF55CG6LWE5rqQXG4gICAqL1xuICBkaXNwb3NlKCkge1xuICAgIC8vIOWBnOatouaJgOacieWKqOeUu1xuICAgIHRoaXMudHdlZW5zLmZvckVhY2godHdlZW4gPT4gdHdlZW4uc3RvcCgpKTtcbiAgICB0aGlzLnR3ZWVucyA9IFtdO1xuICAgIFxuICAgIC8vIOenu+mZpOenr+acqOWdl1xuICAgIHRoaXMuYmxvY2tzLmZvckVhY2goYmxvY2sgPT4ge1xuICAgICAgdGhpcy5wYXJlbnRHcm91cC5yZW1vdmUoYmxvY2subWVzaCk7XG4gICAgICBibG9jay5tZXNoLmdlb21ldHJ5LmRpc3Bvc2UoKTtcbiAgICAgIGJsb2NrLm1lc2gubWF0ZXJpYWwuZGlzcG9zZSgpO1xuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuYmxvY2tzID0gW107XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDojrflj5bniIbngrjnirbmgIFcbiAgICovXG4gIGlzRXhwbG9kZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwbG9kZWQ7XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCAqIGFzIFRXRUVOIGZyb20gJ0B0d2VlbmpzL3R3ZWVuLmpzJztcbmltcG9ydCB7IENPTkZJRyB9IGZyb20gJy4uL2NvbmZpZ0xvYWRlci5qcyc7XG5pbXBvcnQgeyB0d2Vlbkdyb3VwIH0gZnJvbSAnLi4vbWFpbi5qcyc7XG5pbXBvcnQgeyBSb3RhdGlvbkN1cnZlR2VvbWV0cnkgfSBmcm9tICcuLi9nZW9tZXRyeS9Sb3RhdGlvbkN1cnZlR2VvbWV0cnkuanMnO1xuaW1wb3J0IHsgdW5pZmllZENvbXBvbmVudE1hdGVyaWFsIH0gZnJvbSAnLi4vbWF0ZXJpYWxzL1VuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5qcyc7XG5cbi8qKlxuICog5peL6L2s5puy57q/6L+e5o6l54iG54K45YiG6Kej5pWI5p6c57G7XG4gKiDlsIbml4vovazmm7Lnur/ov57mjqXliIbop6PmiJDmiYflvaLmrrXvvIzmqKHmi5/np6/mnKjnu4Too4Uv5YiG6Kej5pWI5p6cXG4gKi9cbmV4cG9ydCBjbGFzcyBSb3RhdGlvbkN1cnZlRXhwbG9kZUVmZmVjdCB7XG4gIC8qKlxuICAgKiDmnoTpgKDlh73mlbBcbiAgICogQHBhcmFtIHtUSFJFRS5NZXNofSBjb25uZWN0aW9uTWVzaCAtIOaXi+i9rOabsue6v+i/nuaOpee9keagvOWvueixoVxuICAgKiBAcGFyYW0ge1RIUkVFLkdyb3VwfSBwYXJlbnRHcm91cCAtIOeItue6p+e7hOWvueixoVxuICAgKi9cbiAgY29uc3RydWN0b3IoY29ubmVjdGlvbk1lc2gsIHBhcmVudEdyb3VwKSB7XG4gICAgdGhpcy5vcmlnaW5hbE1lc2ggPSBjb25uZWN0aW9uTWVzaDtcbiAgICB0aGlzLnBhcmVudEdyb3VwID0gcGFyZW50R3JvdXA7XG4gICAgdGhpcy5leHBsb2RlZCA9IGZhbHNlO1xuICAgIHRoaXMuc2VjdG9ycyA9IFtdO1xuICAgIHRoaXMudHdlZW5zID0gW107XG4gICAgdGhpcy5vcmlnaW5hbFZpc2libGUgPSBjb25uZWN0aW9uTWVzaC52aXNpYmxlO1xuICAgIFxuICAgIC8vIOWIhuino+WPguaVsFxuICAgIHRoaXMuY29uZmlnID0ge1xuICAgICAgLy8g5YiG6Kej6Led56a757O75pWwIC0g5LiOQ3lsaW5kZXIyRXhwbG9kZUVmZmVjdOS/neaMgeS4gOiHtFxuICAgICAgZXhwbG9kZURpc3RhbmNlOiAxLjUsXG4gICAgICAvLyDliqjnlLvmjIHnu63ml7bpl7QgLSDkuI5DeWxpbmRlcjJFeHBsb2RlRWZmZWN05L+d5oyB5LiA6Ie0XG4gICAgICBhbmltYXRpb25EdXJhdGlvbjogMTIwMCxcbiAgICAgIC8vIOaJh+W9ouauteaVsOmHj1xuICAgICAgc2VjdG9yQ291bnQ6IDRcbiAgICB9O1xuICAgIFxuICAgIHRoaXMuY3JlYXRlU2VjdG9ycygpO1xuICB9XG4gIFxuICAvKipcbiAgICog5Yib5bu65omH5b2i5q61XG4gICAqL1xuICBjcmVhdGVTZWN0b3JzKCkge1xuICAgIGNvbnN0IGNvbmZpZyA9IENPTkZJRy5zaGVsbC5yb3RhdGlvbkN1cnZlQ29ubmVjdGlvbjtcbiAgICBpZiAoIWNvbmZpZykgcmV0dXJuO1xuICAgIFxuICAgIC8vIOiOt+WPlui/nuaOpeeahOWfuuacrOWPguaVsFxuICAgIGNvbnN0IHNlZ21lbnRzID0gY29uZmlnLnNlZ21lbnRzIHx8IDUwO1xuICAgIGNvbnN0IHJhZGlhbFNlZ21lbnRzID0gY29uZmlnLnJhZGlhbFNlZ21lbnRzIHx8IDMyO1xuICAgIGNvbnN0IGNvbm5lY3Rpb25MZW5ndGggPSBjb25maWcuY29ubmVjdGlvbkxlbmd0aCB8fCA0Ljg7XG4gICAgXG4gICAgLy8g5L2/55So57uf5LiA57uE5Lu25p2Q6LSo77yI56S65rOi5Zmo5YaF6YOo6YeR5bGe5p2Q6LSo77yJXG4gICAgY29uc3QgcmluZ01hdGVyaWFsID0gdW5pZmllZENvbXBvbmVudE1hdGVyaWFsLmdldE1hdGVyaWFsKCdleHBsb2RlZCcpO1xuICAgIFxuICAgIC8vIOWIm+W7ujTkuKrmiYflvaLmrrXvvIjmr4/kuKo5MOW6pu+8iVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jb25maWcuc2VjdG9yQ291bnQ7IGkrKykge1xuICAgICAgY29uc3Qgc2VjdG9yID0gdGhpcy5jcmVhdGVTZWN0b3JTZWdtZW50KGNvbm5lY3Rpb25MZW5ndGgsIHJhZGlhbFNlZ21lbnRzLCByaW5nTWF0ZXJpYWwsIGkpO1xuICAgICAgXG4gICAgICAvLyDorr7nva7liJ3lp4vkvY3nva5cbiAgICAgIHNlY3Rvci5wb3NpdGlvbi5jb3B5KHRoaXMub3JpZ2luYWxNZXNoLnBvc2l0aW9uKTtcbiAgICAgIFxuICAgICAgLy8g5L+d5a2Y5omH5b2i55qE5Z+656GA5peL6L2sXG4gICAgICBjb25zdCBiYXNlUm90YXRpb24gPSBzZWN0b3Iucm90YXRpb24uY2xvbmUoKTtcbiAgICAgIFxuICAgICAgLy8g5bqU55So5Y6f5aeL6L+e5o6l55qE5peL6L2s77yI5aSN5ZCI5peL6L2s77yJXG4gICAgICBzZWN0b3Iucm90YXRpb24uY29weSh0aGlzLm9yaWdpbmFsTWVzaC5yb3RhdGlvbik7XG4gICAgICAvLyDlnKjljp/lp4vml4vovazln7rnoYDkuIrmt7vliqDmiYflvaLnmoTln7rnoYDml4vovaxcbiAgICAgIHNlY3Rvci5yb3RhdGlvbi56ICs9IGJhc2VSb3RhdGlvbi56O1xuICAgICAgXG4gICAgICAvLyDliJ3lp4vml7bpmpDol4/miYflvaLmrrVcbiAgICAgIHNlY3Rvci52aXNpYmxlID0gZmFsc2U7XG4gICAgICBcbiAgICAgIC8vIOiuoeeul+aJh+W9ouauteeahOS4reW/g+inkuW6pu+8iOeUqOS6juWIhuino+aWueWQke+8iVxuICAgICAgY29uc3QgY2VudGVyQW5nbGUgPSBpICogTWF0aC5QSSAvIDIgKyBNYXRoLlBJIC8gNDsgLy8g5q+P5Liq5omH5b2i55qE5Lit5b+D6KeS5bqm77yINDXCsCwgMTM1wrAsIDIyNcKwLCAzMTXCsO+8iVxuICAgICAgXG4gICAgICB0aGlzLnNlY3RvcnMucHVzaCh7XG4gICAgICAgIG1lc2g6IHNlY3RvcixcbiAgICAgICAgb3JpZ2luYWxQb3NpdGlvbjogc2VjdG9yLnBvc2l0aW9uLmNsb25lKCksXG4gICAgICAgIG9yaWdpbmFsUm90YXRpb246IHNlY3Rvci5yb3RhdGlvbi5jbG9uZSgpLFxuICAgICAgICBzZWdtZW50SW5kZXg6IGksXG4gICAgICAgIGNlbnRlckFuZ2xlOiBjZW50ZXJBbmdsZVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHRoaXMucGFyZW50R3JvdXAuYWRkKHNlY3Rvcik7XG4gICAgfVxuICB9XG4gIFxuICAvKipcbiAgICog5Yib5bu65Y2V5Liq5omH5b2i5q61XG4gICAqL1xuICBjcmVhdGVTZWN0b3JTZWdtZW50KGxlbmd0aCwgcmFkaWFsU2VnbWVudHMsIG1hdGVyaWFsLCBzZWdtZW50SW5kZXgpIHtcbiAgICAvLyDojrflj5bljp/lp4vov57mjqXnmoTlj4LmlbBcbiAgICBjb25zdCBjb25uZWN0aW9uUGFyYW1zID0gdGhpcy5nZXRDb25uZWN0aW9uUGFyYW1ldGVycygpO1xuICAgIFxuICAgIC8vIOWIm+W7uuaXi+i9rOabsue6v+WHoOS9leS9k+eUn+aIkOWZqFxuICAgIGNvbnN0IGN1cnZlR2VvbWV0cnkgPSBuZXcgUm90YXRpb25DdXJ2ZUdlb21ldHJ5KFxuICAgICAgY29ubmVjdGlvblBhcmFtcy5zdGFydFJhZGl1cyxcbiAgICAgIGNvbm5lY3Rpb25QYXJhbXMuZW5kUmFkaXVzLFxuICAgICAgY29ubmVjdGlvblBhcmFtcy5jb25uZWN0aW9uTGVuZ3RoLFxuICAgICAgY29ubmVjdGlvblBhcmFtcy5jdXJ2ZVR5cGUsXG4gICAgICBjb25uZWN0aW9uUGFyYW1zLnNlZ21lbnRzLFxuICAgICAgY29ubmVjdGlvblBhcmFtcy5yYWRpYWxTZWdtZW50c1xuICAgICk7XG4gICAgXG4gICAgLy8g5Yib5bu65omH5b2i54mH5q615Yeg5L2V5L2TXG4gICAgY29uc3Qgc2VjdG9yR2VvbWV0cnkgPSBjdXJ2ZUdlb21ldHJ5LmNyZWF0ZVNlY3Rvckdlb21ldHJ5KHNlZ21lbnRJbmRleCwgdGhpcy5jb25maWcuc2VjdG9yQ291bnQpO1xuICAgIFxuICAgIC8vIOWIm+W7uue9keagvFxuICAgIGNvbnN0IG1lc2ggPSBuZXcgVEhSRUUuTWVzaChzZWN0b3JHZW9tZXRyeSwgbWF0ZXJpYWwpO1xuICAgIFxuICAgIC8vIOiwg+aVtOaWueWQkeS7peWMuemFjeaXi+i9rOabsue6v+i/nuaOpeeahOaWueWQke+8iOayv1jovbTvvIlcbiAgICBtZXNoLnJvdGF0aW9uLnogPSBNYXRoLlBJIC8gMjtcbiAgICBcbiAgICByZXR1cm4gbWVzaDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiOt+WPluWOn+Wni+i/nuaOpeeahOWPguaVsFxuICAgKi9cbiAgZ2V0Q29ubmVjdGlvblBhcmFtZXRlcnMoKSB7XG4gICAgLy8g5LuO6YWN572u5Lit6I635Y+W6L+e5o6l5Y+C5pWwXG4gICAgY29uc3QgY29uZmlnID0gQ09ORklHLnNoZWxsLnJvdGF0aW9uQ3VydmVDb25uZWN0aW9uO1xuICAgIGNvbnN0IGN5bGluZGVyMUNvbmZpZyA9IENPTkZJRy5zaGVsbC5jeWxpbmRlcjE7XG4gICAgY29uc3QgY3lsaW5kZXIyQ29uZmlnID0gQ09ORklHLnNoZWxsLmN5bGluZGVyMjtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3RhcnRSYWRpdXM6IGN5bGluZGVyMUNvbmZpZy5yYWRpdXMsXG4gICAgICBlbmRSYWRpdXM6IGN5bGluZGVyMkNvbmZpZy5yYWRpdXMsXG4gICAgICBjb25uZWN0aW9uTGVuZ3RoOiBjb25maWcuY29ubmVjdGlvbkxlbmd0aCxcbiAgICAgIGN1cnZlVHlwZTogY29uZmlnLmN1cnZlVHlwZSB8fCAnRzInLFxuICAgICAgc2VnbWVudHM6IGNvbmZpZy5zZWdtZW50cyB8fCA1MCxcbiAgICAgIHJhZGlhbFNlZ21lbnRzOiBjb25maWcucmFkaWFsU2VnbWVudHMgfHwgMzJcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIOS8sOeul+i/nuaOpeeahOWNiuW+hFxuICAgKi9cbiAgZXN0aW1hdGVDb25uZWN0aW9uUmFkaXVzKCkge1xuICAgIC8vIOWfuuS6jumFjee9ruS8sOeul+WNiuW+hO+8jOaIluiAheS9v+eUqOm7mOiupOWAvFxuICAgIGNvbnN0IGN5bGluZGVyMVJhZGl1cyA9IENPTkZJRy5zaGVsbC5jeWxpbmRlcjE/LnJhZGl1cyB8fCAxLjU7XG4gICAgY29uc3QgY3lsaW5kZXIyUmFkaXVzID0gQ09ORklHLnNoZWxsLmN5bGluZGVyMj8ucmFkaXVzIHx8IDEuMDtcbiAgICBcbiAgICAvLyDkvb/nlKjkuKTkuKrlnIbmn7HkvZPljYrlvoTnmoTlubPlnYflgLzkvZzkuLrov57mjqXljYrlvoRcbiAgICByZXR1cm4gKGN5bGluZGVyMVJhZGl1cyArIGN5bGluZGVyMlJhZGl1cykgLyAyO1xuICB9XG4gIFxuICAvKipcbiAgICog6K6h566X54iG54K45ZCO55qE5L2N572uXG4gICAqL1xuICBjYWxjdWxhdGVFeHBsb2RlZFBvc2l0aW9uKHNlY3Rvcikge1xuICAgIGNvbnN0IHsgY2VudGVyQW5nbGUsIG9yaWdpbmFsUG9zaXRpb24gfSA9IHNlY3RvcjtcbiAgICBcbiAgICAvLyDorqHnrpfmiYflvaLmrrXlnKjlvoTlkJHkuIrnmoTliIbop6PmlrnlkJFcbiAgICAvLyDnlLHkuo7ov57mjqXmmK/msr9Y6L2055qE77yM5oiR5Lus6ZyA6KaB5ZyoWVrlubPpnaLkuIrliIbop6NcbiAgICBjb25zdCBleHBsb2RlRGlzdGFuY2UgPSB0aGlzLmNvbmZpZy5leHBsb2RlRGlzdGFuY2U7XG4gICAgXG4gICAgLy8g6K6h566X5YiG6Kej55qE5pa55ZCR5ZCR6YeP77yI5ZyoWVrlubPpnaLkuIrvvIlcbiAgICBjb25zdCBkaXJlY3Rpb25ZID0gTWF0aC5zaW4oY2VudGVyQW5nbGUpICogZXhwbG9kZURpc3RhbmNlO1xuICAgIGNvbnN0IGRpcmVjdGlvblogPSBNYXRoLmNvcyhjZW50ZXJBbmdsZSkgKiBleHBsb2RlRGlzdGFuY2U7XG4gICAgXG4gICAgLy8g6K6h566X5paw5L2N572uXG4gICAgY29uc3QgZXhwbG9kZWRQb3NpdGlvbiA9IG9yaWdpbmFsUG9zaXRpb24uY2xvbmUoKTtcbiAgICBleHBsb2RlZFBvc2l0aW9uLnkgKz0gZGlyZWN0aW9uWTtcbiAgICBleHBsb2RlZFBvc2l0aW9uLnogKz0gZGlyZWN0aW9uWjtcbiAgICBcbiAgICByZXR1cm4gZXhwbG9kZWRQb3NpdGlvbjtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiuoeeul+eIhueCuOWQjueahOaXi+i9rFxuICAgKi9cbiAgY2FsY3VsYXRlRXhwbG9kZWRSb3RhdGlvbihzZWN0b3IpIHtcbiAgICBjb25zdCB7IG9yaWdpbmFsUm90YXRpb24sIHNlZ21lbnRJbmRleCB9ID0gc2VjdG9yO1xuICAgIFxuICAgIC8vIOa3u+WKoDkw5bqm5peL6L2s5pWI5p6c5Yiw5YiG56a755qE5omH5b2i5q61XG4gICAgY29uc3QgZXhwbG9kZWRSb3RhdGlvbiA9IG9yaWdpbmFsUm90YXRpb24uY2xvbmUoKTtcbiAgICBcbiAgICAvLyDkuLrmr4/kuKrmiYflvaLmrrXmt7vliqA5MOW6puaXi+i9rO+8iM+ALzLlvKfluqbvvIlcbiAgICAvLyDlm7Tnu5VY6L205peL6L2s77yM5L2/5omH5b2i5q615Lqn55Sf57+75rua5pWI5p6cXG4gICAgZXhwbG9kZWRSb3RhdGlvbi54ICs9IE1hdGguUEkgLyAyO1xuICAgIFxuICAgIC8vIOWPr+mAie+8muS4uuS4jeWQjOaJh+W9ouautea3u+WKoOi9u+W+rueahOaXi+i9rOWPmOWMlu+8jOWinuWKoOWKqOaEn1xuICAgIGNvbnN0IHJvdGF0aW9uVmFyaWF0aW9uID0gKHNlZ21lbnRJbmRleCAqIE1hdGguUEkgLyA4KSAqIDAuMzsgLy8g5q+P5Liq5q616L275b6u5LiN5ZCM55qE5peL6L2s5YGP56e7XG4gICAgZXhwbG9kZWRSb3RhdGlvbi55ICs9IHJvdGF0aW9uVmFyaWF0aW9uO1xuICAgIFxuICAgIHJldHVybiBleHBsb2RlZFJvdGF0aW9uO1xuICB9XG4gIFxuICAvKipcbiAgICog5YiH5o2i54iG54K45pWI5p6cXG4gICAqL1xuICB0b2dnbGUoZXhwbG9kZSA9ICF0aGlzLmV4cGxvZGVkKSB7XG4gICAgdGhpcy5leHBsb2RlZCA9IGV4cGxvZGU7XG4gICAgXG4gICAgLy8g5YGc5q2i5omA5pyJ5q2j5Zyo6L+b6KGM55qE5Yqo55S7XG4gICAgdGhpcy50d2VlbnMuZm9yRWFjaCh0d2VlbiA9PiB0d2Vlbi5zdG9wKCkpO1xuICAgIHRoaXMudHdlZW5zID0gW107XG4gICAgXG4gICAgaWYgKHRoaXMuZXhwbG9kZWQpIHtcbiAgICAgIC8vIOeIhueCuO+8mumakOiXj+WOn+Wni+e9keagvO+8jOaYvuekuuaJh+W9ouautVxuICAgICAgdGhpcy5vcmlnaW5hbE1lc2gudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgdGhpcy5leHBsb2RlU2VjdG9ycygpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyDlkIjlubbvvJrph43mlrDnu4Too4XmiYflvaLmrrXvvIzmmL7npLrljp/lp4vnvZHmoLxcbiAgICAgIHRoaXMuYXNzZW1ibGVTZWN0b3JzKCk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0aGlzLmV4cGxvZGVkO1xuICB9XG4gIFxuICAvKipcbiAgICog5YiG6Kej5omH5b2i5q61XG4gICAqL1xuICBleHBsb2RlU2VjdG9ycygpIHtcbiAgICB0aGlzLnNlY3RvcnMuZm9yRWFjaCgoc2VjdG9yLCBpbmRleCkgPT4ge1xuICAgICAgLy8g5pi+56S65omH5b2i5q61XG4gICAgICBzZWN0b3IubWVzaC52aXNpYmxlID0gdHJ1ZTtcbiAgICAgIFxuICAgICAgLy8g6K6h566X55uu5qCH5L2N572u5ZKM5peL6L2sXG4gICAgICBjb25zdCB0YXJnZXRQb3NpdGlvbiA9IHRoaXMuY2FsY3VsYXRlRXhwbG9kZWRQb3NpdGlvbihzZWN0b3IpO1xuICAgICAgY29uc3QgdGFyZ2V0Um90YXRpb24gPSB0aGlzLmNhbGN1bGF0ZUV4cGxvZGVkUm90YXRpb24oc2VjdG9yKTtcbiAgICAgIFxuICAgICAgLy8g5Yib5bu65L2N572u5Yqo55S777yI5bim5bu26L+f5Lul5Lqn55Sf6L+e6ZSB5pWI5p6c77yJXG4gICAgICBjb25zdCBkZWxheSA9IGluZGV4ICogMTAwOyAvLyAxMDBtc+eahOW7tui/n+mXtOmalO+8jOiuqeWIhuino+aViOaenOabtOaYjuaYvu+8jOS4jkN5bGluZGVyMkV4cGxvZGVFZmZlY3Tkv53mjIHkuIDoh7RcbiAgICAgIFxuICAgICAgY29uc3QgcG9zaXRpb25Ud2VlbiA9IG5ldyBUV0VFTi5Ud2VlbihzZWN0b3IubWVzaC5wb3NpdGlvbiwgdHdlZW5Hcm91cClcbiAgICAgICAgLnRvKHtcbiAgICAgICAgICB4OiB0YXJnZXRQb3NpdGlvbi54LFxuICAgICAgICAgIHk6IHRhcmdldFBvc2l0aW9uLnksXG4gICAgICAgICAgejogdGFyZ2V0UG9zaXRpb24uelxuICAgICAgICB9LCB0aGlzLmNvbmZpZy5hbmltYXRpb25EdXJhdGlvbilcbiAgICAgICAgLmRlbGF5KGRlbGF5KVxuICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5CYWNrLk91dClcbiAgICAgICAgLnN0YXJ0KCk7XG4gICAgICBcbiAgICAgIC8vIOWIm+W7uuaXi+i9rOWKqOeUu1xuICAgICAgY29uc3Qgcm90YXRpb25Ud2VlbiA9IG5ldyBUV0VFTi5Ud2VlbihzZWN0b3IubWVzaC5yb3RhdGlvbiwgdHdlZW5Hcm91cClcbiAgICAgICAgLnRvKHtcbiAgICAgICAgICB4OiB0YXJnZXRSb3RhdGlvbi54LFxuICAgICAgICAgIHk6IHRhcmdldFJvdGF0aW9uLnksXG4gICAgICAgICAgejogdGFyZ2V0Um90YXRpb24uelxuICAgICAgICB9LCB0aGlzLmNvbmZpZy5hbmltYXRpb25EdXJhdGlvbilcbiAgICAgICAgLmRlbGF5KGRlbGF5KVxuICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5CYWNrLk91dClcbiAgICAgICAgLnN0YXJ0KCk7XG4gICAgICBcbiAgICAgIHRoaXMudHdlZW5zLnB1c2gocG9zaXRpb25Ud2Vlbiwgcm90YXRpb25Ud2Vlbik7XG4gICAgfSk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDnu4Too4XmiYflvaLmrrVcbiAgICovXG4gIGFzc2VtYmxlU2VjdG9ycygpIHtcbiAgICB0aGlzLnNlY3RvcnMuZm9yRWFjaCgoc2VjdG9yLCBpbmRleCkgPT4ge1xuICAgICAgLy8g5Yib5bu65Zue5b2S5Yqo55S777yI5Y+N5ZCR5bu26L+f5Lul5Lqn55Sf6YeN5paw57uE6KOF5pWI5p6c77yJXG4gICAgICBjb25zdCBkZWxheSA9ICh0aGlzLnNlY3RvcnMubGVuZ3RoIC0gaW5kZXggLSAxKSAqIDgwOyAvLyDlj43lkJHlu7bov5/vvIzkuI5DeWxpbmRlcjJFeHBsb2RlRWZmZWN05L+d5oyB5LiA6Ie0XG4gICAgICBcbiAgICAgIGNvbnN0IHBvc2l0aW9uVHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4oc2VjdG9yLm1lc2gucG9zaXRpb24sIHR3ZWVuR3JvdXApXG4gICAgICAgIC50byh7XG4gICAgICAgICAgeDogc2VjdG9yLm9yaWdpbmFsUG9zaXRpb24ueCxcbiAgICAgICAgICB5OiBzZWN0b3Iub3JpZ2luYWxQb3NpdGlvbi55LFxuICAgICAgICAgIHo6IHNlY3Rvci5vcmlnaW5hbFBvc2l0aW9uLnpcbiAgICAgICAgfSwgdGhpcy5jb25maWcuYW5pbWF0aW9uRHVyYXRpb24gKiAwLjgpXG4gICAgICAgIC5kZWxheShkZWxheSlcbiAgICAgICAgLmVhc2luZyhUV0VFTi5FYXNpbmcuQmFjay5JbilcbiAgICAgICAgLm9uQ29tcGxldGUoKCkgPT4ge1xuICAgICAgICAgIC8vIOacgOWQjuS4gOS4quaJh+W9ouautee7hOijheWujOaIkOWQju+8jOmakOiXj+aJgOacieaJh+W9ouauteW5tuaYvuekuuWOn+Wni+i/nuaOpVxuICAgICAgICAgIGlmIChpbmRleCA9PT0gdGhpcy5zZWN0b3JzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIHRoaXMuc2VjdG9ycy5mb3JFYWNoKHMgPT4gcy5tZXNoLnZpc2libGUgPSBmYWxzZSk7XG4gICAgICAgICAgICB0aGlzLm9yaWdpbmFsTWVzaC52aXNpYmxlID0gdGhpcy5vcmlnaW5hbFZpc2libGU7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuc3RhcnQoKTtcbiAgICAgIFxuICAgICAgY29uc3Qgcm90YXRpb25Ud2VlbiA9IG5ldyBUV0VFTi5Ud2VlbihzZWN0b3IubWVzaC5yb3RhdGlvbiwgdHdlZW5Hcm91cClcbiAgICAgICAgLnRvKHtcbiAgICAgICAgICB4OiBzZWN0b3Iub3JpZ2luYWxSb3RhdGlvbi54LFxuICAgICAgICAgIHk6IHNlY3Rvci5vcmlnaW5hbFJvdGF0aW9uLnksXG4gICAgICAgICAgejogc2VjdG9yLm9yaWdpbmFsUm90YXRpb24uelxuICAgICAgICB9LCB0aGlzLmNvbmZpZy5hbmltYXRpb25EdXJhdGlvbiAqIDAuOClcbiAgICAgICAgLmRlbGF5KGRlbGF5KVxuICAgICAgICAuZWFzaW5nKFRXRUVOLkVhc2luZy5CYWNrLkluKVxuICAgICAgICAuc3RhcnQoKTtcbiAgICAgIFxuICAgICAgdGhpcy50d2VlbnMucHVzaChwb3NpdGlvblR3ZWVuLCByb3RhdGlvblR3ZWVuKTtcbiAgICB9KTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOa4heeQhui1hOa6kFxuICAgKi9cbiAgZGlzcG9zZSgpIHtcbiAgICAvLyDlgZzmraLmiYDmnInliqjnlLtcbiAgICB0aGlzLnR3ZWVucy5mb3JFYWNoKHR3ZWVuID0+IHR3ZWVuLnN0b3AoKSk7XG4gICAgdGhpcy50d2VlbnMgPSBbXTtcbiAgICBcbiAgICAvLyDnp7vpmaTmiYflvaLmrrVcbiAgICB0aGlzLnNlY3RvcnMuZm9yRWFjaChzZWN0b3IgPT4ge1xuICAgICAgdGhpcy5wYXJlbnRHcm91cC5yZW1vdmUoc2VjdG9yLm1lc2gpO1xuICAgICAgc2VjdG9yLm1lc2guZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgc2VjdG9yLm1lc2gubWF0ZXJpYWwuZGlzcG9zZSgpO1xuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuc2VjdG9ycyA9IFtdO1xuICB9XG4gIFxuICAvKipcbiAgICog6I635Y+W54iG54K454q25oCBXG4gICAqL1xuICBpc0V4cGxvZGVkKCkge1xuICAgIHJldHVybiB0aGlzLmV4cGxvZGVkO1xuICB9XG59XG4iLCJpbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XHJcblxyXG4vKipcclxuICog6LaF5qSt5ZyG5a2Q572R5qC85om56YeP5a6a5L2N5ZmoXHJcbiAqIOS4k+mXqOeUqOS6juWwhlN1cGVyZWxsaXBzZUV4cGxvZGVFZmZlY3TliIbop6PlkI7nmoTlrZDnvZHmoLzmjInnu5nlrprlnZDmoIfmibnph4/lrprkvY1cclxuICovXHJcbmV4cG9ydCBjbGFzcyBTdXBlcmVsbGlwc2VQb3NpdGlvbmVyIHtcclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKiBAcGFyYW0ge1N1cGVyZWxsaXBzZUV4cGxvZGVFZmZlY3R9IGV4cGxvZGVFZmZlY3QgLSDotoXmpK3lnIbniIbngrjmlYjmnpzlrp7kvotcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihleHBsb2RlRWZmZWN0KSB7XHJcbiAgICB0aGlzLmV4cGxvZGVFZmZlY3QgPSBleHBsb2RlRWZmZWN0O1xyXG4gICAgdGhpcy5vcmlnaW5hbFBvc2l0aW9ucyA9IG5ldyBNYXAoKTsgLy8g5a2Y5YKo5Y6f5aeL5L2N572uXHJcbiAgICB0aGlzLmlzUG9zaXRpb25lZCA9IGZhbHNlO1xyXG4gICAgXHJcbiAgICB0aGlzLnNhdmVPcmlnaW5hbFBvc2l0aW9ucygpO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiDkv53lrZjljp/lp4vkvY3nva5cclxuICAgKi9cclxuICBzYXZlT3JpZ2luYWxQb3NpdGlvbnMoKSB7XHJcbiAgICB0aGlzLmV4cGxvZGVFZmZlY3QuYmxvY2tzLmZvckVhY2goKGJsb2NrLCBpbmRleCkgPT4ge1xyXG4gICAgICB0aGlzLm9yaWdpbmFsUG9zaXRpb25zLnNldChpbmRleCwge1xyXG4gICAgICAgIHg6IGJsb2NrLm1lc2gucG9zaXRpb24ueCxcclxuICAgICAgICB5OiBibG9jay5tZXNoLnBvc2l0aW9uLnksXHJcbiAgICAgICAgejogYmxvY2subWVzaC5wb3NpdGlvbi56XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOaJuemHj+iuvue9ruWtkOe9keagvOS9jee9rlxyXG4gICAqIEBwYXJhbSB7QXJyYXl9IHBvc2l0aW9ucyAtIOS9jee9ruaVsOe7hO+8jOavj+S4quWFg+e0oOWMheWQqyB7eCwgeSwgen0g5Z2Q5qCHXHJcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICDmlbDnu4Tplb/luqblupTkuI7lrZDnvZHmoLzmlbDph4/ljLnphY1cclxuICAgKi9cclxuICBzZXRQb3NpdGlvbnMocG9zaXRpb25zKSB7XHJcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkocG9zaXRpb25zKSkge1xyXG4gICAgICBjb25zb2xlLndhcm4oJ1N1cGVyZWxsaXBzZVBvc2l0aW9uZXI6IHBvc2l0aW9ucyDlv4XpobvmmK/mlbDnu4QnKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZiAocG9zaXRpb25zLmxlbmd0aCAhPT0gdGhpcy5leHBsb2RlRWZmZWN0LmJsb2Nrcy5sZW5ndGgpIHtcclxuICAgICAgY29uc29sZS53YXJuKGBTdXBlcmVsbGlwc2VQb3NpdGlvbmVyOiDkvY3nva7mlbDnu4Tplb/luqYgKCR7cG9zaXRpb25zLmxlbmd0aH0pIOS4juWtkOe9keagvOaVsOmHjyAoJHt0aGlzLmV4cGxvZGVFZmZlY3QuYmxvY2tzLmxlbmd0aH0pIOS4jeWMuemFjWApO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIOehruS/neWtkOe9keagvOWkhOS6juWIhuino+eKtuaAgeW5tuWPr+ingVxyXG4gICAgaWYgKCF0aGlzLmV4cGxvZGVFZmZlY3QuZXhwbG9kZWQpIHtcclxuICAgICAgdGhpcy5leHBsb2RlRWZmZWN0LnRvZ2dsZSh0cnVlKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8g5YGc5q2i5Lu75L2V5q2j5Zyo6L+b6KGM55qE5Yqo55S7XHJcbiAgICB0aGlzLmV4cGxvZGVFZmZlY3QudHdlZW5zLmZvckVhY2godHdlZW4gPT4gdHdlZW4uc3RvcCgpKTtcclxuICAgIHRoaXMuZXhwbG9kZUVmZmVjdC50d2VlbnMgPSBbXTtcclxuICAgIFxyXG4gICAgLy8g5om56YeP6K6+572u5L2N572uXHJcbiAgICBwb3NpdGlvbnMuZm9yRWFjaCgocG9zaXRpb24sIGluZGV4KSA9PiB7XHJcbiAgICAgIGlmIChpbmRleCA8IHRoaXMuZXhwbG9kZUVmZmVjdC5ibG9ja3MubGVuZ3RoKSB7XHJcbiAgICAgICAgY29uc3QgYmxvY2sgPSB0aGlzLmV4cGxvZGVFZmZlY3QuYmxvY2tzW2luZGV4XTtcclxuICAgICAgICBcclxuICAgICAgICAvLyDpqozor4HkvY3nva7lr7nosaFcclxuICAgICAgICBpZiAodHlwZW9mIHBvc2l0aW9uID09PSAnb2JqZWN0JyAmJiBwb3NpdGlvbiAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgaWYgKHR5cGVvZiBwb3NpdGlvbi54ID09PSAnbnVtYmVyJykgYmxvY2subWVzaC5wb3NpdGlvbi54ID0gcG9zaXRpb24ueDtcclxuICAgICAgICAgIGlmICh0eXBlb2YgcG9zaXRpb24ueSA9PT0gJ251bWJlcicpIGJsb2NrLm1lc2gucG9zaXRpb24ueSA9IHBvc2l0aW9uLnk7XHJcbiAgICAgICAgICBpZiAodHlwZW9mIHBvc2l0aW9uLnogPT09ICdudW1iZXInKSBibG9jay5tZXNoLnBvc2l0aW9uLnogPSBwb3NpdGlvbi56O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIHRoaXMuaXNQb3NpdGlvbmVkID0gdHJ1ZTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog6K6+572u5Y2V5Liq5a2Q572R5qC85L2N572uXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluZGV4IC0g5a2Q572R5qC857Si5byVICgwLTMpXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IHBvc2l0aW9uIC0g5L2N572u5a+56LGhIHt4LCB5LCB6fVxyXG4gICAqL1xyXG4gIHNldFBvc2l0aW9uKGluZGV4LCBwb3NpdGlvbikge1xyXG4gICAgaWYgKGluZGV4IDwgMCB8fCBpbmRleCA+PSB0aGlzLmV4cGxvZGVFZmZlY3QuYmxvY2tzLmxlbmd0aCkge1xyXG4gICAgICBjb25zb2xlLndhcm4oYFN1cGVyZWxsaXBzZVBvc2l0aW9uZXI6IOe0ouW8lSAke2luZGV4fSDotoXlh7rojIPlm7QgKDAtJHt0aGlzLmV4cGxvZGVFZmZlY3QuYmxvY2tzLmxlbmd0aCAtIDF9KWApO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmICh0eXBlb2YgcG9zaXRpb24gIT09ICdvYmplY3QnIHx8IHBvc2l0aW9uID09PSBudWxsKSB7XHJcbiAgICAgIGNvbnNvbGUud2FybignU3VwZXJlbGxpcHNlUG9zaXRpb25lcjogcG9zaXRpb24g5b+F6aG75piv5a+56LGhJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8g56Gu5L+d5a2Q572R5qC85aSE5LqO5YiG6Kej54q25oCB5bm25Y+v6KeBXHJcbiAgICBpZiAoIXRoaXMuZXhwbG9kZUVmZmVjdC5leHBsb2RlZCkge1xyXG4gICAgICB0aGlzLmV4cGxvZGVFZmZlY3QudG9nZ2xlKHRydWUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBibG9jayA9IHRoaXMuZXhwbG9kZUVmZmVjdC5ibG9ja3NbaW5kZXhdO1xyXG4gICAgaWYgKHR5cGVvZiBwb3NpdGlvbi54ID09PSAnbnVtYmVyJykgYmxvY2subWVzaC5wb3NpdGlvbi54ID0gcG9zaXRpb24ueDtcclxuICAgIGlmICh0eXBlb2YgcG9zaXRpb24ueSA9PT0gJ251bWJlcicpIGJsb2NrLm1lc2gucG9zaXRpb24ueSA9IHBvc2l0aW9uLnk7XHJcbiAgICBpZiAodHlwZW9mIHBvc2l0aW9uLnogPT09ICdudW1iZXInKSBibG9jay5tZXNoLnBvc2l0aW9uLnogPSBwb3NpdGlvbi56O1xyXG4gICAgXHJcbiAgICB0aGlzLmlzUG9zaXRpb25lZCA9IHRydWU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluaJgOacieWtkOe9keagvOeahOW9k+WJjeS9jee9rlxyXG4gICAqIEByZXR1cm5zIHtBcnJheX0g5L2N572u5pWw57uEXHJcbiAgICovXHJcbiAgZ2V0UG9zaXRpb25zKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZXhwbG9kZUVmZmVjdC5ibG9ja3MubWFwKGJsb2NrID0+ICh7XHJcbiAgICAgIHg6IGJsb2NrLm1lc2gucG9zaXRpb24ueCxcclxuICAgICAgeTogYmxvY2subWVzaC5wb3NpdGlvbi55LFxyXG4gICAgICB6OiBibG9jay5tZXNoLnBvc2l0aW9uLnpcclxuICAgIH0pKTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5oyH5a6a5a2Q572R5qC855qE5L2N572uXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluZGV4IC0g5a2Q572R5qC857Si5byVXHJcbiAgICogQHJldHVybnMge09iamVjdHxudWxsfSDkvY3nva7lr7nosaHmiJZudWxsXHJcbiAgICovXHJcbiAgZ2V0UG9zaXRpb24oaW5kZXgpIHtcclxuICAgIGlmIChpbmRleCA8IDAgfHwgaW5kZXggPj0gdGhpcy5leHBsb2RlRWZmZWN0LmJsb2Nrcy5sZW5ndGgpIHtcclxuICAgICAgY29uc29sZS53YXJuKGBTdXBlcmVsbGlwc2VQb3NpdGlvbmVyOiDntKLlvJUgJHtpbmRleH0g6LaF5Ye66IyD5Zu0YCk7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBibG9jayA9IHRoaXMuZXhwbG9kZUVmZmVjdC5ibG9ja3NbaW5kZXhdO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgeDogYmxvY2subWVzaC5wb3NpdGlvbi54LFxyXG4gICAgICB5OiBibG9jay5tZXNoLnBvc2l0aW9uLnksXHJcbiAgICAgIHo6IGJsb2NrLm1lc2gucG9zaXRpb24uelxyXG4gICAgfTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5oGi5aSN5Yiw5Y6f5aeL5L2N572uXHJcbiAgICovXHJcbiAgcmVzdG9yZU9yaWdpbmFsUG9zaXRpb25zKCkge1xyXG4gICAgdGhpcy5leHBsb2RlRWZmZWN0LmJsb2Nrcy5mb3JFYWNoKChibG9jaywgaW5kZXgpID0+IHtcclxuICAgICAgY29uc3Qgb3JpZ2luYWxQb3MgPSB0aGlzLm9yaWdpbmFsUG9zaXRpb25zLmdldChpbmRleCk7XHJcbiAgICAgIGlmIChvcmlnaW5hbFBvcykge1xyXG4gICAgICAgIGJsb2NrLm1lc2gucG9zaXRpb24uc2V0KG9yaWdpbmFsUG9zLngsIG9yaWdpbmFsUG9zLnksIG9yaWdpbmFsUG9zLnopO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgdGhpcy5pc1Bvc2l0aW9uZWQgPSBmYWxzZTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5bqU55So5L2N572u5YGP56e7XHJcbiAgICogQHBhcmFtIHtPYmplY3R9IG9mZnNldCAtIOWBj+enu+mHjyB7eCwgeSwgen1cclxuICAgKi9cclxuICBhcHBseU9mZnNldChvZmZzZXQpIHtcclxuICAgIGlmICh0eXBlb2Ygb2Zmc2V0ICE9PSAnb2JqZWN0JyB8fCBvZmZzZXQgPT09IG51bGwpIHtcclxuICAgICAgY29uc29sZS53YXJuKCdTdXBlcmVsbGlwc2VQb3NpdGlvbmVyOiBvZmZzZXQg5b+F6aG75piv5a+56LGhJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc3Qgb2Zmc2V0WCA9IHR5cGVvZiBvZmZzZXQueCA9PT0gJ251bWJlcicgPyBvZmZzZXQueCA6IDA7XHJcbiAgICBjb25zdCBvZmZzZXRZID0gdHlwZW9mIG9mZnNldC55ID09PSAnbnVtYmVyJyA/IG9mZnNldC55IDogMDtcclxuICAgIGNvbnN0IG9mZnNldFogPSB0eXBlb2Ygb2Zmc2V0LnogPT09ICdudW1iZXInID8gb2Zmc2V0LnogOiAwO1xyXG4gICAgXHJcbiAgICB0aGlzLmV4cGxvZGVFZmZlY3QuYmxvY2tzLmZvckVhY2goYmxvY2sgPT4ge1xyXG4gICAgICBibG9jay5tZXNoLnBvc2l0aW9uLnggKz0gb2Zmc2V0WDtcclxuICAgICAgYmxvY2subWVzaC5wb3NpdGlvbi55ICs9IG9mZnNldFk7XHJcbiAgICAgIGJsb2NrLm1lc2gucG9zaXRpb24ueiArPSBvZmZzZXRaO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOmHjee9ruaJgOacieWtkOe9keagvOWIsOeIhueCuOaViOaenOeahOm7mOiupOWIhuino+S9jee9rlxyXG4gICAqL1xyXG4gIHJlc2V0VG9FeHBsb2RlZFBvc2l0aW9ucygpIHtcclxuICAgIHRoaXMuZXhwbG9kZUVmZmVjdC5ibG9ja3MuZm9yRWFjaChibG9jayA9PiB7XHJcbiAgICAgIGNvbnN0IGV4cGxvZGVkUG9zID0gdGhpcy5leHBsb2RlRWZmZWN0LmNhbGN1bGF0ZUV4cGxvZGVkUG9zaXRpb24oYmxvY2spO1xyXG4gICAgICBibG9jay5tZXNoLnBvc2l0aW9uLmNvcHkoZXhwbG9kZWRQb3MpO1xyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIHRoaXMuaXNQb3NpdGlvbmVkID0gZmFsc2U7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWtkOe9keagvOaVsOmHj1xyXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IOWtkOe9keagvOaVsOmHj1xyXG4gICAqL1xyXG4gIGdldEJsb2NrQ291bnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5leHBsb2RlRWZmZWN0LmJsb2Nrcy5sZW5ndGg7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOajgOafpeaYr+WQpuW3sue7j+W6lOeUqOS6huiHquWumuS5ieWumuS9jVxyXG4gICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKblt7LlrprkvY1cclxuICAgKi9cclxuICBpc0N1c3RvbVBvc2l0aW9uZWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5pc1Bvc2l0aW9uZWQ7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCAqIGFzIFRXRUVOIGZyb20gJ0B0d2VlbmpzL3R3ZWVuLmpzJztcbmltcG9ydCB7IENPTkZJRyB9IGZyb20gJy4uL2NvbmZpZ0xvYWRlci5qcyc7XG5pbXBvcnQgeyB0d2Vlbkdyb3VwIH0gZnJvbSAnLi4vbWFpbi5qcyc7XG5pbXBvcnQgeyBTdXBlcmVsbGlwc2VQb3NpdGlvbmVyIH0gZnJvbSAnLi4vdXRpbHMvU3VwZXJlbGxpcHNlUG9zaXRpb25lci5qcyc7XG5pbXBvcnQgeyB1bmlmaWVkQ29tcG9uZW50TWF0ZXJpYWwgfSBmcm9tICcuLi9tYXRlcmlhbHMvVW5pZmllZENvbXBvbmVudE1hdGVyaWFsLmpzJztcblxuLyoqXG4gKiDotoXmpK3lnIbniIbngrjliIbop6PmlYjmnpznsbtcbiAqIOWwhui2heakreWchuaooeWei+WIhuino+aIkDTkuKrosaHpmZDliIblnZfvvIzmqKHmi5/np6/mnKjnu4Too4Uv5YiG6Kej5pWI5p6cXG4gKi9cbmV4cG9ydCBjbGFzcyBTdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0IHtcbiAgLyoqXG4gICAqIOaehOmAoOWHveaVsFxuICAgKiBAcGFyYW0ge1RIUkVFLk1lc2h9IHN1cGVyZWxsaXBzZU1lc2ggLSDotoXmpK3lnIbnvZHmoLzlr7nosaFcbiAgICogQHBhcmFtIHtUSFJFRS5Hcm91cH0gcGFyZW50R3JvdXAgLSDniLbnuqfnu4Tlr7nosaFcbiAgICovXG4gIGNvbnN0cnVjdG9yKHN1cGVyZWxsaXBzZU1lc2gsIHBhcmVudEdyb3VwKSB7XG4gICAgdGhpcy5vcmlnaW5hbE1lc2ggPSBzdXBlcmVsbGlwc2VNZXNoO1xuICAgIHRoaXMucGFyZW50R3JvdXAgPSBwYXJlbnRHcm91cDtcbiAgICB0aGlzLmV4cGxvZGVkID0gZmFsc2U7XG4gICAgdGhpcy5ibG9ja3MgPSBbXTtcbiAgICB0aGlzLnR3ZWVucyA9IFtdO1xuICAgIHRoaXMub3JpZ2luYWxWaXNpYmxlID0gc3VwZXJlbGxpcHNlTWVzaC52aXNpYmxlO1xuICAgIFxuICAgIC8vIOWIhuino+WPguaVsFxuICAgIHRoaXMuY29uZmlnID0ge1xuICAgICAgLy8g5YiG6Kej6Led56a757O75pWwXG4gICAgICBleHBsb2RlRGlzdGFuY2U6IDIuMCxcbiAgICAgIC8vIOWKqOeUu+aMgee7reaXtumXtCAtIOS4juWFtuS7lue7hOS7tuS/neaMgeS4gOiHtFxuICAgICAgYW5pbWF0aW9uRHVyYXRpb246IDEyMDBcbiAgICB9O1xuICAgIFxuICAgIHRoaXMuY3JlYXRlQmxvY2tzKCk7XG4gICAgXG4gICAgLy8g5Yid5aeL5YyW5L2N572u5ZmoXG4gICAgdGhpcy5wb3NpdGlvbmVyID0gbmV3IFN1cGVyZWxsaXBzZVBvc2l0aW9uZXIodGhpcyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliJvlu7rliIblnZdcbiAgICovXG4gIGNyZWF0ZUJsb2NrcygpIHtcbiAgICAvLyDojrflj5bljp/lp4vlh6DkvZXkvZNcbiAgICBjb25zdCBvcmlnaW5hbEdlb21ldHJ5ID0gdGhpcy5vcmlnaW5hbE1lc2guZ2VvbWV0cnk7XG4gICAgXG4gICAgLy8g5L2/55So57uf5LiA57uE5Lu25p2Q6LSo566h55CG5Zmo6I635Y+W54iG54K45p2Q6LSoXG4gICAgY29uc3QgYmxvY2tNYXRlcmlhbCA9IHVuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5nZXRNYXRlcmlhbCgnZXhwbG9kZWQnKTtcbiAgICBcbiAgICAvLyDliJvlu7o05Liq6LGh6ZmQ5YiG5Z2XXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcbiAgICAgIGNvbnN0IGJsb2NrID0gdGhpcy5jcmVhdGVRdWFkcmFudEJsb2NrKG9yaWdpbmFsR2VvbWV0cnksIGJsb2NrTWF0ZXJpYWwsIGkpO1xuICAgICAgXG4gICAgICAvLyDorr7nva7liJ3lp4vkvY3nva7lkozml4vovaxcbiAgICAgIGJsb2NrLnBvc2l0aW9uLmNvcHkodGhpcy5vcmlnaW5hbE1lc2gucG9zaXRpb24pO1xuICAgICAgYmxvY2sucm90YXRpb24uY29weSh0aGlzLm9yaWdpbmFsTWVzaC5yb3RhdGlvbik7XG4gICAgICBcbiAgICAgIC8vIOWIneWni+aXtumakOiXj+enr+acqOWdl1xuICAgICAgYmxvY2sudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgXG4gICAgICAvLyDorqHnrpfosaHpmZDnmoTkuK3lv4Pop5LluqbvvIjnlKjkuo7liIbop6PmlrnlkJHvvIlcbiAgICAgIGNvbnN0IGNlbnRlckFuZ2xlID0gaSAqIE1hdGguUEkgLyAyICsgTWF0aC5QSSAvIDQ7IC8vIOavj+S4quixoemZkOeahOS4reW/g+inkuW6plxuICAgICAgXG4gICAgICB0aGlzLmJsb2Nrcy5wdXNoKHtcbiAgICAgICAgbWVzaDogYmxvY2ssXG4gICAgICAgIG9yaWdpbmFsUG9zaXRpb246IGJsb2NrLnBvc2l0aW9uLmNsb25lKCksXG4gICAgICAgIG9yaWdpbmFsUm90YXRpb246IGJsb2NrLnJvdGF0aW9uLmNsb25lKCksXG4gICAgICAgIHF1YWRyYW50SW5kZXg6IGksXG4gICAgICAgIGNlbnRlckFuZ2xlOiBjZW50ZXJBbmdsZVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHRoaXMucGFyZW50R3JvdXAuYWRkKGJsb2NrKTtcbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliJvlu7rosaHpmZDliIblnZdcbiAgICogQHBhcmFtIHtUSFJFRS5CdWZmZXJHZW9tZXRyeX0gb3JpZ2luYWxHZW9tZXRyeSAtIOWOn+Wni+WHoOS9leS9k1xuICAgKiBAcGFyYW0ge1RIUkVFLk1hdGVyaWFsfSBtYXRlcmlhbCAtIOadkOi0qFxuICAgKiBAcGFyYW0ge251bWJlcn0gcXVhZHJhbnRJbmRleCAtIOixoemZkOe0ouW8lSAoMC0zKVxuICAgKi9cbiAgY3JlYXRlUXVhZHJhbnRCbG9jayhvcmlnaW5hbEdlb21ldHJ5LCBtYXRlcmlhbCwgcXVhZHJhbnRJbmRleCkge1xuICAgIC8vIOiOt+WPluWOn+Wni+WHoOS9leS9k+eahOmhtueCueaVsOaNrlxuICAgIGNvbnN0IHBvc2l0aW9ucyA9IG9yaWdpbmFsR2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbi5hcnJheTtcbiAgICBjb25zdCBub3JtYWxzID0gb3JpZ2luYWxHZW9tZXRyeS5hdHRyaWJ1dGVzLm5vcm1hbCA/IG9yaWdpbmFsR2VvbWV0cnkuYXR0cmlidXRlcy5ub3JtYWwuYXJyYXkgOiBudWxsO1xuICAgIGNvbnN0IHV2cyA9IG9yaWdpbmFsR2VvbWV0cnkuYXR0cmlidXRlcy51diA/IG9yaWdpbmFsR2VvbWV0cnkuYXR0cmlidXRlcy51di5hcnJheSA6IG51bGw7XG4gICAgY29uc3QgaW5kaWNlcyA9IG9yaWdpbmFsR2VvbWV0cnkuaW5kZXggPyBvcmlnaW5hbEdlb21ldHJ5LmluZGV4LmFycmF5IDogbnVsbDtcbiAgICBcbiAgICAvLyDliJvlu7rmlrDnmoTlh6DkvZXkvZPmlbDmja7mlbDnu4RcbiAgICBjb25zdCBuZXdWZXJ0aWNlcyA9IFtdO1xuICAgIGNvbnN0IG5ld05vcm1hbHMgPSBbXTtcbiAgICBjb25zdCBuZXdVdnMgPSBbXTtcbiAgICBjb25zdCBuZXdJbmRpY2VzID0gW107XG4gICAgY29uc3QgdmVydGV4TWFwID0gbmV3IE1hcCgpOyAvLyDnlKjkuo7mmKDlsITml6fpobbngrnntKLlvJXliLDmlrDpobbngrnntKLlvJVcbiAgICBcbiAgICAvLyDorqHnrpflrp7pmYXlh6DkvZXkvZPovrnnlYzmoYZcbiAgICBjb25zdCBib3VuZGluZ0JveCA9IHRoaXMuY2FsY3VsYXRlR2VvbWV0cnlCb3VuZGluZ0JveChvcmlnaW5hbEdlb21ldHJ5KTtcbiAgICBcbiAgICAvLyDlrprkuYnln7rkuo7lrp7pmYXovrnnlYznmoTosaHpmZDovrnnlYxcbiAgICBjb25zdCBxdWFkcmFudEJvdW5kcyA9IHRoaXMuZ2V0UXVhZHJhbnRCb3VuZHNXaXRoR2VvbWV0cnkocXVhZHJhbnRJbmRleCwgYm91bmRpbmdCb3gpO1xuICAgIFxuICAgIC8vIOWkhOeQhumhtueCueaVsOaNrlxuICAgIGlmIChpbmRpY2VzKSB7XG4gICAgICAvLyDmnInntKLlvJXnmoTlh6DkvZXkvZNcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5kaWNlcy5sZW5ndGg7IGkgKz0gMykge1xuICAgICAgICBjb25zdCB0cmlhbmdsZVZlcnRpY2VzID0gW107XG4gICAgICAgIGNvbnN0IHRyaWFuZ2xlSW5RdWFkcmFudCA9IFtdO1xuICAgICAgICBcbiAgICAgICAgLy8g5qOA5p+l5LiJ6KeS5b2i55qE5q+P5Liq6aG254K5XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgMzsgaisrKSB7XG4gICAgICAgICAgY29uc3QgdmVydGV4SW5kZXggPSBpbmRpY2VzW2kgKyBqXTtcbiAgICAgICAgICBjb25zdCB4ID0gcG9zaXRpb25zW3ZlcnRleEluZGV4ICogM107XG4gICAgICAgICAgY29uc3QgeSA9IHBvc2l0aW9uc1t2ZXJ0ZXhJbmRleCAqIDMgKyAxXTtcbiAgICAgICAgICBcbiAgICAgICAgICB0cmlhbmdsZVZlcnRpY2VzLnB1c2goeyBpbmRleDogdmVydGV4SW5kZXgsIHgsIHkgfSk7XG4gICAgICAgICAgdHJpYW5nbGVJblF1YWRyYW50LnB1c2godGhpcy5pc1BvaW50SW5RdWFkcmFudCh4LCB5LCBxdWFkcmFudEJvdW5kcykpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyDmm7Tmmbrog73nmoTkuInop5LlvaLliIbphY3vvJrln7rkuo7kuInop5LlvaLph43lv4PmnaXlhrPlrprlvZLlsZ5cbiAgICAgICAgY29uc3QgdHJpYW5nbGVDZW50ZXIgPSB0aGlzLmNhbGN1bGF0ZVRyaWFuZ2xlQ2VudGVyKHRyaWFuZ2xlVmVydGljZXMpO1xuICAgICAgICBjb25zdCB0cmlhbmdsZUJlbG9uZ3NUb1F1YWRyYW50ID0gdGhpcy5pc1BvaW50SW5RdWFkcmFudChcbiAgICAgICAgICB0cmlhbmdsZUNlbnRlci54LCBcbiAgICAgICAgICB0cmlhbmdsZUNlbnRlci55LCBcbiAgICAgICAgICBxdWFkcmFudEJvdW5kc1xuICAgICAgICApO1xuICAgICAgICBcbiAgICAgICAgLy8g5aaC5p6c5LiJ6KeS5b2i6YeN5b+D5Zyo5b2T5YmN6LGh6ZmQ77yM5oiW6ICF5omA5pyJ6aG254K56YO95Zyo6LGh6ZmQ6L6555WM5LiK77yM5YiZ5YyF5ZCr5pW05Liq5LiJ6KeS5b2iXG4gICAgICAgIGlmICh0cmlhbmdsZUJlbG9uZ3NUb1F1YWRyYW50IHx8IHRyaWFuZ2xlSW5RdWFkcmFudC5ldmVyeShpblF1YWRyYW50ID0+IGluUXVhZHJhbnQpKSB7XG4gICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCAzOyBqKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHZlcnRleCA9IHRyaWFuZ2xlVmVydGljZXNbal07XG4gICAgICAgICAgICBjb25zdCBvbGRJbmRleCA9IHZlcnRleC5pbmRleDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCF2ZXJ0ZXhNYXAuaGFzKG9sZEluZGV4KSkge1xuICAgICAgICAgICAgICAvLyDmt7vliqDmlrDpobbngrlcbiAgICAgICAgICAgICAgY29uc3QgbmV3SW5kZXggPSBuZXdWZXJ0aWNlcy5sZW5ndGggLyAzO1xuICAgICAgICAgICAgICB2ZXJ0ZXhNYXAuc2V0KG9sZEluZGV4LCBuZXdJbmRleCk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvLyDlpI3liLbpobbngrnkvY3nva5cbiAgICAgICAgICAgICAgbmV3VmVydGljZXMucHVzaChcbiAgICAgICAgICAgICAgICBwb3NpdGlvbnNbb2xkSW5kZXggKiAzXSxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbnNbb2xkSW5kZXggKiAzICsgMV0sXG4gICAgICAgICAgICAgICAgcG9zaXRpb25zW29sZEluZGV4ICogMyArIDJdXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvLyDlpI3liLbms5XlkJHph49cbiAgICAgICAgICAgICAgaWYgKG5vcm1hbHMpIHtcbiAgICAgICAgICAgICAgICBuZXdOb3JtYWxzLnB1c2goXG4gICAgICAgICAgICAgICAgICBub3JtYWxzW29sZEluZGV4ICogM10sXG4gICAgICAgICAgICAgICAgICBub3JtYWxzW29sZEluZGV4ICogMyArIDFdLFxuICAgICAgICAgICAgICAgICAgbm9ybWFsc1tvbGRJbmRleCAqIDMgKyAyXVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIOWkjeWItlVW5Z2Q5qCHXG4gICAgICAgICAgICAgIGlmICh1dnMpIHtcbiAgICAgICAgICAgICAgICBuZXdVdnMucHVzaChcbiAgICAgICAgICAgICAgICAgIHV2c1tvbGRJbmRleCAqIDJdLFxuICAgICAgICAgICAgICAgICAgdXZzW29sZEluZGV4ICogMiArIDFdXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBuZXdJbmRpY2VzLnB1c2godmVydGV4TWFwLmdldChvbGRJbmRleCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyDml6DntKLlvJXnmoTlh6DkvZXkvZNcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9zaXRpb25zLmxlbmd0aDsgaSArPSA5KSB7IC8vIOavj+S4quS4ieinkuW9ojPkuKrpobbngrnvvIzmr4/kuKrpobbngrkz5Liq5Z2Q5qCHXG4gICAgICAgIGNvbnN0IHRyaWFuZ2xlSW5RdWFkcmFudCA9IFtdO1xuICAgICAgICBcbiAgICAgICAgLy8g5qOA5p+l5LiJ6KeS5b2i55qE5q+P5Liq6aG254K5XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgMzsgaisrKSB7XG4gICAgICAgICAgY29uc3QgeCA9IHBvc2l0aW9uc1tpICsgaiAqIDNdO1xuICAgICAgICAgIGNvbnN0IHkgPSBwb3NpdGlvbnNbaSArIGogKiAzICsgMV07XG4gICAgICAgICAgdHJpYW5nbGVJblF1YWRyYW50LnB1c2godGhpcy5pc1BvaW50SW5RdWFkcmFudCh4LCB5LCBxdWFkcmFudEJvdW5kcykpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyDlpoLmnpzkuInop5LlvaLnmoTku7vkvZXpobbngrnlnKjlvZPliY3osaHpmZDvvIzliJnljIXlkKvmlbTkuKrkuInop5LlvaJcbiAgICAgICAgaWYgKHRyaWFuZ2xlSW5RdWFkcmFudC5zb21lKGluUXVhZHJhbnQgPT4gaW5RdWFkcmFudCkpIHtcbiAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDM7IGorKykge1xuICAgICAgICAgICAgY29uc3QgYmFzZUlkeCA9IGkgKyBqICogMztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8g5aSN5Yi26aG254K55L2N572uXG4gICAgICAgICAgICBuZXdWZXJ0aWNlcy5wdXNoKFxuICAgICAgICAgICAgICBwb3NpdGlvbnNbYmFzZUlkeF0sXG4gICAgICAgICAgICAgIHBvc2l0aW9uc1tiYXNlSWR4ICsgMV0sXG4gICAgICAgICAgICAgIHBvc2l0aW9uc1tiYXNlSWR4ICsgMl1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIOWkjeWItuazleWQkemHj1xuICAgICAgICAgICAgaWYgKG5vcm1hbHMpIHtcbiAgICAgICAgICAgICAgbmV3Tm9ybWFscy5wdXNoKFxuICAgICAgICAgICAgICAgIG5vcm1hbHNbYmFzZUlkeF0sXG4gICAgICAgICAgICAgICAgbm9ybWFsc1tiYXNlSWR4ICsgMV0sXG4gICAgICAgICAgICAgICAgbm9ybWFsc1tiYXNlSWR4ICsgMl1cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8g5aSN5Yi2VVblnZDmoIdcbiAgICAgICAgICAgIGlmICh1dnMpIHtcbiAgICAgICAgICAgICAgY29uc3QgdXZJZHggPSAoaSAvIDMpICogMiArIGogKiAyOyAvLyBVVue0ouW8leiuoeeul1xuICAgICAgICAgICAgICBuZXdVdnMucHVzaChcbiAgICAgICAgICAgICAgICB1dnNbdXZJZHhdLFxuICAgICAgICAgICAgICAgIHV2c1t1dklkeCArIDFdXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIOWIm+W7uuaWsOeahOWHoOS9leS9k1xuICAgIGNvbnN0IGJsb2NrR2VvbWV0cnkgPSBuZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnkoKTtcbiAgICBcbiAgICBpZiAobmV3VmVydGljZXMubGVuZ3RoID4gMCkge1xuICAgICAgYmxvY2tHZW9tZXRyeS5zZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgbmV3IFRIUkVFLkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUobmV3VmVydGljZXMsIDMpKTtcbiAgICAgIFxuICAgICAgaWYgKG5ld05vcm1hbHMubGVuZ3RoID4gMCkge1xuICAgICAgICBibG9ja0dlb21ldHJ5LnNldEF0dHJpYnV0ZSgnbm9ybWFsJywgbmV3IFRIUkVFLkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUobmV3Tm9ybWFscywgMykpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAobmV3VXZzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYmxvY2tHZW9tZXRyeS5zZXRBdHRyaWJ1dGUoJ3V2JywgbmV3IFRIUkVFLkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUobmV3VXZzLCAyKSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChuZXdJbmRpY2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYmxvY2tHZW9tZXRyeS5zZXRJbmRleChuZXdJbmRpY2VzKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8g6K6h566X6L6555WM55uS5ZKM5rOV5ZCR6YePXG4gICAgICBibG9ja0dlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ0JveCgpO1xuICAgICAgaWYgKG5ld05vcm1hbHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGJsb2NrR2VvbWV0cnkuY29tcHV0ZVZlcnRleE5vcm1hbHMoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8g5aaC5p6c5rKh5pyJ6aG254K577yM5Yib5bu65LiA5Liq566A5Y2V55qE5Y2g5L2N5Yeg5L2V5L2TXG4gICAgICBjb25zb2xlLndhcm4oYFF1YWRyYW50ICR7cXVhZHJhbnRJbmRleH0gaGFzIG5vIHZlcnRpY2VzLCBjcmVhdGluZyBwbGFjZWhvbGRlciBnZW9tZXRyeWApO1xuICAgICAgY29uc3QgcGxhbmVHZW9tZXRyeSA9IG5ldyBUSFJFRS5QbGFuZUdlb21ldHJ5KDAuMSwgMC4xKTtcbiAgICAgIGJsb2NrR2VvbWV0cnkuY29weShwbGFuZUdlb21ldHJ5KTtcbiAgICB9XG4gICAgXG4gICAgLy8g5Yib5bu6572R5qC8XG4gICAgY29uc3QgbWVzaCA9IG5ldyBUSFJFRS5NZXNoKGJsb2NrR2VvbWV0cnksIG1hdGVyaWFsKTtcbiAgICBcbiAgICByZXR1cm4gbWVzaDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOiuoeeul+WHoOS9leS9k+i+ueeVjOahhlxuICAgKiBAcGFyYW0ge1RIUkVFLkJ1ZmZlckdlb21ldHJ5fSBnZW9tZXRyeSAtIOWHoOS9leS9k1xuICAgKi9cbiAgY2FsY3VsYXRlR2VvbWV0cnlCb3VuZGluZ0JveChnZW9tZXRyeSkge1xuICAgIGdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ0JveCgpO1xuICAgIGNvbnN0IGJveCA9IGdlb21ldHJ5LmJvdW5kaW5nQm94O1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBtaW5YOiBib3gubWluLngsXG4gICAgICBtYXhYOiBib3gubWF4LngsXG4gICAgICBtaW5ZOiBib3gubWluLnksXG4gICAgICBtYXhZOiBib3gubWF4LnksXG4gICAgICBtaW5aOiBib3gubWluLnosXG4gICAgICBtYXhaOiBib3gubWF4LnosXG4gICAgICBjZW50ZXJYOiAoYm94Lm1pbi54ICsgYm94Lm1heC54KSAvIDIsXG4gICAgICBjZW50ZXJZOiAoYm94Lm1pbi55ICsgYm94Lm1heC55KSAvIDIsXG4gICAgICBjZW50ZXJaOiAoYm94Lm1pbi56ICsgYm94Lm1heC56KSAvIDJcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluWfuuS6juWunumZheWHoOS9leS9k+eahOixoemZkOi+ueeVjFxuICAgKiBAcGFyYW0ge251bWJlcn0gcXVhZHJhbnRJbmRleCAtIOixoemZkOe0ouW8lSAoMC0zKVxuICAgKiBAcGFyYW0ge09iamVjdH0gYm91bmRpbmdCb3ggLSDlh6DkvZXkvZPovrnnlYzmoYZcbiAgICovXG4gIGdldFF1YWRyYW50Qm91bmRzV2l0aEdlb21ldHJ5KHF1YWRyYW50SW5kZXgsIGJvdW5kaW5nQm94KSB7XG4gICAgY29uc3QgeyBjZW50ZXJYLCBjZW50ZXJZLCBtaW5YLCBtYXhYLCBtaW5ZLCBtYXhZIH0gPSBib3VuZGluZ0JveDtcbiAgICBcbiAgICBzd2l0Y2ggKHF1YWRyYW50SW5kZXgpIHtcbiAgICAgIGNhc2UgMDogLy8g56ys5LiA6LGh6ZmQICgreCwgK3kpIC0g5Y+z5LiKXG4gICAgICAgIHJldHVybiB7IFxuICAgICAgICAgIG1pblg6IGNlbnRlclgsIG1heFg6IG1heFgsIFxuICAgICAgICAgIG1pblk6IGNlbnRlclksIG1heFk6IG1heFkgXG4gICAgICAgIH07XG4gICAgICBjYXNlIDE6IC8vIOesrOS6jOixoemZkCAoLXgsICt5KSAtIOW3puS4ilxuICAgICAgICByZXR1cm4geyBcbiAgICAgICAgICBtaW5YOiBtaW5YLCBtYXhYOiBjZW50ZXJYLCBcbiAgICAgICAgICBtaW5ZOiBjZW50ZXJZLCBtYXhZOiBtYXhZIFxuICAgICAgICB9O1xuICAgICAgY2FzZSAyOiAvLyDnrKzkuInosaHpmZAgKC14LCAteSkgLSDlt6bkuItcbiAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgbWluWDogbWluWCwgbWF4WDogY2VudGVyWCwgXG4gICAgICAgICAgbWluWTogbWluWSwgbWF4WTogY2VudGVyWSBcbiAgICAgICAgfTtcbiAgICAgIGNhc2UgMzogLy8g56ys5Zub6LGh6ZmQICgreCwgLXkpIC0g5Y+z5LiLXG4gICAgICAgIHJldHVybiB7IFxuICAgICAgICAgIG1pblg6IGNlbnRlclgsIG1heFg6IG1heFgsIFxuICAgICAgICAgIG1pblk6IG1pblksIG1heFk6IGNlbnRlclkgXG4gICAgICAgIH07XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4geyBcbiAgICAgICAgICBtaW5YOiBtaW5YLCBtYXhYOiBtYXhYLCBcbiAgICAgICAgICBtaW5ZOiBtaW5ZLCBtYXhZOiBtYXhZIFxuICAgICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5bosaHpmZDovrnnlYzvvIjml6fniYjmnKzvvIzkv53nlZnnlKjkuo7lhbzlrrnvvIlcbiAgICogQHBhcmFtIHtudW1iZXJ9IHF1YWRyYW50SW5kZXggLSDosaHpmZDntKLlvJUgKDAtMylcbiAgICovXG4gIGdldFF1YWRyYW50Qm91bmRzKHF1YWRyYW50SW5kZXgpIHtcbiAgICBzd2l0Y2ggKHF1YWRyYW50SW5kZXgpIHtcbiAgICAgIGNhc2UgMDogLy8g56ys5LiA6LGh6ZmQICgreCwgK3kpXG4gICAgICAgIHJldHVybiB7IG1pblg6IDAsIG1heFg6IEluZmluaXR5LCBtaW5ZOiAwLCBtYXhZOiBJbmZpbml0eSB9O1xuICAgICAgY2FzZSAxOiAvLyDnrKzkuozosaHpmZAgKC14LCAreSlcbiAgICAgICAgcmV0dXJuIHsgbWluWDogLUluZmluaXR5LCBtYXhYOiAwLCBtaW5ZOiAwLCBtYXhZOiBJbmZpbml0eSB9O1xuICAgICAgY2FzZSAyOiAvLyDnrKzkuInosaHpmZAgKC14LCAteSlcbiAgICAgICAgcmV0dXJuIHsgbWluWDogLUluZmluaXR5LCBtYXhYOiAwLCBtaW5ZOiAtSW5maW5pdHksIG1heFk6IDAgfTtcbiAgICAgIGNhc2UgMzogLy8g56ys5Zub6LGh6ZmQICgreCwgLXkpXG4gICAgICAgIHJldHVybiB7IG1pblg6IDAsIG1heFg6IEluZmluaXR5LCBtaW5ZOiAtSW5maW5pdHksIG1heFk6IDAgfTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiB7IG1pblg6IC1JbmZpbml0eSwgbWF4WDogSW5maW5pdHksIG1pblk6IC1JbmZpbml0eSwgbWF4WTogSW5maW5pdHkgfTtcbiAgICB9XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDorqHnrpfkuInop5LlvaLph43lv4NcbiAgICogQHBhcmFtIHtBcnJheX0gdHJpYW5nbGVWZXJ0aWNlcyAtIOS4ieinkuW9oumhtueCueaVsOe7hFxuICAgKi9cbiAgY2FsY3VsYXRlVHJpYW5nbGVDZW50ZXIodHJpYW5nbGVWZXJ0aWNlcykge1xuICAgIGNvbnN0IGNlbnRlclggPSAodHJpYW5nbGVWZXJ0aWNlc1swXS54ICsgdHJpYW5nbGVWZXJ0aWNlc1sxXS54ICsgdHJpYW5nbGVWZXJ0aWNlc1syXS54KSAvIDM7XG4gICAgY29uc3QgY2VudGVyWSA9ICh0cmlhbmdsZVZlcnRpY2VzWzBdLnkgKyB0cmlhbmdsZVZlcnRpY2VzWzFdLnkgKyB0cmlhbmdsZVZlcnRpY2VzWzJdLnkpIC8gMztcbiAgICBcbiAgICByZXR1cm4geyB4OiBjZW50ZXJYLCB5OiBjZW50ZXJZIH07XG4gIH1cblxuICAvKipcbiAgICog5qOA5p+l54K55piv5ZCm5Zyo5oyH5a6a6LGh6ZmQ5YaFXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOWdkOagh1xuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnlnZDmoIdcbiAgICogQHBhcmFtIHtPYmplY3R9IGJvdW5kcyAtIOixoemZkOi+ueeVjFxuICAgKi9cbiAgaXNQb2ludEluUXVhZHJhbnQoeCwgeSwgYm91bmRzKSB7XG4gICAgcmV0dXJuIHggPj0gYm91bmRzLm1pblggJiYgeCA8PSBib3VuZHMubWF4WCAmJiBcbiAgICAgICAgICAgeSA+PSBib3VuZHMubWluWSAmJiB5IDw9IGJvdW5kcy5tYXhZO1xuICB9XG4gIFxuICAvKipcbiAgICog6K6h566X5Z+65LqO5Yeg5L2V5L2T5bC65a+455qE5YiG6Kej5L2N572uXG4gICAqL1xuICBjYWxjdWxhdGVFeHBsb2RlZFBvc2l0aW9uKGJsb2NrKSB7XG4gICAgLy8g5L2/55So5Zu65a6a55qE5YiG6Kej5L2N572u5Z2Q5qCHXG4gICAgY29uc3Qgb2Zmc2V0cyA9IFtcbiAgICAgIHsgeDogMSwgeTogMS41LCB6OiAxIH0sICAgIC8vIOesrOS4gOixoemZkFxuICAgICAgeyB4OiAxLCB5OiAtMi41LCB6OiAxIH0sICAgLy8g56ys5LqM6LGh6ZmQXG4gICAgICB7IHg6IDEsIHk6IC0yLjUsIHo6IC0xIH0sICAvLyDnrKzkuInosaHpmZBcbiAgICAgIHsgeDogMSwgeTogMS41LCB6OiAtMSB9ICAgIC8vIOesrOWbm+ixoemZkFxuICAgIF07XG4gICAgXG4gICAgLy8g56Gu5L+d57Si5byV5pyJ5pWIXG4gICAgaWYgKGJsb2NrLnF1YWRyYW50SW5kZXggPj0gMCAmJiBibG9jay5xdWFkcmFudEluZGV4IDwgb2Zmc2V0cy5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IG9mZnNldCA9IG9mZnNldHNbYmxvY2sucXVhZHJhbnRJbmRleF07XG4gICAgICByZXR1cm4ge1xuICAgICAgICB4OiBibG9jay5vcmlnaW5hbFBvc2l0aW9uLnggKyBvZmZzZXQueCxcbiAgICAgICAgeTogYmxvY2sub3JpZ2luYWxQb3NpdGlvbi55ICsgb2Zmc2V0LnksXG4gICAgICAgIHo6IGJsb2NrLm9yaWdpbmFsUG9zaXRpb24ueiArIG9mZnNldC56XG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICAvLyDlm57pgIDliLDljp/lp4vkvY3nva5cbiAgICByZXR1cm4gYmxvY2sub3JpZ2luYWxQb3NpdGlvbjtcbiAgfVxuICBcbiAgLyoqXG4gICAqIOWIh+aNoueIhueCuOaViOaenFxuICAgKi9cbiAgdG9nZ2xlKGV4cGxvZGUgPSAhdGhpcy5leHBsb2RlZCkge1xuICAgIHRoaXMuZXhwbG9kZWQgPSBleHBsb2RlO1xuICAgIFxuICAgIC8vIOWBnOatouaJgOacieato+WcqOi/m+ihjOeahOWKqOeUu1xuICAgIHRoaXMudHdlZW5zLmZvckVhY2godHdlZW4gPT4gdHdlZW4uc3RvcCgpKTtcbiAgICB0aGlzLnR3ZWVucyA9IFtdO1xuICAgIFxuICAgIGlmICh0aGlzLmV4cGxvZGVkKSB7XG4gICAgICAvLyDniIbngrjvvJrpmpDol4/ljp/lp4vnvZHmoLzvvIzmmL7npLrnp6/mnKjlnZdcbiAgICAgIHRoaXMub3JpZ2luYWxNZXNoLnZpc2libGUgPSBmYWxzZTtcbiAgICAgIHRoaXMuZXhwbG9kZUJsb2NrcygpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyDlkIjlubbvvJrph43mlrDnu4Too4Xnp6/mnKjlnZfvvIzmmL7npLrljp/lp4vnvZHmoLxcbiAgICAgIHRoaXMuYXNzZW1ibGVCbG9ja3MoKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHRoaXMuZXhwbG9kZWQ7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDliIbop6Pnp6/mnKjlnZdcbiAgICovXG4gIGV4cGxvZGVCbG9ja3MoKSB7XG4gICAgdGhpcy5hbmltYXRlQmxvY2tzKHRydWUpOyAvLyB0cnVl6KGo56S65YiG6KejXG4gIH1cbiAgXG4gIC8qKlxuICAgKiDnu4Too4Xnp6/mnKjlnZdcbiAgICovXG4gIGFzc2VtYmxlQmxvY2tzKCkge1xuICAgIHRoaXMuYW5pbWF0ZUJsb2NrcyhmYWxzZSk7IC8vIGZhbHNl6KGo56S657uE6KOFXG4gIH1cbiAgXG4gIC8qKlxuICAgKiDnu5/kuIDnmoTliqjnlLvlpITnkIblh73mlbBcbiAgICogQHBhcmFtIHtib29sZWFufSBleHBsb2RlIC0gdHJ1ZeS4uuWIhuino++8jGZhbHNl5Li657uE6KOFXG4gICAqL1xuICBhbmltYXRlQmxvY2tzKGV4cGxvZGUpIHtcbiAgICBsZXQgY29tcGxldGVkQW5pbWF0aW9ucyA9IDA7XG4gICAgY29uc3QgdG90YWxBbmltYXRpb25zID0gdGhpcy5ibG9ja3MubGVuZ3RoO1xuICAgIFxuICAgIHRoaXMuYmxvY2tzLmZvckVhY2goKGJsb2NrLCBpbmRleCkgPT4ge1xuICAgICAgLy8g5pi+56S65oiW6ZqQ6JeP56ev5pyo5Z2X55qE6YC76L6RXG4gICAgICBpZiAoZXhwbG9kZSkge1xuICAgICAgICBibG9jay5tZXNoLnZpc2libGUgPSB0cnVlO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyDorqHnrpfnm67moIfkvY3nva7lkozml4vovaxcbiAgICAgIGNvbnN0IHRhcmdldFBvc2l0aW9uID0gZXhwbG9kZSBcbiAgICAgICAgPyB0aGlzLmNhbGN1bGF0ZUV4cGxvZGVkUG9zaXRpb24oYmxvY2spIFxuICAgICAgICA6IGJsb2NrLm9yaWdpbmFsUG9zaXRpb247XG4gICAgICBjb25zdCB0YXJnZXRSb3RhdGlvbiA9IGJsb2NrLm9yaWdpbmFsUm90YXRpb247XG4gICAgICBcbiAgICAgIC8vIOe7n+S4gOW7tui/n+aXtumXtO+8muWIhuino+S9v+eUqDEwMG1z6Ze06ZqUXG4gICAgICBjb25zdCBkZWxheSA9IGV4cGxvZGUgPyBpbmRleCAqIDEwMCA6ICh0aGlzLmJsb2Nrcy5sZW5ndGggLSBpbmRleCAtIDEpICogODA7XG4gICAgICBcbiAgICAgIC8vIOe7n+S4gOWKqOeUu+aMgee7reaXtumXtO+8muWQiOW5tuWKqOeUu+abtOW/q1xuICAgICAgY29uc3QgZHVyYXRpb24gPSBleHBsb2RlID8gdGhpcy5jb25maWcuYW5pbWF0aW9uRHVyYXRpb24gOiB0aGlzLmNvbmZpZy5hbmltYXRpb25EdXJhdGlvbiAqIDAuODtcbiAgICAgIFxuICAgICAgLy8g57uf5LiA57yT5Yqo5Ye95pWw77ya5YiG6Kej55SoQmFjay5PdXTvvIzlkIjlubbnlKhCYWNrLkluXG4gICAgICBjb25zdCBlYXNpbmcgPSBleHBsb2RlID8gVFdFRU4uRWFzaW5nLkJhY2suT3V0IDogVFdFRU4uRWFzaW5nLkJhY2suSW47XG4gICAgICBcbiAgICAgIC8vIOWIm+W7uuS9jee9ruWKqOeUu1xuICAgICAgY29uc3QgcG9zaXRpb25Ud2VlbiA9IG5ldyBUV0VFTi5Ud2VlbihibG9jay5tZXNoLnBvc2l0aW9uLCB0d2Vlbkdyb3VwKVxuICAgICAgICAudG8oe1xuICAgICAgICAgIHg6IHRhcmdldFBvc2l0aW9uLngsXG4gICAgICAgICAgeTogdGFyZ2V0UG9zaXRpb24ueSxcbiAgICAgICAgICB6OiB0YXJnZXRQb3NpdGlvbi56XG4gICAgICAgIH0sIGR1cmF0aW9uKVxuICAgICAgICAuZGVsYXkoZGVsYXkpXG4gICAgICAgIC5lYXNpbmcoZWFzaW5nKVxuICAgICAgICAub25Db21wbGV0ZSgoKSA9PiB7XG4gICAgICAgICAgaWYgKCFleHBsb2RlKSB7XG4gICAgICAgICAgICBjb21wbGV0ZWRBbmltYXRpb25zKys7XG4gICAgICAgICAgICAvLyDnu4Too4XlrozmiJDlkI7nmoTlpITnkIZcbiAgICAgICAgICAgIGlmIChjb21wbGV0ZWRBbmltYXRpb25zID09PSB0b3RhbEFuaW1hdGlvbnMpIHtcbiAgICAgICAgICAgICAgdGhpcy5ibG9ja3MuZm9yRWFjaChiID0+IGIubWVzaC52aXNpYmxlID0gZmFsc2UpO1xuICAgICAgICAgICAgICB0aGlzLm9yaWdpbmFsTWVzaC52aXNpYmxlID0gdGhpcy5vcmlnaW5hbFZpc2libGU7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfotoXmpK3lnIbnu4Too4XlrozmiJDvvIzmmL7npLrljp/lp4vnvZHmoLwnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5zdGFydCgpO1xuICAgICAgXG4gICAgICAvLyDliJvlu7rml4vovazliqjnlLtcbiAgICAgIGNvbnN0IHJvdGF0aW9uVHdlZW4gPSBuZXcgVFdFRU4uVHdlZW4oYmxvY2subWVzaC5yb3RhdGlvbiwgdHdlZW5Hcm91cClcbiAgICAgICAgLnRvKHtcbiAgICAgICAgICB4OiB0YXJnZXRSb3RhdGlvbi54LFxuICAgICAgICAgIHk6IHRhcmdldFJvdGF0aW9uLnksXG4gICAgICAgICAgejogdGFyZ2V0Um90YXRpb24uelxuICAgICAgICB9LCBkdXJhdGlvbilcbiAgICAgICAgLmRlbGF5KGRlbGF5KVxuICAgICAgICAuZWFzaW5nKGVhc2luZylcbiAgICAgICAgLnN0YXJ0KCk7XG4gICAgICBcbiAgICAgIHRoaXMudHdlZW5zLnB1c2gocG9zaXRpb25Ud2Vlbiwgcm90YXRpb25Ud2Vlbik7XG4gICAgfSk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDmuIXnkIbotYTmupBcbiAgICovXG4gIGRpc3Bvc2UoKSB7XG4gICAgLy8g5YGc5q2i5omA5pyJ5Yqo55S7XG4gICAgdGhpcy50d2VlbnMuZm9yRWFjaCh0d2VlbiA9PiB0d2Vlbi5zdG9wKCkpO1xuICAgIHRoaXMudHdlZW5zID0gW107XG4gICAgXG4gICAgLy8g56e76Zmk56ev5pyo5Z2XXG4gICAgdGhpcy5ibG9ja3MuZm9yRWFjaChibG9jayA9PiB7XG4gICAgICB0aGlzLnBhcmVudEdyb3VwLnJlbW92ZShibG9jay5tZXNoKTtcbiAgICAgIGJsb2NrLm1lc2guZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgLy8g5p2Q6LSo5Y+v6IO95piv5YWx5Lqr55qE77yM5LiN55u05o6lZGlzcG9zZVxuICAgICAgaWYgKGJsb2NrLm1lc2gubWF0ZXJpYWwgIT09IHRoaXMub3JpZ2luYWxNZXNoLm1hdGVyaWFsKSB7XG4gICAgICAgIGJsb2NrLm1lc2gubWF0ZXJpYWwuZGlzcG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuYmxvY2tzID0gW107XG4gIH1cbiAgXG4gIC8qKlxuICAgKiDojrflj5bniIbngrjnirbmgIFcbiAgICovXG4gIGlzRXhwbG9kZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwbG9kZWQ7XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB7IENPTkZJRyB9IGZyb20gJy4uL2NvbmZpZ0xvYWRlcic7XG5pbXBvcnQgeyBDeWxpbmRlckNvbm5lY3Rpb24gfSBmcm9tICcuL0N5bGluZGVyQ29ubmVjdGlvbi5qcyc7XG5pbXBvcnQgeyBTdXBlcmVsbGlwc2VUcmFuc2l0aW9uIH0gZnJvbSAnLi9TdXBlcmVsbGlwc2VUcmFuc2l0aW9uLmpzJztcbmltcG9ydCB7IEN5bGluZGVyMkV4cGxvZGVFZmZlY3QgfSBmcm9tICcuL0N5bGluZGVyMkV4cGxvZGVFZmZlY3QuanMnO1xuaW1wb3J0IHsgUm90YXRpb25DdXJ2ZUV4cGxvZGVFZmZlY3QgfSBmcm9tICcuL1JvdGF0aW9uQ3VydmVFeHBsb2RlRWZmZWN0LmpzJztcbmltcG9ydCB7IFN1cGVyZWxsaXBzZUV4cGxvZGVFZmZlY3QgfSBmcm9tICcuL1N1cGVyZWxsaXBzZUV4cGxvZGVFZmZlY3QuanMnO1xuaW1wb3J0IHsgdW5pZmllZENvbXBvbmVudE1hdGVyaWFsIH0gZnJvbSAnLi4vbWF0ZXJpYWxzL1VuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5qcyc7XG5cbi8qKlxuICogQ1JU5q2j5pa55b2i6YCP5piO5aSW5aOz57uE5Lu2XG4gKiDnlKjkuo7ljIXoo7nmlbTkuKpDUlTmqKHlnovnmoTpgI/mmI7kv53miqTlo7NcbiAqL1xuZXhwb3J0IGNsYXNzIENSVFNoZWxsIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5zaGVsbEdyb3VwID0gbmV3IFRIUkVFLkdyb3VwKCk7XG4gICAgdGhpcy5zaGVsbEdyb3VwLm5hbWUgPSAnQ1JUU2hlbGwnO1xuICAgIFxuICAgIC8vIOWIm+W7uuS4pOS4quWchuafseS9k+eahOadkOi0qFxuICAgIHRoaXMuY3lsaW5kZXIxTWF0ZXJpYWwgPSBudWxsO1xuICAgIHRoaXMuY3lsaW5kZXIyTWF0ZXJpYWwgPSBudWxsO1xuICAgIFxuICAgIC8vIOaXi+i9rOabsue6v+i/nuaOpVxuICAgIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uID0gbnVsbDtcbiAgICBcbiAgICAvLyDotoXmpK3lnIblvaLnirbmuJDlj5hcbiAgICB0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24gPSBudWxsO1xuICAgIFxuICAgIC8vIGN5bGluZGVyMueIhueCuOaViOaenFxuICAgIHRoaXMuY3lsaW5kZXIyRXhwbG9kZUVmZmVjdCA9IG51bGw7XG4gICAgXG4gICAgLy8g5peL6L2s5puy57q/6L+e5o6l54iG54K45pWI5p6cXG4gICAgdGhpcy5yb3RhdGlvbkN1cnZlRXhwbG9kZUVmZmVjdCA9IG51bGw7XG4gICAgXG4gICAgLy8g6LaF5qSt5ZyG5b2i54q25riQ5Y+Y54iG54K45pWI5p6cXG4gICAgdGhpcy5zdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0ID0gbnVsbDtcbiAgICBcbiAgICB0aGlzLmNyZWF0ZVNoZWxsKCk7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu65q2j5pa55b2i6YCP5piO5aSW5aOz77yI5Yig6Zmk6Z2g6L+R6I2n5YWJ5bGP55qE5Y+z5L6n6Z2i77yJXG4gICAqL1xuICBjcmVhdGVTaGVsbCgpIHtcbiAgICAvLyDnq4vmlrnkvZPlpJblo7PmnZDotKjlt7LliKDpmaTvvIzkuI3lho3pnIDopoFcbiAgICAvLyB0aGlzLnNoZWxsTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoe1xuICAgIC8vICAgdHJhbnNwYXJlbnQ6IHRydWUsXG4gICAgLy8gICBvcGFjaXR5OiBDT05GSUcuc2hlbGwub3BhY2l0eSxcbiAgICAvLyAgIHNpZGU6IFRIUkVFLkRvdWJsZVNpZGUsXG4gICAgLy8gICBkZXB0aFdyaXRlOiBmYWxzZVxuICAgIC8vIH0pO1xuXG4gICAgLy8g56uL5pa55L2T5aSW5aOz5bey6KKr5Yig6ZmkIC0g5Y+q5L+d55WZ5ZyG5p+x5L2T5ZKM6L+H5rih5pWI5p6cXG4gICAgLy8gY29uc3Qgc2hlbGxHZW9tZXRyeSA9IHRoaXMuY3JlYXRlT3BlbkJveEdlb21ldHJ5KFxuICAgIC8vICAgQ09ORklHLnNoZWxsLnNpemUud2lkdGgsXG4gICAgLy8gICBDT05GSUcuc2hlbGwuc2l6ZS5oZWlnaHQsXG4gICAgLy8gICBDT05GSUcuc2hlbGwuc2l6ZS5kZXB0aFxuICAgIC8vICk7XG4gICAgLy8gY29uc3Qgc2hlbGwgPSBuZXcgVEhSRUUuTWVzaChzaGVsbEdlb21ldHJ5LCB0aGlzLnNoZWxsTWF0ZXJpYWwpO1xuICAgIC8vIFxuICAgIC8vIC8vIOiuvue9ruS9jee9ruWxheS4rVxuICAgIC8vIHNoZWxsLnBvc2l0aW9uLnNldCg0LjUsIDAsIDApOyAvLyDnqI3lvq7lkJHliY3lgY/np7vku6XlsYXkuK3ljIXoo7lDUlRcbiAgICAvLyBcbiAgICAvLyB0aGlzLnNoZWxsR3JvdXAuYWRkKHNoZWxsKTtcbiAgICBcbiAgICAvLyDliJvlu7rkuKTkuKrni6znq4vnmoTlnIbmn7HkvZNcbiAgICB0aGlzLmNyZWF0ZUN5bGluZGVyMSgpO1xuICAgIHRoaXMuY3JlYXRlQ3lsaW5kZXIyKCk7XG4gICAgXG4gICAgLy8g5Yib5bu65peL6L2s5puy57q/6L+e5o6lXG4gICAgdGhpcy5jcmVhdGVSb3RhdGlvbkN1cnZlQ29ubmVjdGlvbigpO1xuICAgIFxuICAgIC8vIOWIm+W7uui2heakreWchuW9oueKtua4kOWPmFxuICAgIHRoaXMuY3JlYXRlU3VwZXJlbGxpcHNlVHJhbnNpdGlvbigpO1xuICAgIFxuICAgIC8vIOiuvue9ruWIneWni+WPr+ingeaAp1xuICAgIHRoaXMuc2hlbGxHcm91cC52aXNpYmxlID0gQ09ORklHLnNoZWxsLnZpc2libGU7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu65byA5pS+5byP55uS5a2Q5Yeg5L2V5L2T77yI5Y675o6J5Y+z5L6n6Z2i77yM5Y2zWOato+aWueWQkeeahOmdou+8iVxuICAgKiBAcGFyYW0ge251bWJlcn0gd2lkdGggLSDlrr3luqZcbiAgICogQHBhcmFtIHtudW1iZXJ9IGhlaWdodCAtIOmrmOW6piBcbiAgICogQHBhcmFtIHtudW1iZXJ9IGRlcHRoIC0g5rex5bqmXG4gICAqIEByZXR1cm5zIHtUSFJFRS5CdWZmZXJHZW9tZXRyeX0g5Yeg5L2V5L2TXG4gICAqL1xuICBjcmVhdGVPcGVuQm94R2VvbWV0cnkod2lkdGgsIGhlaWdodCwgZGVwdGgpIHtcbiAgICBjb25zdCBnZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xuICAgIFxuICAgIGNvbnN0IHcgPSB3aWR0aCAvIDI7XG4gICAgY29uc3QgaCA9IGhlaWdodCAvIDI7XG4gICAgY29uc3QgZCA9IGRlcHRoIC8gMjtcbiAgICBcbiAgICAvLyDlrprkuYnpobbngrnkvY3nva4gLSDnq4vmlrnkvZPnmoQ45Liq6aG254K5XG4gICAgY29uc3QgdmVydGljZXMgPSBbXG4gICAgICAvLyDlt6bkvqfpnaIgKFggPSAtdylcbiAgICAgIC13LCAtaCwgLWQsICAtdywgLWgsICBkLCAgLXcsICBoLCAgZCxcbiAgICAgIC13LCAtaCwgLWQsICAtdywgIGgsICBkLCAgLXcsICBoLCAtZCxcbiAgICAgIFxuICAgICAgLy8g5Y+z5L6n6Z2i6KKr5Yig6ZmkIC0g5LiN5re75Yqg6L+Z5Liq6Z2iXG4gICAgICBcbiAgICAgIC8vIOmhtumdoiAoWSA9IGgpXG4gICAgICAtdywgIGgsIC1kLCAgLXcsICBoLCAgZCwgICB3LCAgaCwgIGQsXG4gICAgICAtdywgIGgsIC1kLCAgIHcsICBoLCAgZCwgICB3LCAgaCwgLWQsXG4gICAgICBcbiAgICAgIC8vIOW6lemdoiAoWSA9IC1oKVxuICAgICAgLXcsIC1oLCAtZCwgICB3LCAtaCwgLWQsICAgdywgLWgsICBkLFxuICAgICAgLXcsIC1oLCAtZCwgICB3LCAtaCwgIGQsICAtdywgLWgsICBkLFxuICAgICAgXG4gICAgICAvLyDliY3pnaIgKFogPSBkKVxuICAgICAgLXcsIC1oLCAgZCwgICB3LCAtaCwgIGQsICAgdywgIGgsICBkLFxuICAgICAgLXcsIC1oLCAgZCwgICB3LCAgaCwgIGQsICAtdywgIGgsICBkLFxuICAgICAgXG4gICAgICAvLyDlkI7pnaIgKFogPSAtZClcbiAgICAgIC13LCAtaCwgLWQsICAtdywgIGgsIC1kLCAgIHcsICBoLCAtZCxcbiAgICAgIC13LCAtaCwgLWQsICAgdywgIGgsIC1kLCAgIHcsIC1oLCAtZFxuICAgIF07XG4gICAgXG4gICAgLy8g5a6a5LmJ5rOV5ZCR6YePXG4gICAgY29uc3Qgbm9ybWFscyA9IFtcbiAgICAgIC8vIOW3puS+p+mdolxuICAgICAgLTEsIDAsIDAsICAtMSwgMCwgMCwgIC0xLCAwLCAwLFxuICAgICAgLTEsIDAsIDAsICAtMSwgMCwgMCwgIC0xLCAwLCAwLFxuICAgICAgXG4gICAgICAvLyDpobbpnaJcbiAgICAgIDAsIDEsIDAsICAwLCAxLCAwLCAgMCwgMSwgMCxcbiAgICAgIDAsIDEsIDAsICAwLCAxLCAwLCAgMCwgMSwgMCxcbiAgICAgIFxuICAgICAgLy8g5bqV6Z2iXG4gICAgICAwLCAtMSwgMCwgIDAsIC0xLCAwLCAgMCwgLTEsIDAsXG4gICAgICAwLCAtMSwgMCwgIDAsIC0xLCAwLCAgMCwgLTEsIDAsXG4gICAgICBcbiAgICAgIC8vIOWJjemdolxuICAgICAgMCwgMCwgMSwgIDAsIDAsIDEsICAwLCAwLCAxLFxuICAgICAgMCwgMCwgMSwgIDAsIDAsIDEsICAwLCAwLCAxLFxuICAgICAgXG4gICAgICAvLyDlkI7pnaJcbiAgICAgIDAsIDAsIC0xLCAgMCwgMCwgLTEsICAwLCAwLCAtMSxcbiAgICAgIDAsIDAsIC0xLCAgMCwgMCwgLTEsICAwLCAwLCAtMVxuICAgIF07XG4gICAgXG4gICAgLy8g5a6a5LmJVVblnZDmoIdcbiAgICBjb25zdCB1dnMgPSBbXG4gICAgICAvLyDlt6bkvqfpnaJcbiAgICAgIDAsIDAsICAxLCAwLCAgMSwgMSxcbiAgICAgIDAsIDAsICAxLCAxLCAgMCwgMSxcbiAgICAgIFxuICAgICAgLy8g6aG26Z2iXG4gICAgICAwLCAwLCAgMSwgMCwgIDEsIDEsXG4gICAgICAwLCAwLCAgMSwgMSwgIDAsIDEsXG4gICAgICBcbiAgICAgIC8vIOW6lemdolxuICAgICAgMCwgMCwgIDEsIDAsICAxLCAxLFxuICAgICAgMCwgMCwgIDEsIDEsICAwLCAxLFxuICAgICAgXG4gICAgICAvLyDliY3pnaJcbiAgICAgIDAsIDAsICAxLCAwLCAgMSwgMSxcbiAgICAgIDAsIDAsICAxLCAxLCAgMCwgMSxcbiAgICAgIFxuICAgICAgLy8g5ZCO6Z2iXG4gICAgICAwLCAwLCAgMSwgMCwgIDEsIDEsXG4gICAgICAwLCAwLCAgMSwgMSwgIDAsIDFcbiAgICBdO1xuICAgIFxuICAgIGdlb21ldHJ5LnNldEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSh2ZXJ0aWNlcywgMykpO1xuICAgIGdlb21ldHJ5LnNldEF0dHJpYnV0ZSgnbm9ybWFsJywgbmV3IFRIUkVFLkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUobm9ybWFscywgMykpO1xuICAgIGdlb21ldHJ5LnNldEF0dHJpYnV0ZSgndXYnLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSh1dnMsIDIpKTtcbiAgICBcbiAgICByZXR1cm4gZ2VvbWV0cnk7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu65byA5pS+5byP5ZyG5p+x5L2T5Yeg5L2V5L2T77yI5rK/WOi9tOaWueWQke+8jOWOu+aOieWPs+err+WchuW9oumdou+8iVxuICAgKiBAcGFyYW0ge251bWJlcn0gcmFkaXVzIC0g5ZyG5p+x5L2T5Y2K5b6EXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBoZWlnaHQgLSDlnIbmn7HkvZPplb/luqbvvIjmsr9Y6L2077yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByYWRpYWxTZWdtZW50cyAtIOW+hOWQkeWIhuauteaVsFxuICAgKiBAcmV0dXJucyB7VEhSRUUuQnVmZmVyR2VvbWV0cnl9IOWHoOS9leS9k1xuICAgKi9cbiAgY3JlYXRlT3BlbkN5bGluZGVyR2VvbWV0cnkocmFkaXVzLCBoZWlnaHQsIHJhZGlhbFNlZ21lbnRzID0gMzIpIHtcbiAgICAvLyDkvb/nlKhUaHJlZS5qc+agh+WHhuWchuafseS9k+WHoOS9leS9k+S9nOS4uuWfuuehgO+8jOehruS/neazleWQkemHj+WSjOWFieeFp+iuoeeul+ato+ehrlxuICAgIC8vIOazqOaEj++8mm9wZW5FbmRlZOiuvuS4umZhbHNl77yM6L+Z5qC35Lik56uv6YO95pyJ5bCB6Zet6Z2i77yM54S25ZCO5oiR5Lus5omL5Yqo56e76Zmk5Y+z56uv6Z2iXG4gICAgY29uc3QgYmFzZUdlb21ldHJ5ID0gbmV3IFRIUkVFLkN5bGluZGVyR2VvbWV0cnkocmFkaXVzLCByYWRpdXMsIGhlaWdodCwgcmFkaWFsU2VnbWVudHMsIDEsIGZhbHNlKTtcbiAgICBcbiAgICAvLyDml4vovaw5MOW6puS9v+WchuafseS9k+ayv1jovbTmlrnlkJFcbiAgICBiYXNlR2VvbWV0cnkucm90YXRlWihNYXRoLlBJIC8gMik7XG4gICAgXG4gICAgLy8g6I635Y+W5Yeg5L2V5L2T5bGe5oCnXG4gICAgY29uc3QgcG9zaXRpb25zID0gYmFzZUdlb21ldHJ5LmdldEF0dHJpYnV0ZSgncG9zaXRpb24nKTtcbiAgICBjb25zdCBub3JtYWxzID0gYmFzZUdlb21ldHJ5LmdldEF0dHJpYnV0ZSgnbm9ybWFsJyk7XG4gICAgY29uc3QgdXZzID0gYmFzZUdlb21ldHJ5LmdldEF0dHJpYnV0ZSgndXYnKTtcbiAgICBjb25zdCBpbmRpY2VzID0gYmFzZUdlb21ldHJ5LmdldEluZGV4KCk7XG4gICAgXG4gICAgLy8g5Yib5bu65paw55qE5Yeg5L2V5L2T77yM5Y+q5L+d55WZ5L6n6Z2i5ZKM5bem56uv6Z2iXG4gICAgY29uc3QgbmV3R2VvbWV0cnkgPSBuZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnkoKTtcbiAgICBcbiAgICAvLyDlpI3liLbkvqfpnaLpobbngrnvvIhUaHJlZS5qc+WchuafseS9k+eahOS+p+mdouW3sue7j+acieato+ehrueahOazleWQkemHj++8iVxuICAgIGNvbnN0IG5ld1Bvc2l0aW9ucyA9IFtdO1xuICAgIGNvbnN0IG5ld05vcm1hbHMgPSBbXTtcbiAgICBjb25zdCBuZXdVdnMgPSBbXTtcbiAgICBjb25zdCBuZXdJbmRpY2VzID0gW107XG4gICAgXG4gICAgY29uc3QgcG9zQXJyYXkgPSBwb3NpdGlvbnMuYXJyYXk7XG4gICAgY29uc3Qgbm9ybUFycmF5ID0gbm9ybWFscy5hcnJheTtcbiAgICBjb25zdCB1dkFycmF5ID0gdXZzLmFycmF5O1xuICAgIGNvbnN0IGluZGV4QXJyYXkgPSBpbmRpY2VzLmFycmF5O1xuICAgIFxuICAgIC8vIOWkjeWItuaJgOaciemhtueCueWSjOazleWQkemHj++8iFRocmVlLmpz5bey57uP6K6h566X5aW95LqG77yJXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb3NBcnJheS5sZW5ndGg7IGkgKz0gMykge1xuICAgICAgbmV3UG9zaXRpb25zLnB1c2gocG9zQXJyYXlbaV0sIHBvc0FycmF5W2kgKyAxXSwgcG9zQXJyYXlbaSArIDJdKTtcbiAgICAgIG5ld05vcm1hbHMucHVzaChub3JtQXJyYXlbaV0sIG5vcm1BcnJheVtpICsgMV0sIG5vcm1BcnJheVtpICsgMl0pO1xuICAgIH1cbiAgICBcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHV2QXJyYXkubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgIG5ld1V2cy5wdXNoKHV2QXJyYXlbaV0sIHV2QXJyYXlbaSArIDFdKTtcbiAgICB9XG4gICAgXG4gICAgLy8g6L+H5ruk57Si5byV77yM5Y+q5L+d55WZ5L6n6Z2i5ZKM5bem56uv6Z2i77yM5Y675o6J5Y+z56uv6Z2iXG4gICAgY29uc3QgaGFsZkhlaWdodCA9IGhlaWdodCAvIDI7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbmRleEFycmF5Lmxlbmd0aDsgaSArPSAzKSB7XG4gICAgICBjb25zdCBpMSA9IGluZGV4QXJyYXlbaV0gKiAzO1xuICAgICAgY29uc3QgaTIgPSBpbmRleEFycmF5W2kgKyAxXSAqIDM7XG4gICAgICBjb25zdCBpMyA9IGluZGV4QXJyYXlbaSArIDJdICogMztcbiAgICAgIFxuICAgICAgLy8g5qOA5p+l5LiJ6KeS5b2i5piv5ZCm5Zyo5Y+z56uv6Z2i77yIWCA+IGhhbGZIZWlnaHQgLSAwLjAx77yJXG4gICAgICBjb25zdCB4MSA9IHBvc0FycmF5W2kxXTtcbiAgICAgIGNvbnN0IHgyID0gcG9zQXJyYXlbaTJdO1xuICAgICAgY29uc3QgeDMgPSBwb3NBcnJheVtpM107XG4gICAgICBcbiAgICAgIC8vIOWmguaenOS4ieinkuW9ouS4jeWcqOWPs+err+mdou+8jOWImeS/neeVmVxuICAgICAgaWYgKCEoeDEgPiBoYWxmSGVpZ2h0IC0gMC4wMSAmJiB4MiA+IGhhbGZIZWlnaHQgLSAwLjAxICYmIHgzID4gaGFsZkhlaWdodCAtIDAuMDEpKSB7XG4gICAgICAgIG5ld0luZGljZXMucHVzaChpbmRleEFycmF5W2ldLCBpbmRleEFycmF5W2kgKyAxXSwgaW5kZXhBcnJheVtpICsgMl0pO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyDorr7nva7lh6DkvZXkvZPlsZ7mgKdcbiAgICBuZXdHZW9tZXRyeS5zZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgbmV3IFRIUkVFLkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUobmV3UG9zaXRpb25zLCAzKSk7XG4gICAgbmV3R2VvbWV0cnkuc2V0QXR0cmlidXRlKCdub3JtYWwnLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZShuZXdOb3JtYWxzLCAzKSk7XG4gICAgbmV3R2VvbWV0cnkuc2V0QXR0cmlidXRlKCd1dicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKG5ld1V2cywgMikpO1xuICAgIG5ld0dlb21ldHJ5LnNldEluZGV4KG5ld0luZGljZXMpO1xuICAgIFxuICAgIC8vIOmHjeaWsOiuoeeul+azleWQkemHj+S7peehruS/neWFieeFp+ato+ehrlxuICAgIG5ld0dlb21ldHJ5LmNvbXB1dGVWZXJ0ZXhOb3JtYWxzKCk7XG4gICAgXG4gICAgcmV0dXJuIG5ld0dlb21ldHJ5O1xuICB9XG5cbiAgLyoqXG4gICAqIOWIm+W7uuesrOS4gOS4quWchuafseS9k+e7hOS7tlxuICAgKi9cbiAgY3JlYXRlQ3lsaW5kZXIxKCkge1xuICAgIGNvbnN0IGNvbmZpZyA9IENPTkZJRy5zaGVsbC5jeWxpbmRlcjE7XG4gICAgXG4gICAgLy8g5L2/55So57uf5LiA57uE5Lu25p2Q6LSo566h55CG5Zmo6I635Y+W5qCH5YeG5p2Q6LSo77yM56Gu5L+d6aKc6Imy5LiA6Ie05oCnXG4gICAgdGhpcy5jeWxpbmRlcjFNYXRlcmlhbCA9IHVuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5nZXRNYXRlcmlhbCgnc3RhbmRhcmQnKTtcbiAgICBcbiAgICAvLyDliJvlu7rlnIbmn7HkvZPlh6DkvZXkvZPvvIjkvb/nlKjni6znq4vnmoTljYrlvoTlj4LmlbDvvIlcbiAgICBjb25zdCBjeWxpbmRlcjFHZW9tZXRyeSA9IG5ldyBUSFJFRS5DeWxpbmRlckdlb21ldHJ5KGNvbmZpZy5yYWRpdXMsIGNvbmZpZy5yYWRpdXMsIGNvbmZpZy5oZWlnaHQsIDMyKTtcbiAgICBjb25zdCBjeWxpbmRlcjEgPSBuZXcgVEhSRUUuTWVzaChjeWxpbmRlcjFHZW9tZXRyeSwgdGhpcy5jeWxpbmRlcjFNYXRlcmlhbCk7XG4gICAgXG4gICAgLy8g6K6+572u5ZyG5p+x5L2T5L2N572u5ZKM5peL6L2sXG4gICAgY3lsaW5kZXIxLnBvc2l0aW9uLnNldChjb25maWcucG9zaXRpb24ueCwgY29uZmlnLnBvc2l0aW9uLnksIGNvbmZpZy5wb3NpdGlvbi56KTtcbiAgICBjeWxpbmRlcjEucm90YXRpb24uc2V0KGNvbmZpZy5yb3RhdGlvbi54LCBjb25maWcucm90YXRpb24ueSwgY29uZmlnLnJvdGF0aW9uLnopO1xuICAgIFxuICAgIC8vIOiuvue9ruWPr+ingeaAp1xuICAgIGN5bGluZGVyMS52aXNpYmxlID0gY29uZmlnLnZpc2libGU7XG4gICAgXG4gICAgLy8g5re75Yqg5Yiw57uE5LitXG4gICAgdGhpcy5zaGVsbEdyb3VwLmFkZChjeWxpbmRlcjEpO1xuICAgIFxuICAgIC8vIOS/neWtmOWchuafseS9k+W8leeUqOS7peS+v+WQjue7reaTjeS9nFxuICAgIHRoaXMuY3lsaW5kZXIxID0gY3lsaW5kZXIxO1xuICB9XG5cbiAgLyoqXG4gICAqIOWIm+W7uuesrOS6jOS4quWchuafseS9k+e7hOS7tu+8iOWOu+aOieWPs+S+p+WchuW9oumdou+8iVxuICAgKi9cbiAgY3JlYXRlQ3lsaW5kZXIyKCkge1xuICAgIGNvbnN0IGNvbmZpZyA9IENPTkZJRy5zaGVsbC5jeWxpbmRlcjI7XG4gICAgXG4gICAgLy8g5L2/55So57uf5LiA57uE5Lu25p2Q6LSo566h55CG5Zmo6I635Y+W5qCH5YeG5p2Q6LSo77yM56Gu5L+d6aKc6Imy5LiA6Ie05oCnXG4gICAgdGhpcy5jeWxpbmRlcjJNYXRlcmlhbCA9IHVuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5nZXRNYXRlcmlhbCgnc3RhbmRhcmQnKTtcbiAgICBcbiAgICAvLyDliJvlu7rlvIDmlL7lvI/lnIbmn7HkvZPlh6DkvZXkvZPvvIjljrvmjonlj7PkvqflnIblvaLpnaLvvIlcbiAgICBjb25zdCBjeWxpbmRlcjJHZW9tZXRyeSA9IHRoaXMuY3JlYXRlT3BlbkN5bGluZGVyR2VvbWV0cnkoY29uZmlnLnJhZGl1cywgY29uZmlnLmhlaWdodCwgMzIpO1xuICAgIGNvbnN0IGN5bGluZGVyMiA9IG5ldyBUSFJFRS5NZXNoKGN5bGluZGVyMkdlb21ldHJ5LCB0aGlzLmN5bGluZGVyMk1hdGVyaWFsKTtcbiAgICBcbiAgICAvLyDorr7nva7lnIbmn7HkvZPkvY3nva7lkozml4vovaxcbiAgICBjeWxpbmRlcjIucG9zaXRpb24uc2V0KGNvbmZpZy5wb3NpdGlvbi54LCBjb25maWcucG9zaXRpb24ueSwgY29uZmlnLnBvc2l0aW9uLnopO1xuICAgIGN5bGluZGVyMi5yb3RhdGlvbi5zZXQoY29uZmlnLnJvdGF0aW9uLngsIGNvbmZpZy5yb3RhdGlvbi55LCBjb25maWcucm90YXRpb24ueik7XG4gICAgXG4gICAgLy8g6K6+572u5Y+v6KeB5oCnXG4gICAgY3lsaW5kZXIyLnZpc2libGUgPSBjb25maWcudmlzaWJsZTtcbiAgICBcbiAgICAvLyDmt7vliqDliLDnu4TkuK1cbiAgICB0aGlzLnNoZWxsR3JvdXAuYWRkKGN5bGluZGVyMik7XG4gICAgXG4gICAgLy8g5L+d5a2Y5ZyG5p+x5L2T5byV55So5Lul5L6/5ZCO57ut5pON5L2cXG4gICAgdGhpcy5jeWxpbmRlcjIgPSBjeWxpbmRlcjI7XG4gICAgXG4gICAgLy8g5Yib5bu6Y3lsaW5kZXIy55qE54iG54K45pWI5p6cXG4gICAgdGhpcy5jcmVhdGVDeWxpbmRlcjJFeHBsb2RlRWZmZWN0KCk7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu65peL6L2s5puy57q/6L+e5o6lXG4gICAqL1xuICBjcmVhdGVSb3RhdGlvbkN1cnZlQ29ubmVjdGlvbigpIHtcbiAgICBjb25zdCBjb25maWcgPSBDT05GSUcuc2hlbGwucm90YXRpb25DdXJ2ZUNvbm5lY3Rpb247XG4gICAgXG4gICAgaWYgKCFjb25maWcgfHwgIWNvbmZpZy52aXNpYmxlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIFxuICAgIC8vIOWIm+W7uuWchuafseS9k+i/nuaOpVxuICAgIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uID0gbmV3IEN5bGluZGVyQ29ubmVjdGlvbihcbiAgICAgIENPTkZJRy5zaGVsbC5jeWxpbmRlcjEsXG4gICAgICBDT05GSUcuc2hlbGwuY3lsaW5kZXIyLFxuICAgICAgY29uZmlnXG4gICAgKTtcbiAgICBcbiAgICAvLyDmt7vliqDliLDnu4TkuK1cbiAgICB0aGlzLnNoZWxsR3JvdXAuYWRkKHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uLmdldENvbm5lY3Rpb24oKSk7XG4gICAgXG4gICAgLy8g5Yib5bu65peL6L2s5puy57q/6L+e5o6l54iG54K45pWI5p6cXG4gICAgdGhpcy5jcmVhdGVDb25uZWN0aW9uRXhwbG9kZUVmZmVjdCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIOWIm+W7uui2heakreWchuW9oueKtua4kOWPmFxuICAgKi9cbiAgY3JlYXRlU3VwZXJlbGxpcHNlVHJhbnNpdGlvbigpIHtcbiAgICBjb25zdCBjb25maWcgPSBDT05GSUcuc2hlbGwuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbjtcbiAgICBcbiAgICBpZiAoIWNvbmZpZyB8fCAhY29uZmlnLnZpc2libGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgXG4gICAgLy8g5YeG5aSH6LW35aeL6YWN572u77yI56ys5LiA5Liq5ZyG5p+x5L2T77yJXG4gICAgY29uc3Qgc3RhcnRDb25maWcgPSB7XG4gICAgICBwb3NpdGlvbjogQ09ORklHLnNoZWxsLmN5bGluZGVyMS5wb3NpdGlvbixcbiAgICAgIHJhZGl1czogQ09ORklHLnNoZWxsLmN5bGluZGVyMS5yYWRpdXNcbiAgICB9O1xuICAgIFxuICAgIC8vIOWHhuWkh+e7k+adn+mFjee9ru+8iOmAgumFjeiNp+WFieWxj+WwuuWvuO+8iVxuICAgIGNvbnN0IGVuZENvbmZpZyA9IHtcbiAgICAgIHBvc2l0aW9uOiB7IHg6IDQuNSwgeTogMCwgejogMCB9LCAvLyDnq4vmlrnkvZPkuK3lv4PkvY3nva5cbiAgICAgIHNpemU6IHtcbiAgICAgICAgd2lkdGg6IENPTkZJRy5jb21wb25lbnRzLnNjcmVlbi53aWR0aCwgICAvLyDojaflhYnlsY/lrr3luqbvvJo0XG4gICAgICAgIGhlaWdodDogQ09ORklHLmNvbXBvbmVudHMuc2NyZWVuLmhlaWdodCwgLy8g6I2n5YWJ5bGP6auY5bqm77yaM1xuICAgICAgICBkZXB0aDogQ09ORklHLnNoZWxsLnNpemUuZGVwdGggICAgICAgICAgIC8vIOS/neaMgeWOn+a3seW6pu+8mjRcbiAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIC8vIOWIm+W7uuW9oueKtua4kOWPmFxuICAgIHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbiA9IG5ldyBTdXBlcmVsbGlwc2VUcmFuc2l0aW9uKFxuICAgICAgc3RhcnRDb25maWcsXG4gICAgICBlbmRDb25maWcsXG4gICAgICBjb25maWdcbiAgICApO1xuICAgIFxuICAgIC8vIOa3u+WKoOWIsOe7hOS4rVxuICAgIHRoaXMuc2hlbGxHcm91cC5hZGQodGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uLmdldFRyYW5zaXRpb24oKSk7XG4gICAgXG4gICAgLy8g5Yib5bu66LaF5qSt5ZyG5b2i54q25riQ5Y+Y54iG54K45pWI5p6cXG4gICAgdGhpcy5jcmVhdGVTdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0KCk7XG4gIH1cblxuICAvKipcbiAgICog5Yib5bu65peL6L2s5puy57q/6L+e5o6l54iG54K45pWI5p6cXG4gICAqL1xuICBjcmVhdGVDb25uZWN0aW9uRXhwbG9kZUVmZmVjdCgpIHtcbiAgICBpZiAoIXRoaXMuY3lsaW5kZXJDb25uZWN0aW9uKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0N5bGluZGVyQ29ubmVjdGlvbiBub3QgZm91bmQsIGNhbm5vdCBjcmVhdGUgZXhwbG9kZSBlZmZlY3QnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgLy8g5riF55CG5pen55qE54iG54K45pWI5p6c5a6e5L6LXG4gICAgaWYgKHRoaXMucm90YXRpb25DdXJ2ZUV4cGxvZGVFZmZlY3QpIHtcbiAgICAgIHRoaXMucm90YXRpb25DdXJ2ZUV4cGxvZGVFZmZlY3QuZGlzcG9zZSgpO1xuICAgICAgdGhpcy5yb3RhdGlvbkN1cnZlRXhwbG9kZUVmZmVjdCA9IG51bGw7XG4gICAgfVxuICAgIFxuICAgIC8vIOiOt+WPlui/nuaOpee9keagvO+8iOesrOS4gOS4qui/nuaOpee9keagvO+8iVxuICAgIGNvbnN0IGNvbm5lY3Rpb25NZXNoZXMgPSB0aGlzLmN5bGluZGVyQ29ubmVjdGlvbi5jb25uZWN0aW9uTWVzaGVzO1xuICAgIGlmICghY29ubmVjdGlvbk1lc2hlcyB8fCBjb25uZWN0aW9uTWVzaGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc29sZS53YXJuKCdObyBjb25uZWN0aW9uIG1lc2hlcyBmb3VuZCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyDliJvlu7rniIbngrjmlYjmnpzlrp7kvotcbiAgICB0aGlzLnJvdGF0aW9uQ3VydmVFeHBsb2RlRWZmZWN0ID0gbmV3IFJvdGF0aW9uQ3VydmVFeHBsb2RlRWZmZWN0KFxuICAgICAgY29ubmVjdGlvbk1lc2hlc1swXSwgLy8g5L2/55So56ys5LiA5Liq6L+e5o6l572R5qC8XG4gICAgICB0aGlzLnNoZWxsR3JvdXBcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIOWIm+W7umN5bGluZGVyMueIhueCuOaViOaenFxuICAgKi9cbiAgY3JlYXRlQ3lsaW5kZXIyRXhwbG9kZUVmZmVjdCgpIHtcbiAgICBpZiAoIXRoaXMuY3lsaW5kZXIyKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0N5bGluZGVyMiBub3QgZm91bmQsIGNhbm5vdCBjcmVhdGUgZXhwbG9kZSBlZmZlY3QnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgLy8g5riF55CG5pen55qE54iG54K45pWI5p6c5a6e5L6LXG4gICAgaWYgKHRoaXMuY3lsaW5kZXIyRXhwbG9kZUVmZmVjdCkge1xuICAgICAgdGhpcy5jeWxpbmRlcjJFeHBsb2RlRWZmZWN0LmRpc3Bvc2UoKTtcbiAgICAgIHRoaXMuY3lsaW5kZXIyRXhwbG9kZUVmZmVjdCA9IG51bGw7XG4gICAgfVxuICAgIFxuICAgIC8vIOWIm+W7uueIhueCuOaViOaenOWunuS+i1xuICAgIHRoaXMuY3lsaW5kZXIyRXhwbG9kZUVmZmVjdCA9IG5ldyBDeWxpbmRlcjJFeHBsb2RlRWZmZWN0KFxuICAgICAgdGhpcy5jeWxpbmRlcjIsXG4gICAgICB0aGlzLnNoZWxsR3JvdXBcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIOWIm+W7uui2heakreWchuW9oueKtua4kOWPmOeIhueCuOaViOaenFxuICAgKi9cbiAgY3JlYXRlU3VwZXJlbGxpcHNlRXhwbG9kZUVmZmVjdCgpIHtcbiAgICBpZiAoIXRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbikge1xuICAgICAgY29uc29sZS53YXJuKCdTdXBlcmVsbGlwc2VUcmFuc2l0aW9uIG5vdCBmb3VuZCwgY2Fubm90IGNyZWF0ZSBleHBsb2RlIGVmZmVjdCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyDmuIXnkIbml6fnmoTniIbngrjmlYjmnpzlrp7kvotcbiAgICBpZiAodGhpcy5zdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0KSB7XG4gICAgICB0aGlzLnN1cGVyZWxsaXBzZUV4cGxvZGVFZmZlY3QuZGlzcG9zZSgpO1xuICAgICAgdGhpcy5zdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0ID0gbnVsbDtcbiAgICB9XG4gICAgXG4gICAgLy8g6I635Y+W6LaF5qSt5ZyG55qE572R5qC877yI56ys5LiA5Liq572R5qC877yJXG4gICAgY29uc3QgdHJhbnNpdGlvbk1lc2hlcyA9IHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbi5tZXNoZXM7XG4gICAgaWYgKCF0cmFuc2l0aW9uTWVzaGVzIHx8IHRyYW5zaXRpb25NZXNoZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ05vIHN1cGVyZWxsaXBzZSBtZXNoZXMgZm91bmQnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgLy8g5Yib5bu654iG54K45pWI5p6c5a6e5L6LXG4gICAgdGhpcy5zdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0ID0gbmV3IFN1cGVyZWxsaXBzZUV4cGxvZGVFZmZlY3QoXG4gICAgICB0cmFuc2l0aW9uTWVzaGVzWzBdLCAvLyDkvb/nlKjnrKzkuIDkuKrnvZHmoLxcbiAgICAgIHRoaXMuc2hlbGxHcm91cFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICog5YiH5o2iY3lsaW5kZXIy54iG54K45pWI5p6cXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZXhwbG9kZSAtIOaYr+WQpueIhueCuO+8jOm7mOiupOS4uuWIh+aNoueKtuaAgVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5b2T5YmN54iG54K454q25oCBXG4gICAqL1xuICB0b2dnbGVDeWxpbmRlcjJFeHBsb2RlKGV4cGxvZGUpIHtcbiAgICBpZiAoIXRoaXMuY3lsaW5kZXIyRXhwbG9kZUVmZmVjdCkge1xuICAgICAgY29uc29sZS53YXJuKCdDeWxpbmRlcjIgZXhwbG9kZSBlZmZlY3Qgbm90IGluaXRpYWxpemVkJyk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0aGlzLmN5bGluZGVyMkV4cGxvZGVFZmZlY3QudG9nZ2xlKGV4cGxvZGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPlmN5bGluZGVyMueIhueCuOeKtuaAgVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5aSE5LqO54iG54K454q25oCBXG4gICAqL1xuICBpc0N5bGluZGVyMkV4cGxvZGVkKCkge1xuICAgIHJldHVybiB0aGlzLmN5bGluZGVyMkV4cGxvZGVFZmZlY3QgPyB0aGlzLmN5bGluZGVyMkV4cGxvZGVFZmZlY3QuaXNFeHBsb2RlZCgpIDogZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICog5YiH5o2i5peL6L2s5puy57q/6L+e5o6l54iG54K45pWI5p6cXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZXhwbG9kZSAtIOaYr+WQpueIhueCuO+8jOm7mOiupOS4uuWIh+aNoueKtuaAgVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5b2T5YmN54iG54K454q25oCBXG4gICAqL1xuICB0b2dnbGVDb25uZWN0aW9uRXhwbG9kZShleHBsb2RlKSB7XG4gICAgaWYgKCF0aGlzLnJvdGF0aW9uQ3VydmVFeHBsb2RlRWZmZWN0KSB7XG4gICAgICBjb25zb2xlLndhcm4oJ1JvdGF0aW9uQ3VydmUgZXhwbG9kZSBlZmZlY3Qgbm90IGluaXRpYWxpemVkJyk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0aGlzLnJvdGF0aW9uQ3VydmVFeHBsb2RlRWZmZWN0LnRvZ2dsZShleHBsb2RlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5bml4vovazmm7Lnur/ov57mjqXniIbngrjnirbmgIFcbiAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWkhOS6jueIhueCuOeKtuaAgVxuICAgKi9cbiAgaXNDb25uZWN0aW9uRXhwbG9kZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMucm90YXRpb25DdXJ2ZUV4cGxvZGVFZmZlY3QgPyB0aGlzLnJvdGF0aW9uQ3VydmVFeHBsb2RlRWZmZWN0LmlzRXhwbG9kZWQoKSA6IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIOWIh+aNoui2heakreWchuW9oueKtua4kOWPmOeIhueCuOaViOaenFxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGV4cGxvZGUgLSDmmK/lkKbniIbngrjvvIzpu5jorqTkuLrliIfmjaLnirbmgIFcbiAgICogQHJldHVybnMge2Jvb2xlYW59IOW9k+WJjeeIhueCuOeKtuaAgVxuICAgKi9cbiAgdG9nZ2xlU3VwZXJlbGxpcHNlRXhwbG9kZShleHBsb2RlKSB7XG4gICAgaWYgKCF0aGlzLnN1cGVyZWxsaXBzZUV4cGxvZGVFZmZlY3QpIHtcbiAgICAgIGNvbnNvbGUud2FybignU3VwZXJlbGxpcHNlIGV4cGxvZGUgZWZmZWN0IG5vdCBpbml0aWFsaXplZCcpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gdGhpcy5zdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0LnRvZ2dsZShleHBsb2RlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5botoXmpK3lnIblvaLnirbmuJDlj5jniIbngrjnirbmgIFcbiAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWkhOS6jueIhueCuOeKtuaAgVxuICAgKi9cbiAgaXNTdXBlcmVsbGlwc2VFeHBsb2RlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0ID8gdGhpcy5zdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0LmlzRXhwbG9kZWQoKSA6IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluWkluWjs+e7hFxuICAgKi9cbiAgZ2V0U2hlbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2hlbGxHcm91cDtcbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7lpJblo7Plj6/op4HmgKdcbiAgICovXG4gIHNldFZpc2libGUodmlzaWJsZSkge1xuICAgIHRoaXMuc2hlbGxHcm91cC52aXNpYmxlID0gdmlzaWJsZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7lpJblo7PpgI/mmI7luqZcbiAgICovXG4gIHNldE9wYWNpdHkob3BhY2l0eSkge1xuICAgIC8vIOeri+aWueS9k+WkluWjs+W3suWIoOmZpO+8jOatpOaWueazleS4jeWGjeacieaViFxuICAgIC8vIHRoaXMuc2hlbGxNYXRlcmlhbC5vcGFjaXR5ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgb3BhY2l0eSkpO1xuICB9XG5cblxuICAvKipcbiAgICog6K6+572u5aSW5aOz5L2N572uXG4gICAqL1xuICBzZXRQb3NpdGlvbih4LCB5LCB6KSB7XG4gICAgdGhpcy5zaGVsbEdyb3VwLnBvc2l0aW9uLnNldCh4LCB5LCB6KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7nrKzkuIDkuKrlnIbmn7HkvZPkvY3nva5cbiAgICovXG4gIHNldEN5bGluZGVyMVBvc2l0aW9uKHgsIHksIHopIHtcbiAgICBpZiAodGhpcy5jeWxpbmRlcjEpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIxLnBvc2l0aW9uLnNldCh4LCB5LCB6KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6+572u56ys5LqM5Liq5ZyG5p+x5L2T5L2N572uXG4gICAqL1xuICBzZXRDeWxpbmRlcjJQb3NpdGlvbih4LCB5LCB6KSB7XG4gICAgaWYgKHRoaXMuY3lsaW5kZXIyKSB7XG4gICAgICB0aGlzLmN5bGluZGVyMi5wb3NpdGlvbi5zZXQoeCwgeSwgeik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluWkluWjs+W9k+WJjeS9jee9rlxuICAgKi9cbiAgZ2V0UG9zaXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuc2hlbGxHcm91cC5wb3NpdGlvbi5jbG9uZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIOabtOaWsOWKqOeUuyAtIOWkluWjs+iuvue9ruS4uumdmeaAge+8jOaXoOWKqOeUu+aViOaenFxuICAgKi9cbiAgdXBkYXRlKGRlbHRhVGltZSkge1xuICAgIC8vIOWkluWjs+S/neaMgemdmeaAge+8jOS4jei/m+ihjOS7u+S9leWKqOeUu+abtOaWsFxuICAgIC8vIOWmguaenOmcgOimgeWKqOeUu+aViOaenO+8jOWPr+S7peWcqOi/memHjOa3u+WKoFxuICB9XG5cbiAgLyoqXG4gICAqIOabtOaWsOmFjee9riAtIOWunueOsOWTjeW6lOW8j+mFjee9ruabtOaWsFxuICAgKi9cbiAgdXBkYXRlQ29uZmlnKCkge1xuICAgIC8vIOeri+aWueS9k+WkluWjs+adkOi0qOW3suWIoOmZpO+8jOS4jeWGjemcgOimgeabtOaWsFxuICAgIC8vIGlmICh0aGlzLnNoZWxsTWF0ZXJpYWwpIHtcbiAgICAvLyAgIHRoaXMuc2hlbGxNYXRlcmlhbC5vcGFjaXR5ID0gQ09ORklHLnNoZWxsLm9wYWNpdHk7XG4gICAgLy8gfVxuICAgIFxuICAgIC8vIOabtOaWsOesrOS4gOS4quWchuafseS9k+mFjee9rlxuICAgIGlmICh0aGlzLmN5bGluZGVyMU1hdGVyaWFsICYmIENPTkZJRy5zaGVsbC5jeWxpbmRlcjEpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIxTWF0ZXJpYWwuY29sb3Iuc2V0SGV4KHBhcnNlSW50KENPTkZJRy5zaGVsbC5jeWxpbmRlcjEuY29sb3IpKTtcbiAgICAgIHRoaXMuY3lsaW5kZXIxTWF0ZXJpYWwub3BhY2l0eSA9IENPTkZJRy5zaGVsbC5jeWxpbmRlcjEub3BhY2l0eTtcbiAgICB9XG4gICAgaWYgKHRoaXMuY3lsaW5kZXIxICYmIENPTkZJRy5zaGVsbC5jeWxpbmRlcjEpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIxLnZpc2libGUgPSBDT05GSUcuc2hlbGwuY3lsaW5kZXIxLnZpc2libGU7XG4gICAgICB0aGlzLmN5bGluZGVyMS5wb3NpdGlvbi5zZXQoXG4gICAgICAgIENPTkZJRy5zaGVsbC5jeWxpbmRlcjEucG9zaXRpb24ueCxcbiAgICAgICAgQ09ORklHLnNoZWxsLmN5bGluZGVyMS5wb3NpdGlvbi55LFxuICAgICAgICBDT05GSUcuc2hlbGwuY3lsaW5kZXIxLnBvc2l0aW9uLnpcbiAgICAgICk7XG4gICAgICB0aGlzLmN5bGluZGVyMS5yb3RhdGlvbi5zZXQoXG4gICAgICAgIENPTkZJRy5zaGVsbC5jeWxpbmRlcjEucm90YXRpb24ueCxcbiAgICAgICAgQ09ORklHLnNoZWxsLmN5bGluZGVyMS5yb3RhdGlvbi55LFxuICAgICAgICBDT05GSUcuc2hlbGwuY3lsaW5kZXIxLnJvdGF0aW9uLnpcbiAgICAgICk7XG4gICAgfVxuICAgIFxuICAgIC8vIOabtOaWsOesrOS6jOS4quWchuafseS9k+mFjee9rlxuICAgIGlmICh0aGlzLmN5bGluZGVyMk1hdGVyaWFsICYmIENPTkZJRy5zaGVsbC5jeWxpbmRlcjIpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIyTWF0ZXJpYWwuY29sb3Iuc2V0SGV4KHBhcnNlSW50KENPTkZJRy5zaGVsbC5jeWxpbmRlcjIuY29sb3IpKTtcbiAgICAgIHRoaXMuY3lsaW5kZXIyTWF0ZXJpYWwub3BhY2l0eSA9IENPTkZJRy5zaGVsbC5jeWxpbmRlcjIub3BhY2l0eTtcbiAgICB9XG4gICAgaWYgKHRoaXMuY3lsaW5kZXIyICYmIENPTkZJRy5zaGVsbC5jeWxpbmRlcjIpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIyLnZpc2libGUgPSBDT05GSUcuc2hlbGwuY3lsaW5kZXIyLnZpc2libGU7XG4gICAgICB0aGlzLmN5bGluZGVyMi5wb3NpdGlvbi5zZXQoXG4gICAgICAgIENPTkZJRy5zaGVsbC5jeWxpbmRlcjIucG9zaXRpb24ueCxcbiAgICAgICAgQ09ORklHLnNoZWxsLmN5bGluZGVyMi5wb3NpdGlvbi55LFxuICAgICAgICBDT05GSUcuc2hlbGwuY3lsaW5kZXIyLnBvc2l0aW9uLnpcbiAgICAgICk7XG4gICAgICB0aGlzLmN5bGluZGVyMi5yb3RhdGlvbi5zZXQoXG4gICAgICAgIENPTkZJRy5zaGVsbC5jeWxpbmRlcjIucm90YXRpb24ueCxcbiAgICAgICAgQ09ORklHLnNoZWxsLmN5bGluZGVyMi5yb3RhdGlvbi55LFxuICAgICAgICBDT05GSUcuc2hlbGwuY3lsaW5kZXIyLnJvdGF0aW9uLnpcbiAgICAgICk7XG4gICAgfVxuICAgIFxuICAgIC8vIOabtOaWsOaXi+i9rOabsue6v+i/nuaOpemFjee9rlxuICAgIGlmICh0aGlzLmN5bGluZGVyQ29ubmVjdGlvbiAmJiBDT05GSUcuc2hlbGwucm90YXRpb25DdXJ2ZUNvbm5lY3Rpb24pIHtcbiAgICAgIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uLnVwZGF0ZUNvbmZpZyhcbiAgICAgICAgQ09ORklHLnNoZWxsLmN5bGluZGVyMSxcbiAgICAgICAgQ09ORklHLnNoZWxsLmN5bGluZGVyMixcbiAgICAgICAgQ09ORklHLnNoZWxsLnJvdGF0aW9uQ3VydmVDb25uZWN0aW9uXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoIXRoaXMuY3lsaW5kZXJDb25uZWN0aW9uICYmIENPTkZJRy5zaGVsbC5yb3RhdGlvbkN1cnZlQ29ubmVjdGlvbj8udmlzaWJsZSkge1xuICAgICAgLy8g5aaC5p6c6L+e5o6l5LiN5a2Y5Zyo5L2G6YWN572u5Lit6KaB5rGC5pi+56S677yM5YiZ5Yib5bu66L+e5o6lXG4gICAgICAvLyDms6jmhI/vvJrov5nph4zkuI3lupTor6Xph43lpI3liJvlu7rvvIzlm6DkuLrlj6/og73lr7zoh7Tph43lpI3mqKHlnotcbiAgICAgIGNvbnNvbGUud2FybignQ3lsaW5kZXJDb25uZWN0aW9uIG5vdCBmb3VuZCwgYnV0IGNvbmZpZyByZXF1aXJlcyBpdCB0byBiZSB2aXNpYmxlJyk7XG4gICAgfVxuICAgIFxuICAgIC8vIOabtOaWsOi2heakreWchuW9oueKtua4kOWPmOmFjee9rlxuICAgIGlmICh0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24gJiYgQ09ORklHLnNoZWxsLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24pIHtcbiAgICAgIGNvbnN0IHN0YXJ0Q29uZmlnID0ge1xuICAgICAgICBwb3NpdGlvbjogQ09ORklHLnNoZWxsLmN5bGluZGVyMS5wb3NpdGlvbixcbiAgICAgICAgcmFkaXVzOiBDT05GSUcuc2hlbGwuY3lsaW5kZXIxLnJhZGl1c1xuICAgICAgfTtcbiAgICAgIGNvbnN0IGVuZENvbmZpZyA9IHtcbiAgICAgICAgcG9zaXRpb246IHsgeDogNC41LCB5OiAwLCB6OiAwIH0sXG4gICAgICAgIHNpemU6IHtcbiAgICAgICAgICB3aWR0aDogQ09ORklHLmNvbXBvbmVudHMuc2NyZWVuLndpZHRoLCAgIC8vIOiNp+WFieWxj+WuveW6pu+8mjRcbiAgICAgICAgICBoZWlnaHQ6IENPTkZJRy5jb21wb25lbnRzLnNjcmVlbi5oZWlnaHQsIC8vIOiNp+WFieWxj+mrmOW6pu+8mjNcbiAgICAgICAgICBkZXB0aDogQ09ORklHLnNoZWxsLnNpemUuZGVwdGggICAgICAgICAgIC8vIOS/neaMgeWOn+a3seW6pu+8mjRcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbi51cGRhdGVDb25maWcoXG4gICAgICAgIHN0YXJ0Q29uZmlnLFxuICAgICAgICBlbmRDb25maWcsXG4gICAgICAgIENPTkZJRy5zaGVsbC5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoIXRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbiAmJiBDT05GSUcuc2hlbGwuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbj8udmlzaWJsZSkge1xuICAgICAgLy8g5aaC5p6c5b2i54q25riQ5Y+Y5LiN5a2Y5Zyo5L2G6YWN572u5Lit6KaB5rGC5pi+56S677yM5YiZ5Yib5bu65riQ5Y+YXG4gICAgICAvLyDms6jmhI/vvJrov5nph4zkuI3lupTor6Xph43lpI3liJvlu7rvvIzlm6DkuLrlj6/og73lr7zoh7Tph43lpI3mqKHlnotcbiAgICAgIGNvbnNvbGUud2FybignU3VwZXJlbGxpcHNlVHJhbnNpdGlvbiBub3QgZm91bmQsIGJ1dCBjb25maWcgcmVxdWlyZXMgaXQgdG8gYmUgdmlzaWJsZScpO1xuICAgIH1cbiAgICBcbiAgICAvLyDmm7TmlrDlj6/op4HmgKdcbiAgICB0aGlzLnNoZWxsR3JvdXAudmlzaWJsZSA9IENPTkZJRy5zaGVsbC52aXNpYmxlO1xuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9ruesrOS4gOS4quWchuafseS9k+aXi+i9rFxuICAgKi9cbiAgc2V0Q3lsaW5kZXIxUm90YXRpb24oeCwgeSwgeikge1xuICAgIGlmICh0aGlzLmN5bGluZGVyMSkge1xuICAgICAgdGhpcy5jeWxpbmRlcjEucm90YXRpb24uc2V0KHgsIHksIHopO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7nrKzkuozkuKrlnIbmn7HkvZPml4vovaxcbiAgICovXG4gIHNldEN5bGluZGVyMlJvdGF0aW9uKHgsIHksIHopIHtcbiAgICBpZiAodGhpcy5jeWxpbmRlcjIpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIyLnJvdGF0aW9uLnNldCh4LCB5LCB6KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W56ys5LiA5Liq5ZyG5p+x5L2T5b2T5YmN5peL6L2sXG4gICAqL1xuICBnZXRDeWxpbmRlcjFSb3RhdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5jeWxpbmRlcjEgPyB0aGlzLmN5bGluZGVyMS5yb3RhdGlvbi5jbG9uZSgpIDogbmV3IFRIUkVFLkV1bGVyKCk7XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W56ys5LqM5Liq5ZyG5p+x5L2T5b2T5YmN5peL6L2sXG4gICAqL1xuICBnZXRDeWxpbmRlcjJSb3RhdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5jeWxpbmRlcjIgPyB0aGlzLmN5bGluZGVyMi5yb3RhdGlvbi5jbG9uZSgpIDogbmV3IFRIUkVFLkV1bGVyKCk7XG4gIH1cblxuICAvKipcbiAgICog6K6+572u56ys5LiA5Liq5ZyG5p+x5L2T5Y+v6KeB5oCnXG4gICAqL1xuICBzZXRDeWxpbmRlcjFWaXNpYmxlKHZpc2libGUpIHtcbiAgICBpZiAodGhpcy5jeWxpbmRlcjEpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIxLnZpc2libGUgPSB2aXNpYmxlO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7nrKzkuozkuKrlnIbmn7HkvZPlj6/op4HmgKdcbiAgICovXG4gIHNldEN5bGluZGVyMlZpc2libGUodmlzaWJsZSkge1xuICAgIGlmICh0aGlzLmN5bGluZGVyMikge1xuICAgICAgdGhpcy5jeWxpbmRlcjIudmlzaWJsZSA9IHZpc2libGU7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9ruesrOS4gOS4quWchuafseS9k+minOiJslxuICAgKi9cbiAgc2V0Q3lsaW5kZXIxQ29sb3IoY29sb3IpIHtcbiAgICBpZiAodGhpcy5jeWxpbmRlcjFNYXRlcmlhbCkge1xuICAgICAgdGhpcy5jeWxpbmRlcjFNYXRlcmlhbC5jb2xvci5zZXRIZXgoY29sb3IpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7nrKzkuozkuKrlnIbmn7HkvZPpopzoibJcbiAgICovXG4gIHNldEN5bGluZGVyMkNvbG9yKGNvbG9yKSB7XG4gICAgaWYgKHRoaXMuY3lsaW5kZXIyTWF0ZXJpYWwpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIyTWF0ZXJpYWwuY29sb3Iuc2V0SGV4KGNvbG9yKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6+572u56ys5LiA5Liq5ZyG5p+x5L2T6YCP5piO5bqmXG4gICAqL1xuICBzZXRDeWxpbmRlcjFPcGFjaXR5KG9wYWNpdHkpIHtcbiAgICBpZiAodGhpcy5jeWxpbmRlcjFNYXRlcmlhbCkge1xuICAgICAgdGhpcy5jeWxpbmRlcjFNYXRlcmlhbC5vcGFjaXR5ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgb3BhY2l0eSkpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7nrKzkuozkuKrlnIbmn7HkvZPpgI/mmI7luqZcbiAgICovXG4gIHNldEN5bGluZGVyMk9wYWNpdHkob3BhY2l0eSkge1xuICAgIGlmICh0aGlzLmN5bGluZGVyMk1hdGVyaWFsKSB7XG4gICAgICB0aGlzLmN5bGluZGVyMk1hdGVyaWFsLm9wYWNpdHkgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCBvcGFjaXR5KSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9ruaXi+i9rOabsue6v+i/nuaOpeeahOS9jee9ruWBj+enu1xuICAgKiBAcGFyYW0ge251bWJlcn0geCAtIFjovbTlgY/np7tcbiAgICogQHBhcmFtIHtudW1iZXJ9IHkgLSBZ6L205YGP56e7XG4gICAqIEBwYXJhbSB7bnVtYmVyfSB6IC0gWui9tOWBj+enu1xuICAgKi9cbiAgc2V0Q29ubmVjdGlvblBvc2l0aW9uT2Zmc2V0KHgsIHksIHopIHtcbiAgICBpZiAodGhpcy5jeWxpbmRlckNvbm5lY3Rpb24pIHtcbiAgICAgIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uLnNldFBvc2l0aW9uT2Zmc2V0KHgsIHksIHopO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7ml4vovazmm7Lnur/ov57mjqXnmoTml4vovazlgY/np7tcbiAgICogQHBhcmFtIHtudW1iZXJ9IHggLSBY6L205peL6L2s5YGP56e777yI5byn5bqm77yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB5IC0gWei9tOaXi+i9rOWBj+enu++8iOW8p+W6pu+8iVxuICAgKiBAcGFyYW0ge251bWJlcn0geiAtIFrovbTml4vovazlgY/np7vvvIjlvKfluqbvvIlcbiAgICovXG4gIHNldENvbm5lY3Rpb25Sb3RhdGlvbk9mZnNldCh4LCB5LCB6KSB7XG4gICAgaWYgKHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uKSB7XG4gICAgICB0aGlzLmN5bGluZGVyQ29ubmVjdGlvbi5zZXRSb3RhdGlvbk9mZnNldCh4LCB5LCB6KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog55u05o6l6K6+572u5peL6L2s5puy57q/6L+e5o6l55qE5L2N572uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOWdkOagh1xuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnlnZDmoIdcbiAgICogQHBhcmFtIHtudW1iZXJ9IHogLSBa5Z2Q5qCHXG4gICAqL1xuICBzZXRDb25uZWN0aW9uUG9zaXRpb24oeCwgeSwgeikge1xuICAgIGlmICh0aGlzLmN5bGluZGVyQ29ubmVjdGlvbikge1xuICAgICAgdGhpcy5jeWxpbmRlckNvbm5lY3Rpb24uc2V0UG9zaXRpb24oeCwgeSwgeik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOebtOaOpeiuvue9ruaXi+i9rOabsue6v+i/nuaOpeeahOaXi+i9rFxuICAgKiBAcGFyYW0ge251bWJlcn0geCAtIFjovbTml4vovazvvIjlvKfluqbvvIlcbiAgICogQHBhcmFtIHtudW1iZXJ9IHkgLSBZ6L205peL6L2s77yI5byn5bqm77yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB6IC0gWui9tOaXi+i9rO+8iOW8p+W6pu+8iVxuICAgKi9cbiAgc2V0Q29ubmVjdGlvblJvdGF0aW9uKHgsIHksIHopIHtcbiAgICBpZiAodGhpcy5jeWxpbmRlckNvbm5lY3Rpb24pIHtcbiAgICAgIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uLnNldFJvdGF0aW9uKHgsIHksIHopO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5bml4vovazmm7Lnur/ov57mjqXnmoTlvZPliY3kvY3nva5cbiAgICovXG4gIGdldENvbm5lY3Rpb25Qb3NpdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5jeWxpbmRlckNvbm5lY3Rpb24gPyB0aGlzLmN5bGluZGVyQ29ubmVjdGlvbi5nZXRQb3NpdGlvbigpIDogbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5bml4vovazmm7Lnur/ov57mjqXnmoTlvZPliY3ml4vovaxcbiAgICovXG4gIGdldENvbm5lY3Rpb25Sb3RhdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5jeWxpbmRlckNvbm5lY3Rpb24gPyB0aGlzLmN5bGluZGVyQ29ubmVjdGlvbi5nZXRSb3RhdGlvbigpIDogbmV3IFRIUkVFLkV1bGVyKCk7XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W5peL6L2s5puy57q/6L+e5o6l55qE5L2N572u5YGP56e7XG4gICAqL1xuICBnZXRDb25uZWN0aW9uUG9zaXRpb25PZmZzZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uID8gdGhpcy5jeWxpbmRlckNvbm5lY3Rpb24uZ2V0UG9zaXRpb25PZmZzZXQoKSA6IHsgeDogMCwgeTogMCwgejogMCB9O1xuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluaXi+i9rOabsue6v+i/nuaOpeeahOaXi+i9rOWBj+enu1xuICAgKi9cbiAgZ2V0Q29ubmVjdGlvblJvdGF0aW9uT2Zmc2V0KCkge1xuICAgIHJldHVybiB0aGlzLmN5bGluZGVyQ29ubmVjdGlvbiA/IHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uLmdldFJvdGF0aW9uT2Zmc2V0KCkgOiB7IHg6IDAsIHk6IDAsIHo6IDAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7ml4vovazmm7Lnur/ov57mjqXlj6/op4HmgKdcbiAgICovXG4gIHNldENvbm5lY3Rpb25WaXNpYmxlKHZpc2libGUpIHtcbiAgICBpZiAodGhpcy5jeWxpbmRlckNvbm5lY3Rpb24pIHtcbiAgICAgIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uLnNldFZpc2libGUodmlzaWJsZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9ruaXi+i9rOabsue6v+i/nuaOpeminOiJslxuICAgKi9cbiAgc2V0Q29ubmVjdGlvbkNvbG9yKGNvbG9yKSB7XG4gICAgaWYgKHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uKSB7XG4gICAgICB0aGlzLmN5bGluZGVyQ29ubmVjdGlvbi5zZXRDb2xvcihjb2xvcik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiuvue9ruaXi+i9rOabsue6v+i/nuaOpemAj+aYjuW6plxuICAgKi9cbiAgc2V0Q29ubmVjdGlvbk9wYWNpdHkob3BhY2l0eSkge1xuICAgIGlmICh0aGlzLmN5bGluZGVyQ29ubmVjdGlvbikge1xuICAgICAgdGhpcy5jeWxpbmRlckNvbm5lY3Rpb24uc2V0T3BhY2l0eShvcGFjaXR5KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6+572u6LaF5qSt5ZyG5b2i54q25riQ5Y+Y55qE5L2N572u5YGP56e7XG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOi9tOWBj+enu1xuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnovbTlgY/np7tcbiAgICogQHBhcmFtIHtudW1iZXJ9IHogLSBa6L205YGP56e7XG4gICAqL1xuICBzZXRUcmFuc2l0aW9uUG9zaXRpb25PZmZzZXQoeCwgeSwgeikge1xuICAgIGlmICh0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24pIHtcbiAgICAgIHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbi5zZXRQb3NpdGlvbk9mZnNldCh4LCB5LCB6KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6+572u6LaF5qSt5ZyG5b2i54q25riQ5Y+Y55qE5peL6L2s5YGP56e7XG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOi9tOaXi+i9rOWBj+enu++8iOW8p+W6pu+8iVxuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnovbTml4vovazlgY/np7vvvIjlvKfluqbvvIlcbiAgICogQHBhcmFtIHtudW1iZXJ9IHogLSBa6L205peL6L2s5YGP56e777yI5byn5bqm77yJXG4gICAqL1xuICBzZXRUcmFuc2l0aW9uUm90YXRpb25PZmZzZXQoeCwgeSwgeikge1xuICAgIGlmICh0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24pIHtcbiAgICAgIHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbi5zZXRSb3RhdGlvbk9mZnNldCh4LCB5LCB6KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog55u05o6l6K6+572u6LaF5qSt5ZyG5b2i54q25riQ5Y+Y55qE5L2N572uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOWdkOagh1xuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnlnZDmoIdcbiAgICogQHBhcmFtIHtudW1iZXJ9IHogLSBa5Z2Q5qCHXG4gICAqL1xuICBzZXRUcmFuc2l0aW9uUG9zaXRpb24oeCwgeSwgeikge1xuICAgIGlmICh0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24pIHtcbiAgICAgIHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbi5zZXRQb3NpdGlvbih4LCB5LCB6KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog55u05o6l6K6+572u6LaF5qSt5ZyG5b2i54q25riQ5Y+Y55qE5peL6L2sXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IC0gWOi9tOaXi+i9rO+8iOW8p+W6pu+8iVxuICAgKiBAcGFyYW0ge251bWJlcn0geSAtIFnovbTml4vovazvvIjlvKfluqbvvIlcbiAgICogQHBhcmFtIHtudW1iZXJ9IHogLSBa6L205peL6L2s77yI5byn5bqm77yJXG4gICAqL1xuICBzZXRUcmFuc2l0aW9uUm90YXRpb24oeCwgeSwgeikge1xuICAgIGlmICh0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24pIHtcbiAgICAgIHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbi5zZXRSb3RhdGlvbih4LCB5LCB6KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6I635Y+W6LaF5qSt5ZyG5b2i54q25riQ5Y+Y55qE5b2T5YmN5L2N572uXG4gICAqL1xuICBnZXRUcmFuc2l0aW9uUG9zaXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbiA/IHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbi5nZXRQb3NpdGlvbigpIDogbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5botoXmpK3lnIblvaLnirbmuJDlj5jnmoTlvZPliY3ml4vovaxcbiAgICovXG4gIGdldFRyYW5zaXRpb25Sb3RhdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uID8gdGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uLmdldFJvdGF0aW9uKCkgOiBuZXcgVEhSRUUuRXVsZXIoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5botoXmpK3lnIblvaLnirbmuJDlj5jnmoTkvY3nva7lgY/np7tcbiAgICovXG4gIGdldFRyYW5zaXRpb25Qb3NpdGlvbk9mZnNldCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uID8gdGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uLmdldFBvc2l0aW9uT2Zmc2V0KCkgOiB7IHg6IDAsIHk6IDAsIHo6IDAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5botoXmpK3lnIblvaLnirbmuJDlj5jnmoTml4vovazlgY/np7tcbiAgICovXG4gIGdldFRyYW5zaXRpb25Sb3RhdGlvbk9mZnNldCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uID8gdGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uLmdldFJvdGF0aW9uT2Zmc2V0KCkgOiB7IHg6IDAsIHk6IDAsIHo6IDAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7otoXmpK3lnIblvaLnirbmuJDlj5jlj6/op4HmgKdcbiAgICovXG4gIHNldFRyYW5zaXRpb25WaXNpYmxlKHZpc2libGUpIHtcbiAgICBpZiAodGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uKSB7XG4gICAgICB0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24uc2V0VmlzaWJsZSh2aXNpYmxlKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6+572u6LaF5qSt5ZyG5b2i54q25riQ5Y+Y6aKc6ImyXG4gICAqL1xuICBzZXRUcmFuc2l0aW9uQ29sb3IoY29sb3IpIHtcbiAgICBpZiAodGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uKSB7XG4gICAgICB0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24uc2V0Q29sb3IoY29sb3IpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDorr7nva7otoXmpK3lnIblvaLnirbmuJDlj5jpgI/mmI7luqZcbiAgICovXG4gIHNldFRyYW5zaXRpb25PcGFjaXR5KG9wYWNpdHkpIHtcbiAgICBpZiAodGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uKSB7XG4gICAgICB0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24uc2V0T3BhY2l0eShvcGFjaXR5KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog5Yqo5oCB5pu05paw6LaF5qSt5ZyG5oyH5pWw77yI55So5LqO5Yqo55S75pWI5p6c77yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydEV4cG9uZW50IC0g6LW35aeL5oyH5pWw77yI5ZyG5b2i77yaMi4w77yJXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBlbmRFeHBvbmVudCAtIOe7k+adn+aMh+aVsO+8iOaWueW9ou+8mjguMCvvvIlcbiAgICovXG4gIHVwZGF0ZVRyYW5zaXRpb25FeHBvbmVudHMoc3RhcnRFeHBvbmVudCwgZW5kRXhwb25lbnQpIHtcbiAgICBpZiAodGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uKSB7XG4gICAgICB0aGlzLnN1cGVyZWxsaXBzZVRyYW5zaXRpb24udXBkYXRlRXhwb25lbnRzKHN0YXJ0RXhwb25lbnQsIGVuZEV4cG9uZW50KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6ZSA5q+B6LWE5rqQXG4gICAqL1xuICBkaXNwb3NlKCkge1xuICAgIC8vIOeri+aWueS9k+WkluWjs+adkOi0qOW3suWIoOmZpO+8jOS4jemcgOimgea4heeQhlxuICAgIC8vIGlmICh0aGlzLnNoZWxsTWF0ZXJpYWwpIHtcbiAgICAvLyAgIHRoaXMuc2hlbGxNYXRlcmlhbC5kaXNwb3NlKCk7XG4gICAgLy8gfVxuICAgIFxuICAgIGlmICh0aGlzLmN5bGluZGVyMU1hdGVyaWFsKSB7XG4gICAgICB0aGlzLmN5bGluZGVyMU1hdGVyaWFsLmRpc3Bvc2UoKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKHRoaXMuY3lsaW5kZXIyTWF0ZXJpYWwpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIyTWF0ZXJpYWwuZGlzcG9zZSgpO1xuICAgIH1cbiAgICBcbiAgICAvLyDmuIXnkIbml4vovazmm7Lnur/ov57mjqVcbiAgICBpZiAodGhpcy5jeWxpbmRlckNvbm5lY3Rpb24pIHtcbiAgICAgIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uLmRpc3Bvc2UoKTtcbiAgICAgIHRoaXMuY3lsaW5kZXJDb25uZWN0aW9uID0gbnVsbDtcbiAgICB9XG4gICAgXG4gICAgLy8g5riF55CG6LaF5qSt5ZyG5b2i54q25riQ5Y+YXG4gICAgaWYgKHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbikge1xuICAgICAgdGhpcy5zdXBlcmVsbGlwc2VUcmFuc2l0aW9uLmRpc3Bvc2UoKTtcbiAgICAgIHRoaXMuc3VwZXJlbGxpcHNlVHJhbnNpdGlvbiA9IG51bGw7XG4gICAgfVxuICAgIFxuICAgIC8vIOa4heeQhmN5bGluZGVyMueIhueCuOaViOaenFxuICAgIGlmICh0aGlzLmN5bGluZGVyMkV4cGxvZGVFZmZlY3QpIHtcbiAgICAgIHRoaXMuY3lsaW5kZXIyRXhwbG9kZUVmZmVjdC5kaXNwb3NlKCk7XG4gICAgICB0aGlzLmN5bGluZGVyMkV4cGxvZGVFZmZlY3QgPSBudWxsO1xuICAgIH1cbiAgICBcbiAgICAvLyDmuIXnkIbml4vovazmm7Lnur/ov57mjqXniIbngrjmlYjmnpxcbiAgICBpZiAodGhpcy5yb3RhdGlvbkN1cnZlRXhwbG9kZUVmZmVjdCkge1xuICAgICAgdGhpcy5yb3RhdGlvbkN1cnZlRXhwbG9kZUVmZmVjdC5kaXNwb3NlKCk7XG4gICAgICB0aGlzLnJvdGF0aW9uQ3VydmVFeHBsb2RlRWZmZWN0ID0gbnVsbDtcbiAgICB9XG4gICAgXG4gICAgLy8g5riF55CG6LaF5qSt5ZyG5b2i54q25riQ5Y+Y54iG54K45pWI5p6cXG4gICAgaWYgKHRoaXMuc3VwZXJlbGxpcHNlRXhwbG9kZUVmZmVjdCkge1xuICAgICAgdGhpcy5zdXBlcmVsbGlwc2VFeHBsb2RlRWZmZWN0LmRpc3Bvc2UoKTtcbiAgICAgIHRoaXMuc3VwZXJlbGxpcHNlRXhwbG9kZUVmZmVjdCA9IG51bGw7XG4gICAgfVxuICAgIFxuICAgIHRoaXMuc2hlbGxHcm91cC50cmF2ZXJzZSgoY2hpbGQpID0+IHtcbiAgICAgIGlmIChjaGlsZC5nZW9tZXRyeSkgY2hpbGQuZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgaWYgKGNoaWxkLm1hdGVyaWFsKSBjaGlsZC5tYXRlcmlhbC5kaXNwb3NlKCk7XG4gICAgfSk7XG4gICAgXG4gICAgLy8g5riF55CG5ZyG5p+x5L2T5byV55SoXG4gICAgdGhpcy5jeWxpbmRlcjEgPSBudWxsO1xuICAgIHRoaXMuY3lsaW5kZXIyID0gbnVsbDtcbiAgfVxufVxuIiwiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xyXG5pbXBvcnQgeyBDT05GSUcgfSBmcm9tICcuLi9jb25maWdMb2FkZXInO1xyXG5cclxuLyoqXHJcbiAqIOadkOi0qOeuoeeQhuWZqOexu1xyXG4gKiDotJ/otKPliJvlu7rlkoznrqHnkIbmiYDmnIkzROadkOi0qO+8jOWMheaLrOi0tOWbvuWKoOi9vVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE1hdGVyaWFsTWFuYWdlciB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnRleHR1cmVMb2FkZXIgPSBuZXcgVEhSRUUuVGV4dHVyZUxvYWRlcigpO1xyXG4gICAgdGhpcy5tYXRlcmlhbHMgPSB7fTtcclxuICAgIHRoaXMudGV4dHVyZXMgPSB7fTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWIneWni+WMluaJgOacieadkOi0qFxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfSDov5Tlm55Qcm9taXNl77yM5Zyo5omA5pyJ6LS05Zu+5Yqg6L295a6M5oiQ5ZCO6Kej5p6QXHJcbiAgICovXHJcbiAgYXN5bmMgaW5pdGlhbGl6ZU1hdGVyaWFscygpIHtcclxuICAgIGNvbnNvbGUubG9nKCfmraPlnKjliJ3lp4vljJbmnZDotKguLi4nKTtcclxuICAgIFxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8g5Yqg6L296YeR5bGe6LS05Zu+XHJcbiAgICAgIGF3YWl0IHRoaXMubG9hZE1ldGFsVGV4dHVyZXMoKTtcclxuICAgICAgXHJcbiAgICAgIC8vIOWIm+W7uuaJgOacieadkOi0qFxyXG4gICAgICB0aGlzLmNyZWF0ZU1ldGFsTWF0ZXJpYWwoKTtcclxuICAgICAgdGhpcy5jcmVhdGVQbGF0ZU1hdGVyaWFsKCk7XHJcbiAgICAgIHRoaXMuY3JlYXRlU2NyZWVuTWF0ZXJpYWwoKTtcclxuICAgICAgdGhpcy5jcmVhdGVHbG93UG9pbnRNYXRlcmlhbCgpO1xyXG4gICAgICBcclxuICAgICAgY29uc29sZS5sb2coJ+adkOi0qOWIneWni+WMluWujOaIkCcpO1xyXG4gICAgICByZXR1cm4gdGhpcy5tYXRlcmlhbHM7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCfmnZDotKjliJ3lp4vljJblpLHotKU6JywgZXJyb3IpO1xyXG4gICAgICAvLyDlpoLmnpzotLTlm77liqDovb3lpLHotKXvvIzliJvlu7rml6DotLTlm77nmoTmnZDotKhcclxuICAgICAgdGhpcy5jcmVhdGVGYWxsYmFja01hdGVyaWFscygpO1xyXG4gICAgICByZXR1cm4gdGhpcy5tYXRlcmlhbHM7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliqDovb3ph5HlsZ7otLTlm75cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX0g6LS05Zu+5Yqg6L29UHJvbWlzZVxyXG4gICAqL1xyXG4gIGFzeW5jIGxvYWRNZXRhbFRleHR1cmVzKCkge1xyXG4gICAgY29uc3QgbG9hZFByb21pc2VzID0gW107XHJcbiAgICBcclxuICAgIC8vIOWKoOi9veeUteWtkOaequmHkeWxnui0tOWbvlxyXG4gICAgY29uc3QgbWV0YWxDb25maWcgPSBDT05GSUcubWF0ZXJpYWxzLm1ldGFsO1xyXG4gICAgaWYgKG1ldGFsQ29uZmlnLnRleHR1cmVzKSB7XHJcbiAgICAgIGlmIChtZXRhbENvbmZpZy50ZXh0dXJlcy5tYXApIHtcclxuICAgICAgICBsb2FkUHJvbWlzZXMucHVzaCh0aGlzLmxvYWRUZXh0dXJlKCdtZXRhbE1hcCcsIG1ldGFsQ29uZmlnLnRleHR1cmVzLm1hcCkpO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBpZiAobWV0YWxDb25maWcudGV4dHVyZXMubm9ybWFsTWFwKSB7XHJcbiAgICAgICAgbG9hZFByb21pc2VzLnB1c2godGhpcy5sb2FkVGV4dHVyZSgnbWV0YWxOb3JtYWwnLCBtZXRhbENvbmZpZy50ZXh0dXJlcy5ub3JtYWxNYXApKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgaWYgKG1ldGFsQ29uZmlnLnRleHR1cmVzLnJvdWdobmVzc01hcCkge1xyXG4gICAgICAgIGxvYWRQcm9taXNlcy5wdXNoKHRoaXMubG9hZFRleHR1cmUoJ21ldGFsUm91Z2huZXNzJywgbWV0YWxDb25maWcudGV4dHVyZXMucm91Z2huZXNzTWFwKSk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGlmIChtZXRhbENvbmZpZy50ZXh0dXJlcy5tZXRhbG5lc3NNYXApIHtcclxuICAgICAgICBsb2FkUHJvbWlzZXMucHVzaCh0aGlzLmxvYWRUZXh0dXJlKCdtZXRhbE1ldGFsbmVzcycsIG1ldGFsQ29uZmlnLnRleHR1cmVzLm1ldGFsbmVzc01hcCkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIOWKoOi9veWBj+i9rOadv+i0tOWbvlxyXG4gICAgY29uc3QgcGxhdGVDb25maWcgPSBDT05GSUcubWF0ZXJpYWxzLnBsYXRlO1xyXG4gICAgaWYgKHBsYXRlQ29uZmlnLnRleHR1cmVzKSB7XHJcbiAgICAgIGlmIChwbGF0ZUNvbmZpZy50ZXh0dXJlcy5tYXApIHtcclxuICAgICAgICBsb2FkUHJvbWlzZXMucHVzaCh0aGlzLmxvYWRUZXh0dXJlKCdwbGF0ZU1hcCcsIHBsYXRlQ29uZmlnLnRleHR1cmVzLm1hcCkpO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBpZiAocGxhdGVDb25maWcudGV4dHVyZXMubm9ybWFsTWFwKSB7XHJcbiAgICAgICAgbG9hZFByb21pc2VzLnB1c2godGhpcy5sb2FkVGV4dHVyZSgncGxhdGVOb3JtYWwnLCBwbGF0ZUNvbmZpZy50ZXh0dXJlcy5ub3JtYWxNYXApKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgaWYgKHBsYXRlQ29uZmlnLnRleHR1cmVzLnJvdWdobmVzc01hcCkge1xyXG4gICAgICAgIGxvYWRQcm9taXNlcy5wdXNoKHRoaXMubG9hZFRleHR1cmUoJ3BsYXRlUm91Z2huZXNzJywgcGxhdGVDb25maWcudGV4dHVyZXMucm91Z2huZXNzTWFwKSk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGlmIChwbGF0ZUNvbmZpZy50ZXh0dXJlcy5tZXRhbG5lc3NNYXApIHtcclxuICAgICAgICBsb2FkUHJvbWlzZXMucHVzaCh0aGlzLmxvYWRUZXh0dXJlKCdwbGF0ZU1ldGFsbmVzcycsIHBsYXRlQ29uZmlnLnRleHR1cmVzLm1ldGFsbmVzc01hcCkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGF3YWl0IFByb21pc2UuYWxsKGxvYWRQcm9taXNlcyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliqDovb3ljZXkuKrotLTlm75cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIOi0tOWbvuWQjeensFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIC0g6LS05Zu+6Lev5b6EXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9IOi0tOWbvuWKoOi9vVByb21pc2VcclxuICAgKi9cclxuICBsb2FkVGV4dHVyZShuYW1lLCBwYXRoKSB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICB0aGlzLnRleHR1cmVMb2FkZXIubG9hZChcclxuICAgICAgICBwYXRoLFxyXG4gICAgICAgICh0ZXh0dXJlKSA9PiB7XHJcbiAgICAgICAgICAvLyDorr7nva7otLTlm77lj4LmlbBcclxuICAgICAgICAgIHRleHR1cmUud3JhcFMgPSBUSFJFRS5SZXBlYXRXcmFwcGluZztcclxuICAgICAgICAgIHRleHR1cmUud3JhcFQgPSBUSFJFRS5SZXBlYXRXcmFwcGluZztcclxuICAgICAgICAgIHRleHR1cmUuZmxpcFkgPSBmYWxzZTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgdGhpcy50ZXh0dXJlc1tuYW1lXSA9IHRleHR1cmU7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhg6LS05Zu+5Yqg6L295oiQ5YqfOiAke25hbWV9ICgke3BhdGh9KWApO1xyXG4gICAgICAgICAgcmVzb2x2ZSh0ZXh0dXJlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIChwcm9ncmVzcykgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coYOi0tOWbvuWKoOi9vei/m+W6pjogJHtuYW1lfSAtICR7KHByb2dyZXNzLmxvYWRlZCAvIHByb2dyZXNzLnRvdGFsICogMTAwKX0lYCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAoZXJyb3IpID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUud2Fybihg6LS05Zu+5Yqg6L295aSx6LSlOiAke25hbWV9ICgke3BhdGh9KWAsIGVycm9yKTtcclxuICAgICAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICApO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliJvlu7rph5HlsZ7mnZDotKjvvIjnlLXlrZDmnqrvvIlcclxuICAgKi9cclxuICBjcmVhdGVNZXRhbE1hdGVyaWFsKCkge1xyXG4gICAgY29uc3QgbWV0YWxDb25maWcgPSBDT05GSUcubWF0ZXJpYWxzLm1ldGFsO1xyXG4gICAgXHJcbiAgICBjb25zdCBtYXRlcmlhbFByb3BzID0ge1xyXG4gICAgICBjb2xvcjogbmV3IFRIUkVFLkNvbG9yKG1ldGFsQ29uZmlnLmNvbG9yKSxcclxuICAgICAgbWV0YWxuZXNzOiBtZXRhbENvbmZpZy5tZXRhbG5lc3MsXHJcbiAgICAgIHJvdWdobmVzczogbWV0YWxDb25maWcucm91Z2huZXNzLFxyXG4gICAgICBlbnZNYXBJbnRlbnNpdHk6IDEuMFxyXG4gICAgfTtcclxuXHJcbiAgICAvLyDlpoLmnpzmnInotLTlm77vvIzmt7vliqDliLDmnZDotKhcclxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsTWFwKSB7XHJcbiAgICAgIG1hdGVyaWFsUHJvcHMubWFwID0gdGhpcy50ZXh0dXJlcy5tZXRhbE1hcDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKHRoaXMudGV4dHVyZXMubWV0YWxOb3JtYWwpIHtcclxuICAgICAgbWF0ZXJpYWxQcm9wcy5ub3JtYWxNYXAgPSB0aGlzLnRleHR1cmVzLm1ldGFsTm9ybWFsO1xyXG4gICAgICBtYXRlcmlhbFByb3BzLm5vcm1hbFNjYWxlID0gbmV3IFRIUkVFLlZlY3RvcjIoMSwgMSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmICh0aGlzLnRleHR1cmVzLm1ldGFsUm91Z2huZXNzKSB7XHJcbiAgICAgIG1hdGVyaWFsUHJvcHMucm91Z2huZXNzTWFwID0gdGhpcy50ZXh0dXJlcy5tZXRhbFJvdWdobmVzcztcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKHRoaXMudGV4dHVyZXMubWV0YWxNZXRhbG5lc3MpIHtcclxuICAgICAgbWF0ZXJpYWxQcm9wcy5tZXRhbG5lc3NNYXAgPSB0aGlzLnRleHR1cmVzLm1ldGFsTWV0YWxuZXNzO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMubWF0ZXJpYWxzLm1ldGFsID0gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKG1hdGVyaWFsUHJvcHMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Yib5bu65YGP6L2s5p2/5p2Q6LSoXHJcbiAgICovXHJcbiAgY3JlYXRlUGxhdGVNYXRlcmlhbCgpIHtcclxuICAgIGNvbnN0IHBsYXRlQ29uZmlnID0gQ09ORklHLm1hdGVyaWFscy5wbGF0ZTtcclxuICAgIFxyXG4gICAgY29uc3QgbWF0ZXJpYWxQcm9wcyA9IHtcclxuICAgICAgY29sb3I6IG5ldyBUSFJFRS5Db2xvcihwbGF0ZUNvbmZpZy5jb2xvciksXHJcbiAgICAgIG1ldGFsbmVzczogcGxhdGVDb25maWcubWV0YWxuZXNzLFxyXG4gICAgICByb3VnaG5lc3M6IHBsYXRlQ29uZmlnLnJvdWdobmVzcyxcclxuICAgICAgZW52TWFwSW50ZW5zaXR5OiAxLjAgIC8vIOS4jueUteWtkOaequS/neaMgeS4gOiHtFxyXG4gICAgfTtcclxuXHJcbiAgICAvLyDlpoLmnpzmnInotLTlm77vvIzmt7vliqDliLDmnZDotKhcclxuICAgIGlmICh0aGlzLnRleHR1cmVzLnBsYXRlTWFwKSB7XHJcbiAgICAgIG1hdGVyaWFsUHJvcHMubWFwID0gdGhpcy50ZXh0dXJlcy5wbGF0ZU1hcDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKHRoaXMudGV4dHVyZXMucGxhdGVOb3JtYWwpIHtcclxuICAgICAgbWF0ZXJpYWxQcm9wcy5ub3JtYWxNYXAgPSB0aGlzLnRleHR1cmVzLnBsYXRlTm9ybWFsO1xyXG4gICAgICBtYXRlcmlhbFByb3BzLm5vcm1hbFNjYWxlID0gbmV3IFRIUkVFLlZlY3RvcjIoMSwgMSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmICh0aGlzLnRleHR1cmVzLnBsYXRlUm91Z2huZXNzKSB7XHJcbiAgICAgIG1hdGVyaWFsUHJvcHMucm91Z2huZXNzTWFwID0gdGhpcy50ZXh0dXJlcy5wbGF0ZVJvdWdobmVzcztcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKHRoaXMudGV4dHVyZXMucGxhdGVNZXRhbG5lc3MpIHtcclxuICAgICAgbWF0ZXJpYWxQcm9wcy5tZXRhbG5lc3NNYXAgPSB0aGlzLnRleHR1cmVzLnBsYXRlTWV0YWxuZXNzO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMubWF0ZXJpYWxzLnBsYXRlID0gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKG1hdGVyaWFsUHJvcHMpO1xyXG4gICAgXHJcbiAgICAvLyDosIPor5XovpPlh7rlgY/ovazmnb/mnZDotKjkv6Hmga9cclxuICAgIGNvbnNvbGUubG9nKCfwn5SnIOWBj+i9rOadv+adkOi0qOWIm+W7uuWujOaIkDonLCB7XHJcbiAgICAgIGhhc01hcDogISFtYXRlcmlhbFByb3BzLm1hcCxcclxuICAgICAgaGFzTm9ybWFsTWFwOiAhIW1hdGVyaWFsUHJvcHMubm9ybWFsTWFwLFxyXG4gICAgICBjb2xvcjogbWF0ZXJpYWxQcm9wcy5jb2xvci5nZXRIZXhTdHJpbmcoKSxcclxuICAgICAgbWV0YWxuZXNzOiBtYXRlcmlhbFByb3BzLm1ldGFsbmVzcyxcclxuICAgICAgcm91Z2huZXNzOiBtYXRlcmlhbFByb3BzLnJvdWdobmVzcyxcclxuICAgICAgZW52TWFwSW50ZW5zaXR5OiBtYXRlcmlhbFByb3BzLmVudk1hcEludGVuc2l0eVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliJvlu7rojaflhYnlsY/mnZDotKhcclxuICAgKi9cclxuICBjcmVhdGVTY3JlZW5NYXRlcmlhbCgpIHtcclxuICAgIGNvbnN0IHNjcmVlbkNvbmZpZyA9IENPTkZJRy5tYXRlcmlhbHMuc2NyZWVuO1xyXG4gICAgXHJcbiAgICB0aGlzLm1hdGVyaWFscy5zY3JlZW4gPSBuZXcgVEhSRUUuTWVzaFN0YW5kYXJkTWF0ZXJpYWwoe1xyXG4gICAgICBjb2xvcjogbmV3IFRIUkVFLkNvbG9yKHNjcmVlbkNvbmZpZy5jb2xvciksXHJcbiAgICAgIGVtaXNzaXZlOiBuZXcgVEhSRUUuQ29sb3IoQ09ORklHLnNjcmVlbi5jb2xvciksXHJcbiAgICAgIGVtaXNzaXZlSW50ZW5zaXR5OiBDT05GSUcuc2NyZWVuLmludGVuc2l0eSxcclxuICAgICAgcm91Z2huZXNzOiBzY3JlZW5Db25maWcucm91Z2huZXNzLFxyXG4gICAgICBzaWRlOiBUSFJFRS5Eb3VibGVTaWRlLFxyXG4gICAgICB0cmFuc3BhcmVudDogdHJ1ZSwgICAgICAgIC8vIOWQr+eUqOmAj+aYjuW6pu+8jOWFgeiuuOeykuWtkOmAj+i/h1xyXG4gICAgICBvcGFjaXR5OiAwLjksICAgICAgICAgICAgLy8g6K6+572u6L275b6u6YCP5piO5bqmXHJcbiAgICAgIGRlcHRoVGVzdDogdHJ1ZSwgICAgICAgICAvLyDlkK/nlKjmt7HluqbmtYvor5VcclxuICAgICAgZGVwdGhXcml0ZTogZmFsc2UgICAgICAgIC8vIOemgeeUqOa3seW6puWGmeWFpe+8jOWFgeiuuOWQjumdoueahOeykuWtkOaYvuekulxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliJvlu7rlj5HlhYnngrnmnZDotKhcclxuICAgKi9cclxuICBjcmVhdGVHbG93UG9pbnRNYXRlcmlhbCgpIHtcclxuICAgIHRoaXMubWF0ZXJpYWxzLmdsb3dQb2ludCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7XHJcbiAgICAgIGNvbG9yOiBuZXcgVEhSRUUuQ29sb3IoQ09ORklHLmRvdExpZ2h0LmNvbG9yKSxcclxuICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsXHJcbiAgICAgIG9wYWNpdHk6IENPTkZJRy5tYXRlcmlhbHMuZ2xvdy5vcGFjaXR5XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWIm+W7uuWkh+eUqOadkOi0qO+8iOW9k+i0tOWbvuWKoOi9veWksei0peaXtuS9v+eUqO+8iVxyXG4gICAqL1xyXG4gIGNyZWF0ZUZhbGxiYWNrTWF0ZXJpYWxzKCkge1xyXG4gICAgY29uc29sZS5sb2coJ+WIm+W7uuWkh+eUqOadkOi0qO+8iOaXoOi0tOWbvu+8iScpO1xyXG4gICAgXHJcbiAgICB0aGlzLm1hdGVyaWFscy5tZXRhbCA9IG5ldyBUSFJFRS5NZXNoU3RhbmRhcmRNYXRlcmlhbCh7XHJcbiAgICAgIGNvbG9yOiBuZXcgVEhSRUUuQ29sb3IoQ09ORklHLm1hdGVyaWFscy5tZXRhbC5jb2xvciksXHJcbiAgICAgIG1ldGFsbmVzczogQ09ORklHLm1hdGVyaWFscy5tZXRhbC5tZXRhbG5lc3MsXHJcbiAgICAgIHJvdWdobmVzczogQ09ORklHLm1hdGVyaWFscy5tZXRhbC5yb3VnaG5lc3MsXHJcbiAgICAgIGVudk1hcEludGVuc2l0eTogMS4wXHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLm1hdGVyaWFscy5wbGF0ZSA9IG5ldyBUSFJFRS5NZXNoU3RhbmRhcmRNYXRlcmlhbCh7XHJcbiAgICAgIGNvbG9yOiBuZXcgVEhSRUUuQ29sb3IoQ09ORklHLm1hdGVyaWFscy5wbGF0ZS5jb2xvciksXHJcbiAgICAgIG1ldGFsbmVzczogQ09ORklHLm1hdGVyaWFscy5wbGF0ZS5tZXRhbG5lc3MsXHJcbiAgICAgIHJvdWdobmVzczogQ09ORklHLm1hdGVyaWFscy5wbGF0ZS5yb3VnaG5lc3MsXHJcbiAgICAgIGVudk1hcEludGVuc2l0eTogMS4wICAvLyDkuI7nlLXlrZDmnqrkv53mjIHkuIDoh7RcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuY3JlYXRlU2NyZWVuTWF0ZXJpYWwoKTtcclxuICAgIHRoaXMuY3JlYXRlR2xvd1BvaW50TWF0ZXJpYWwoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluaMh+WumuadkOi0qFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0g5p2Q6LSo5ZCN56ewXHJcbiAgICogQHJldHVybnMge1RIUkVFLk1hdGVyaWFsfSDmnZDotKjlr7nosaFcclxuICAgKi9cclxuICBnZXRNYXRlcmlhbChuYW1lKSB7XHJcbiAgICByZXR1cm4gdGhpcy5tYXRlcmlhbHNbbmFtZV07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmm7TmlrDmnZDotKjlsZ7mgKdcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWF0ZXJpYWxOYW1lIC0g5p2Q6LSo5ZCN56ewXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IHByb3BlcnRpZXMgLSDopoHmm7TmlrDnmoTlsZ7mgKdcclxuICAgKi9cclxuICB1cGRhdGVNYXRlcmlhbChtYXRlcmlhbE5hbWUsIHByb3BlcnRpZXMpIHtcclxuICAgIGNvbnN0IG1hdGVyaWFsID0gdGhpcy5tYXRlcmlhbHNbbWF0ZXJpYWxOYW1lXTtcclxuICAgIGlmIChtYXRlcmlhbCkge1xyXG4gICAgICBPYmplY3QuYXNzaWduKG1hdGVyaWFsLCBwcm9wZXJ0aWVzKTtcclxuICAgICAgbWF0ZXJpYWwubmVlZHNVcGRhdGUgPSB0cnVlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6YeK5pS+5omA5pyJ5p2Q6LSo5ZKM6LS05Zu+6LWE5rqQXHJcbiAgICovXHJcbiAgZGlzcG9zZSgpIHtcclxuICAgIC8vIOmHiuaUvui0tOWbvlxyXG4gICAgT2JqZWN0LnZhbHVlcyh0aGlzLnRleHR1cmVzKS5mb3JFYWNoKHRleHR1cmUgPT4ge1xyXG4gICAgICB0ZXh0dXJlLmRpc3Bvc2UoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIOmHiuaUvuadkOi0qFxyXG4gICAgT2JqZWN0LnZhbHVlcyh0aGlzLm1hdGVyaWFscykuZm9yRWFjaChtYXRlcmlhbCA9PiB7XHJcbiAgICAgIG1hdGVyaWFsLmRpc3Bvc2UoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMudGV4dHVyZXMgPSB7fTtcclxuICAgIHRoaXMubWF0ZXJpYWxzID0ge307XHJcbiAgfVxyXG59XHJcbiIsIi8vID09PT09IOWfuuehgOWvvOWFpSA9PT09PVxuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnOyAvLyDkuInnu7TlupNcbmltcG9ydCB7IE9yYml0Q29udHJvbHMgfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vY29udHJvbHMvT3JiaXRDb250cm9scyc7IC8vIOi9qOmBk+aOp+WItuWZqFxuaW1wb3J0ICogYXMgVFdFRU4gZnJvbSAnQHR3ZWVuanMvdHdlZW4uanMnOyAvLyDliqjnlLvlupNcblxuLy8gPT09PT0g5a+85YWlIHN3aXRjaGVyIOaooeWdl++8iEVTNiDlr7zlhaXvvIzlubblnKggRE9NIOWwsee7quWQjuWIneWni+WMlu+8iSA9PT09PVxuaW1wb3J0IHsgcmVuZGVyU3dpdGNoZXIgfSBmcm9tICcuLi9zcmMvd2lkZ2V0cy9zd2l0Y2hlci5qcyc7XG5cblxuLy8gPT09PT0g5a+85YWl6Ieq5a6a5LmJ5qih5Z2XID09PT09XG5pbXBvcnQgeyBDT05GSUcgfSBmcm9tICcuL2NvbmZpZ0xvYWRlcic7XG5pbXBvcnQgeyBDb25uZWN0aW9uUG9zaXRpb25EZW1vIH0gZnJvbSAnLi9leGFtcGxlcy9Db25uZWN0aW9uUG9zaXRpb25EZW1vLmpzJztcbmltcG9ydCB7IFN1cGVyZWxsaXBzZVRyYW5zaXRpb25EZW1vIH0gZnJvbSAnLi9leGFtcGxlcy9TdXBlcmVsbGlwc2VUcmFuc2l0aW9uRGVtby5qcyc7ICAvLyDphY3nva7mlofku7ZcbmltcG9ydCB7IEd1aUNvbnRyb2xsZXIgfSBmcm9tICcuL2NvbnRyb2xsZXJzL0d1aUNvbnRyb2xsZXInOyAgLy8gR1VJ5o6n5Yi25ZmoXG5pbXBvcnQgeyBVSUNvbnRyb2xsZXIgfSBmcm9tICcuL2NvbnRyb2xsZXJzL1VJQ29udHJvbGxlcic7ICAvLyBVSeaOp+WItuWZqFxuaW1wb3J0IHsgV2F2ZWZvcm1HZW5lcmF0b3IgfSBmcm9tICcuL2NvbXBvbmVudHMvV2F2ZWZvcm1HZW5lcmF0b3InOyAgLy8g5rOi5b2i55Sf5oiQ5ZmoXG5pbXBvcnQgeyBFbGVjdHJvbkJlYW0gfSBmcm9tICcuL2NvbXBvbmVudHMvRWxlY3Ryb25CZWFtJzsgIC8vIOeUteWtkOadn1xuaW1wb3J0IHsgU2NyZWVuIH0gZnJvbSAnLi9jb21wb25lbnRzL1NjcmVlbic7ICAvLyDojaflhYnlsY9cbmltcG9ydCB7IExhYmVsU3lzdGVtIH0gZnJvbSAnLi9jb21wb25lbnRzL0xhYmVsU3lzdGVtJzsgIC8vIOagh+etvuezu+e7n1xuaW1wb3J0IHsgRXhwbG9kZWRWaWV3IH0gZnJvbSAnLi9jb21wb25lbnRzL0V4cGxvZGVkVmlldyc7ICAvLyDliIbop6Pop4blm75cbmltcG9ydCB7IERlbW9BbmltYXRpb24gfSBmcm9tICcuL2NvbXBvbmVudHMvRGVtb0FuaW1hdGlvbic7ICAvLyDmvJTnpLrliqjnlLtcbmltcG9ydCB7IENSVFNoZWxsIH0gZnJvbSAnLi9jb21wb25lbnRzL0NSVFNoZWxsJzsgIC8vIENSVOWkluWjs1xuaW1wb3J0IHsgTWF0ZXJpYWxNYW5hZ2VyIH0gZnJvbSAnLi9tYXRlcmlhbHMvTWF0ZXJpYWxNYW5hZ2VyJzsgIC8vIOadkOi0qOeuoeeQhuWZqFxuaW1wb3J0IHsgdW5pZmllZENvbXBvbmVudE1hdGVyaWFsIH0gZnJvbSAnLi9tYXRlcmlhbHMvVW5pZmllZENvbXBvbmVudE1hdGVyaWFsLmpzJzsgIC8vIOe7n+S4gOe7hOS7tuadkOi0qOeuoeeQhuWZqFxuXG4vLyA9PT09PSDlhajlsYDlj5jph48gPT09PT1cbmxldCBzY2VuZSwgY2FtZXJhLCByZW5kZXJlciwgY29udHJvbHM7ICAvLyDlnLrmma/jgIHnm7jmnLrjgIHmuLLmn5PlmajjgIHmjqfliLblmahcbmxldCBlbGVjdHJvbkJlYW0sIHdhdmVmb3JtR2VuZXJhdG9yLCBzY3JlZW5Db250cm9sbGVyOyAgLy8g55S15a2Q5p2f44CB5rOi5b2i55Sf5oiQ5Zmo44CB6I2n5YWJ5bGP5o6n5Yi25ZmoXG5sZXQgZ3VpQ29udHJvbGxlciwgdWlDb250cm9sbGVyOyAgLy8gR1VJ5o6n5Yi25Zmo44CBVUnmjqfliLblmahcbmxldCBsYWJlbFN5c3RlbSwgZXhwbG9kZWRWaWV3LCBkZW1vQW5pbWF0aW9uOyAgLy8g5qCH562+57O757uf44CB5YiG6Kej6KeG5Zu+44CB5ryU56S65Yqo55S7XG5sZXQgY3J0U2hlbGw7ICAvLyBDUlTlpJblo7NcbmxldCBtYXRlcmlhbE1hbmFnZXI7ICAvLyDmnZDotKjnrqHnkIblmahcblxuLy8g5Yib5bu6IFRXRUVOIEdyb3VwIOeuoeeQhuWKqOeUu++8iOino+WGsyBUV0VFTi51cGRhdGUoKSDlvIPnlKjpl67popjvvIlcbmV4cG9ydCBjb25zdCB0d2Vlbkdyb3VwID0gbmV3IFRXRUVOLkdyb3VwKCk7XG5cbi8vID09PT09IOeDremHjei9veaUr+aMgSA9PT09PVxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgbW9kdWxlLmhvdC5hY2NlcHQoJy4vY29uZmlnTG9hZGVyJywgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCfphY3nva7mlofku7blt7Lmm7TmlrDvvIzph43mlrDliqDovb0uLi4nKTtcbiAgICAvLyDph43mlrDliJ3lp4vljJbnu4Tku7bku6XlupTnlKjmlrDphY3nva5cbiAgICBpZiAoZWxlY3Ryb25CZWFtKSBlbGVjdHJvbkJlYW0udXBkYXRlTWF0ZXJpYWwoKTtcbiAgICBpZiAoc2NyZWVuQ29udHJvbGxlcikgc2NyZWVuQ29udHJvbGxlci51cGRhdGVNYXRlcmlhbCgpO1xuICAgIGlmIChjcnRTaGVsbCkgY3J0U2hlbGwudXBkYXRlQ29uZmlnKCk7ICAvLyDmt7vliqBDUlRTaGVsbOWTjeW6lOW8j+abtOaWsFxuICB9KTtcbiAgXG4gIG1vZHVsZS5ob3QuYWNjZXB0KFsnLi9jb21wb25lbnRzL0VsZWN0cm9uQmVhbScsICcuL2NvbXBvbmVudHMvU2NyZWVuJywgJy4vY29tcG9uZW50cy9XYXZlZm9ybUdlbmVyYXRvcicsICcuL2NvbXBvbmVudHMvQ1JUU2hlbGwnXSwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCfnu4Tku7blt7Lmm7TmlrDvvIzph43mlrDliqDovb0uLi4nKTtcbiAgfSk7XG59XG5cbi8vID09PT09IOWcuuaZr+WvueixoeW8leeUqCA9PT09PVxubGV0IGd1biwgZ3VuSGVhZCwgdjEsIHYyLCBoMSwgaDIsIHNjcmVlbjsgIC8vIOeUteWtkOaequOAgeeUteWtkOaequWktOOAgeWeguebtOWBj+i9rOadv+OAgeawtOW5s+WBj+i9rOadv+OAgeiNp+WFieWxjyAgICBcblxuLy8gPT09PT0g5bel5YW35Ye95pWwID09PT09XG4vKipcbiAqIOino+aekOminOiJsuWAvO+8jOaUr+aMgeWkmuenjeagvOW8j1xuICogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfSBjb2xvciAtIOminOiJsuWAvO+8iOWPr+S7peaYryBcIiNmZmZmZmZcIiwgXCIweGZmZmZmZlwiLCBSR0LnrYnmoLzlvI/vvIlcbiAqIEByZXR1cm5zIHtudW1iZXJ8bnVsbH0gLSDop6PmnpDlkI7nmoTljYHlha3ov5vliLbmlbDlgLzvvIzlpLHotKXov5Tlm55udWxsXG4gKi9cbmZ1bmN0aW9uIHBhcnNlQ29sb3IoY29sb3IpIHtcbiAgdHJ5IHtcbiAgICBpZiAodHlwZW9mIGNvbG9yID09PSAnbnVtYmVyJykge1xuICAgICAgcmV0dXJuIGNvbG9yO1xuICAgIH1cbiAgICBcbiAgICBpZiAodHlwZW9mIGNvbG9yID09PSAnc3RyaW5nJykge1xuICAgICAgLy8g5aSE55CG5Y2B5YWt6L+b5Yi25qC85byPIFwiMHhmZmZmZmZcIlxuICAgICAgaWYgKGNvbG9yLnN0YXJ0c1dpdGgoJzB4JykpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KGNvbG9yLCAxNik7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIOWkhOeQhkNTU+WNgeWFrei/m+WItuagvOW8jyBcIiNmZmZmZmZcIlxuICAgICAgaWYgKGNvbG9yLnN0YXJ0c1dpdGgoJyMnKSkge1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQoY29sb3IucmVwbGFjZSgnIycsICcweCcpLCAxNik7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIOWkhOeQhue6r+WNgeWFrei/m+WItuWtl+espuS4siBcImZmZmZmZlwiXG4gICAgICBpZiAoL15bMC05YS1mQS1GXXs2fSQvLnRlc3QoY29sb3IpKSB7XG4gICAgICAgIHJldHVybiBwYXJzZUludCgnMHgnICsgY29sb3IsIDE2KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8g5bCd6K+V55u05o6l6Kej5p6QXG4gICAgICBjb25zdCBwYXJzZWQgPSBwYXJzZUludChjb2xvciwgMTYpO1xuICAgICAgaWYgKCFpc05hTihwYXJzZWQpKSB7XG4gICAgICAgIHJldHVybiBwYXJzZWQ7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNvbnNvbGUud2Fybign5peg5rOV6Kej5p6Q6aKc6Imy5YC8OicsIGNvbG9yKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfpopzoibLop6PmnpDplJnor686JywgZXJyb3IsICfovpPlhaXlgLw6JywgY29sb3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbi8vID09PT09IOWIneWni+WMluWHveaVsCA9PT09PVxuYXN5bmMgZnVuY3Rpb24gaW5pdCgpIHtcbiAgY29uc29sZS5sb2coJ+WIneWni+WMluW6lOeUqC4uLicpO1xuICBpbml0U2NlbmUoKTsgLy8g5Yid5aeL5YyW5Zy65pmvXG4gIGluaXRDYW1lcmEoKTsgLy8g5Yid5aeL5YyW55u45py6XG4gIGluaXRSZW5kZXJlcigpOyAvLyDliJ3lp4vljJbmuLLmn5PlmahcbiAgaW5pdENvbnRyb2xzKCk7IC8vIOWIneWni+WMluaOp+WItuWZqFxuICBpbml0TGlnaHRzKCk7IC8vIOWIneWni+WMluWFiea6kFxuICBpbml0R3JpZCgpOyAvLyDliJ3lp4vljJbnvZHmoLxcbiAgYXdhaXQgaW5pdE1hdGVyaWFscygpOyAvLyDliJ3lp4vljJbmnZDotKjvvIjlvILmraXvvIlcbiAgaW5pdENvbXBvbmVudHMoKTsgLy8g5Yid5aeL5YyW57uE5Lu2XG4gIGNvbnNvbGUubG9nKCfliJ3lp4vljJbmoIfnrb7ns7vnu58uLi4nKTtcbiAgaW5pdExhYmVsU3lzdGVtKCk7IC8vIOWIneWni+WMluagh+etvuezu+e7n1xuICBjb25zb2xlLmxvZygn5Yid5aeL5YyW5YiG6Kej6KeG5Zu+Li4uJyk7XG4gIGluaXRFeHBsb2RlZFZpZXcoKTsgLy8g5Yid5aeL5YyW5YiG6Kej6KeG5Zu+XG4gIGNvbnNvbGUubG9nKCfliJ3lp4vljJZHVUkuLi4nKTtcbiAgaW5pdEd1aSgpOyAvLyDliJ3lp4vljJZHVUnvvIjpnIDopoHlnKjmvJTnpLrliqjnlLvkuYvliY3liJ3lp4vljJbvvIlcbiAgY29uc29sZS5sb2coJ+WIneWni+WMlua8lOekuuWKqOeUuy4uLicpO1xuICBpbml0RGVtb0FuaW1hdGlvbigpOyAvLyDliJ3lp4vljJbmvJTnpLrliqjnlLtcbiAgY29uc29sZS5sb2coJ+WIneWni+WMllVJ5o6n5Yi25ZmoLi4uJyk7XG4gIGluaXRVSUNvbnRyb2xsZXIoKTsgLy8g5Yid5aeL5YyWVUnmjqfliLblmahcbiAgXG4gIC8vIOWIneWni+WMluazouW9ouaYvuekulxuICB1cGRhdGVTY3JlZW5XYXZlZm9ybSgpO1xuICBcbiAgLy8g5Yid5aeL5YyW55S15a2Q5p2f77yI56Gu5L+d5ZCv5Yqo5pe25bCx5pyJ55S15a2Q5p2f5pi+56S677yJXG4gIHVwZGF0ZUVsZWN0cm9uQmVhbSgpO1xuICBcbiAgLy8g5byA5aeL5Yqo55S75b6q546vXG4gIGFuaW1hdGUoKTsgLy8g5byA5aeL5Yqo55S75b6q546vXG4gIFxuICAvLyDnqpflj6Poh6rpgILlupRcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIG9uV2luZG93UmVzaXplKTsgICAvLyDnqpflj6PlpKflsI/osIPmlbTkuovku7bnm5HlkKxcbiAgXG4gIGNvbnNvbGUubG9nKCflupTnlKjliJ3lp4vljJblrozmiJAnKTtcbn1cblxuLy8gPT09PT0g5Zy65pmv5Yid5aeL5YyWID09PT09XG5mdW5jdGlvbiBpbml0U2NlbmUoKSB7XG4gIHNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCk7IC8vIOWIm+W7uuWcuuaZr1xuICBzY2VuZS5iYWNrZ3JvdW5kID0gbmV3IFRIUkVFLkNvbG9yKENPTkZJRy5zY2VuZS5iYWNrZ3JvdW5kKTsgLy8g6K6+572u5Zy65pmv6IOM5pmv6aKc6ImyXG59XG5cbi8vID09PT09IOebuOacuuWIneWni+WMliA9PT09PVxuZnVuY3Rpb24gaW5pdENhbWVyYSgpIHtcbiAgY2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKCAvLyDpgI/op4bnm7jmnLpcbiAgICBDT05GSUcuY2FtZXJhLmZvdiwgLy8g6KeG6KeSXG4gICAgd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQsIC8vIOWuvemrmOavlFxuICAgIENPTkZJRy5jYW1lcmEubmVhciwgLy8g6L+R5oiq6Z2iXG4gICAgQ09ORklHLmNhbWVyYS5mYXIgLy8g6L+c5oiq6Z2iXG4gICk7XG4gIGNhbWVyYS5wb3NpdGlvbi5zZXQoQ09ORklHLmNhbWVyYS5wb3NpdGlvbi54LCBDT05GSUcuY2FtZXJhLnBvc2l0aW9uLnksIENPTkZJRy5jYW1lcmEucG9zaXRpb24ueik7IC8vIOiuvue9ruebuOacuuS9jee9rlxufVxuXG4vLyA9PT09PSDmuLLmn5PlmajliJ3lp4vljJYgPT09PT1cbmZ1bmN0aW9uIGluaXRSZW5kZXJlcigpIHtcbiAgcmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7IGFudGlhbGlhczogdHJ1ZSB9KTsgLy8g5Yib5bu65riy5p+T5ZmoXG4gIFxuICAvLyDpq5hEUEnlsY/luZXpgILphY1cbiAgY29uc3QgZGV2aWNlUGl4ZWxSYXRpbyA9IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDE7XG4gIHJlbmRlcmVyLnNldFBpeGVsUmF0aW8oTWF0aC5taW4oZGV2aWNlUGl4ZWxSYXRpbywgMikpOyAvLyDpmZDliLbmnIDlpKdEUEnmr5TnjofkuLoyXG4gIHJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7IC8vIOiuvue9rua4suafk+WZqOWkp+Wwj1xuICBcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChyZW5kZXJlci5kb21FbGVtZW50KTsgLy8g5bCG5riy5p+T5Zmo5re75Yqg5Yiw5paH5qGj5LitXG59XG5cbi8vID09PT09IOaOp+WItuWZqOWIneWni+WMliA9PT09PVxuZnVuY3Rpb24gaW5pdENvbnRyb2xzKCkgeyBcbiAgY29udHJvbHMgPSBuZXcgT3JiaXRDb250cm9scyhjYW1lcmEsIHJlbmRlcmVyLmRvbUVsZW1lbnQpOyAvLyDliJvlu7rmjqfliLblmahcbiAgY29udHJvbHMuZW5hYmxlRGFtcGluZyA9IHRydWU7IC8vIOWQr+eUqOmYu+WwvFxufVxuXG4vLyA9PT09PSDlhYnmupDliJ3lp4vljJYgPT09PT1cbmZ1bmN0aW9uIGluaXRMaWdodHMoKSB7IFxuICAvLyDnjq/looPlhYkgLSDkuLrph5HlsZ7mnZDotKjmj5Dkvpvln7rnoYDnhafmmI5cbiAgc2NlbmUuYWRkKG5ldyBUSFJFRS5BbWJpZW50TGlnaHQoMHhmZmZmZmYsIDAuNCkpOyBcbiAgXG4gIC8vIOS4u+imgeWumuWQkeWFiSAtIOaooeaLn+WkqumYs+WFie+8jOWinuW8uumHkeWxnuWPjeWwhOaViOaenFxuICBjb25zdCBkaXJlY3Rpb25hbExpZ2h0ID0gbmV3IFRIUkVFLkRpcmVjdGlvbmFsTGlnaHQoMHhmZmZmZmYsIDAuOCk7XG4gIGRpcmVjdGlvbmFsTGlnaHQucG9zaXRpb24uc2V0KDEwLCAxMCwgNSk7XG4gIGRpcmVjdGlvbmFsTGlnaHQuY2FzdFNoYWRvdyA9IHRydWU7XG4gIHNjZW5lLmFkZChkaXJlY3Rpb25hbExpZ2h0KTtcbiAgXG4gIC8vIOihpeWFheeCueWFiea6kCAtIOS7juS4jeWQjOinkuW6pueFp+S6rumHkeWxnuihqOmdolxuICBjb25zdCBwb2ludExpZ2h0MSA9IG5ldyBUSFJFRS5Qb2ludExpZ2h0KDB4ZmZmZmZmLCAwLjYpO1xuICBwb2ludExpZ2h0MS5wb3NpdGlvbi5zZXQoLTEwLCA4LCA4KTtcbiAgc2NlbmUuYWRkKHBvaW50TGlnaHQxKTtcbiAgXG4gIC8vIOesrOS6jOS4queCueWFiea6kCAtIOWinuWKoOmHkeWxnuadkOi0qOeahOmrmOWFieaViOaenFxuICBjb25zdCBwb2ludExpZ2h0MiA9IG5ldyBUSFJFRS5Qb2ludExpZ2h0KDB4ZjBmMGYwLCAwLjQpO1xuICBwb2ludExpZ2h0Mi5wb3NpdGlvbi5zZXQoNSwgLTUsIDEwKTtcbiAgc2NlbmUuYWRkKHBvaW50TGlnaHQyKTtcbn1cblxuLy8gPT09PT0g572R5qC85Zyw6Z2i5Yid5aeL5YyWID09PT09XG5mdW5jdGlvbiBpbml0R3JpZCgpIHtcbiAgY29uc3QgZ3JpZCA9IG5ldyBUSFJFRS5HcmlkSGVscGVyKFxuICAgIENPTkZJRy5zY2VuZS5ncmlkLnNpemUsIFxuICAgIENPTkZJRy5zY2VuZS5ncmlkLmRpdmlzaW9ucywgXG4gICAgQ09ORklHLnNjZW5lLmdyaWQuY29sb3IxLCBcbiAgICBDT05GSUcuc2NlbmUuZ3JpZC5jb2xvcjJcbiAgKTsgLy8g5Yib5bu6572R5qC8XG4gIGdyaWQucG9zaXRpb24uc2V0KFxuICAgIENPTkZJRy5zY2VuZS5ncmlkLnBvc2l0aW9uLngsIFxuICAgIENPTkZJRy5zY2VuZS5ncmlkLnBvc2l0aW9uLnksIFxuICAgIENPTkZJRy5zY2VuZS5ncmlkLnBvc2l0aW9uLnpcbiAgKTsgLy8g6K6+572u572R5qC85L2N572uXG4gIHNjZW5lLmFkZChncmlkKTsgLy8g5bCG572R5qC85re75Yqg5Yiw5Zy65pmv5LitXG59XG5cbi8vID09PT09IOadkOi0qOWIneWni+WMliA9PT09PVxuYXN5bmMgZnVuY3Rpb24gaW5pdE1hdGVyaWFscygpIHtcbiAgY29uc29sZS5sb2coJ+WIneWni+WMluadkOi0qOeuoeeQhuWZqC4uLicpO1xuICBtYXRlcmlhbE1hbmFnZXIgPSBuZXcgTWF0ZXJpYWxNYW5hZ2VyKCk7XG4gIGF3YWl0IG1hdGVyaWFsTWFuYWdlci5pbml0aWFsaXplTWF0ZXJpYWxzKCk7XG4gIFxuICBjb25zb2xlLmxvZygn5Yid5aeL5YyW57uf5LiA57uE5Lu25p2Q6LSo566h55CG5ZmoLi4uJyk7XG4gIGF3YWl0IHVuaWZpZWRDb21wb25lbnRNYXRlcmlhbC5pbml0aWFsaXplKCk7XG4gIFxuICBjb25zb2xlLmxvZygn5p2Q6LSo5Yid5aeL5YyW5a6M5oiQJyk7XG59XG5cbi8vID09PT09IOe7hOS7tuWIneWni+WMliA9PT09PVxuZnVuY3Rpb24gaW5pdENvbXBvbmVudHMoKSB7XG4gIC8vIOS7juadkOi0qOeuoeeQhuWZqOiOt+WPluadkOi0qFxuICBjb25zdCBtZXRhbE1hdCA9IG1hdGVyaWFsTWFuYWdlci5nZXRNYXRlcmlhbCgnbWV0YWwnKTtcbiAgY29uc3QgcGxhdGVNYXQgPSBtYXRlcmlhbE1hbmFnZXIuZ2V0TWF0ZXJpYWwoJ3BsYXRlJyk7XG4gIGNvbnN0IHNjcmVlbk1hdCA9IG1hdGVyaWFsTWFuYWdlci5nZXRNYXRlcmlhbCgnc2NyZWVuJyk7XG4gIGNvbnN0IGdsb3dQb2ludE1hdCA9IG1hdGVyaWFsTWFuYWdlci5nZXRNYXRlcmlhbCgnZ2xvd1BvaW50Jyk7XG5cbiAgLy8g55S15a2Q5p6qXG4gIGd1biA9IG5ldyBUSFJFRS5NZXNoKFxuICAgIG5ldyBUSFJFRS5DeWxpbmRlckdlb21ldHJ5KENPTkZJRy5jb21wb25lbnRzLmd1bi5yYWRpdXMsIDAuMywgQ09ORklHLmNvbXBvbmVudHMuZ3VuLmhlaWdodCwgMzIpLFxuICAgIG1ldGFsTWF0XG4gICk7XG4gIGd1bi5yb3RhdGlvbi56ID0gTWF0aC5QSSAvIDI7XG4gIGd1bi5wb3NpdGlvbi5zZXQoQ09ORklHLmNvbXBvbmVudHMuZ3VuLnBvc2l0aW9uLngsIENPTkZJRy5jb21wb25lbnRzLmd1bi5wb3NpdGlvbi55LCBDT05GSUcuY29tcG9uZW50cy5ndW4ucG9zaXRpb24ueik7XG4gIHNjZW5lLmFkZChndW4pO1xuXG4gIGd1bkhlYWQgPSBuZXcgVEhSRUUuTWVzaChcbiAgICBuZXcgVEhSRUUuQ3lsaW5kZXJHZW9tZXRyeShDT05GSUcuY29tcG9uZW50cy5ndW5IZWFkLnJhZGl1cywgQ09ORklHLmNvbXBvbmVudHMuZ3VuSGVhZC5yYWRpdXMsIENPTkZJRy5jb21wb25lbnRzLmd1bkhlYWQuaGVpZ2h0LCAzMiksXG4gICAgbWV0YWxNYXRcbiAgKTtcbiAgZ3VuSGVhZC5yb3RhdGlvbi56ID0gTWF0aC5QSSAvIDI7XG4gIGd1bkhlYWQucG9zaXRpb24uc2V0KENPTkZJRy5jb21wb25lbnRzLmd1bkhlYWQucG9zaXRpb24ueCwgQ09ORklHLmNvbXBvbmVudHMuZ3VuSGVhZC5wb3NpdGlvbi55LCBDT05GSUcuY29tcG9uZW50cy5ndW5IZWFkLnBvc2l0aW9uLnopO1xuICBzY2VuZS5hZGQoZ3VuSGVhZCk7XG5cbiAgLy8g5Z6C55u05YGP6L2s5p2/XG4gIGNvbnN0IHZHZW9tID0gbmV3IFRIUkVFLkJveEdlb21ldHJ5KENPTkZJRy5jb21wb25lbnRzLnZlcnRpY2FsUGxhdGVzLndpZHRoLCBDT05GSUcuY29tcG9uZW50cy52ZXJ0aWNhbFBsYXRlcy5oZWlnaHQsIENPTkZJRy5jb21wb25lbnRzLnZlcnRpY2FsUGxhdGVzLmRlcHRoKTtcbiAgdjEgPSBuZXcgVEhSRUUuTWVzaCh2R2VvbSwgcGxhdGVNYXQpO1xuICB2MiA9IHYxLmNsb25lKCk7XG5cbiAgdjEucm90YXRpb24ueCA9IE1hdGguUEkgLyAyO1xuICB2Mi5yb3RhdGlvbi54ID0gTWF0aC5QSSAvIDI7XG4gIC8vIOWGjee7lSBaIOi9tCA5MMKwXG4gIHYxLnJvdGF0aW9uLnkgKz0gTWF0aC5QSSAvIDI7XG4gIHYyLnJvdGF0aW9uLnkgKz0gTWF0aC5QSSAvIDI7XG5cbiAgdjEucG9zaXRpb24uc2V0KENPTkZJRy5jb21wb25lbnRzLnZlcnRpY2FsUGxhdGVzLnBvc2l0aW9uc1swXS54LCBDT05GSUcuY29tcG9uZW50cy52ZXJ0aWNhbFBsYXRlcy5wb3NpdGlvbnNbMF0ueSwgQ09ORklHLmNvbXBvbmVudHMudmVydGljYWxQbGF0ZXMucG9zaXRpb25zWzBdLnopO1xuICB2Mi5wb3NpdGlvbi5zZXQoQ09ORklHLmNvbXBvbmVudHMudmVydGljYWxQbGF0ZXMucG9zaXRpb25zWzFdLngsIENPTkZJRy5jb21wb25lbnRzLnZlcnRpY2FsUGxhdGVzLnBvc2l0aW9uc1sxXS55LCBDT05GSUcuY29tcG9uZW50cy52ZXJ0aWNhbFBsYXRlcy5wb3NpdGlvbnNbMV0ueik7XG4gIHNjZW5lLmFkZCh2MSwgdjIpO1xuXG4gIC8vIOawtOW5s+WBj+i9rOadv1xuICBjb25zdCBoR2VvbSA9IG5ldyBUSFJFRS5Cb3hHZW9tZXRyeShDT05GSUcuY29tcG9uZW50cy5ob3Jpem9udGFsUGxhdGVzLndpZHRoLCBDT05GSUcuY29tcG9uZW50cy5ob3Jpem9udGFsUGxhdGVzLmhlaWdodCwgQ09ORklHLmNvbXBvbmVudHMuaG9yaXpvbnRhbFBsYXRlcy5kZXB0aCk7XG4gIGgxID0gbmV3IFRIUkVFLk1lc2goaEdlb20sIHBsYXRlTWF0KTtcbiAgaDIgPSBoMS5jbG9uZSgpO1xuXG4gIGgxLnJvdGF0aW9uLnggPSAtTWF0aC5QSSAvIDI7XG4gIGgyLnJvdGF0aW9uLnggPSAtTWF0aC5QSSAvIDI7XG5cbiAgaDEucG9zaXRpb24uc2V0KENPTkZJRy5jb21wb25lbnRzLmhvcml6b250YWxQbGF0ZXMucG9zaXRpb25zWzBdLngsIENPTkZJRy5jb21wb25lbnRzLmhvcml6b250YWxQbGF0ZXMucG9zaXRpb25zWzBdLnksIENPTkZJRy5jb21wb25lbnRzLmhvcml6b250YWxQbGF0ZXMucG9zaXRpb25zWzBdLnopO1xuICBoMi5wb3NpdGlvbi5zZXQoQ09ORklHLmNvbXBvbmVudHMuaG9yaXpvbnRhbFBsYXRlcy5wb3NpdGlvbnNbMV0ueCwgQ09ORklHLmNvbXBvbmVudHMuaG9yaXpvbnRhbFBsYXRlcy5wb3NpdGlvbnNbMV0ueSwgQ09ORklHLmNvbXBvbmVudHMuaG9yaXpvbnRhbFBsYXRlcy5wb3NpdGlvbnNbMV0ueik7XG4gIHNjZW5lLmFkZChoMSwgaDIpO1xuXG4gIC8vIOiNp+WFieWxj1xuICBzY3JlZW4gPSBuZXcgVEhSRUUuTWVzaChuZXcgVEhSRUUuUGxhbmVHZW9tZXRyeShDT05GSUcuY29tcG9uZW50cy5zY3JlZW4ud2lkdGgsIENPTkZJRy5jb21wb25lbnRzLnNjcmVlbi5oZWlnaHQpLCBzY3JlZW5NYXQpOyAvLyDliJvlu7rojaflhYnlsY9cbiAgc2NyZWVuLnBvc2l0aW9uLnNldChDT05GSUcuY29tcG9uZW50cy5zY3JlZW4ucG9zaXRpb24ueCwgQ09ORklHLmNvbXBvbmVudHMuc2NyZWVuLnBvc2l0aW9uLnksIENPTkZJRy5jb21wb25lbnRzLnNjcmVlbi5wb3NpdGlvbi56KTsgLy8g6K6+572u6I2n5YWJ5bGP5L2N572uXG4gIHNjcmVlbi5yb3RhdGlvbi55ID0gLU1hdGguUEkgLyAyOyAvLyDorr7nva7ojaflhYnlsY/ml4vovaxcbiAgc2NyZWVuLnJlbmRlck9yZGVyID0gMTsgLy8g6K6+572u5riy5p+T6aG65bqP77yM56Gu5L+d5Zyo55S15a2Q57KS5a2Q5LmL5YmN5riy5p+TXG4gIHNjZW5lLmFkZChzY3JlZW4pOyAvLyDlsIbojaflhYnlsY/mt7vliqDliLDlnLrmma/kuK1cbiAgIFxuICBcbiAgLy8g5Yid5aeL5YyW55S15a2Q5p2f5o6n5Yi25ZmoXG4gIGVsZWN0cm9uQmVhbSA9IG5ldyBFbGVjdHJvbkJlYW0oc2NlbmUpO1xuICBcbiAgLy8g5Yid5aeL5YyW5rOi5b2i55Sf5oiQ5ZmoXG4gIHdhdmVmb3JtR2VuZXJhdG9yID0gbmV3IFdhdmVmb3JtR2VuZXJhdG9yKCk7XG4gIFxuICAvLyDorr7nva7ms6LlvaLph43nva7lm57osIPvvIzlnKjmlrDlkajmnJ/lvIDlp4vml7bmuIXpmaTlm57miavnur9cbiAgd2F2ZWZvcm1HZW5lcmF0b3Iuc2V0V2F2ZWZvcm1SZXNldENhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoZWxlY3Ryb25CZWFtKSB7XG4gICAgICBlbGVjdHJvbkJlYW0uc3RhcnROZXdUcmFjZVNlZ21lbnQoKTtcbiAgICB9XG4gIH0pO1xuICBcbiAgLy8g5Yid5aeL5YyW6I2n5YWJ5bGP5o6n5Yi25ZmoXG4gIHNjcmVlbkNvbnRyb2xsZXIgPSBuZXcgU2NyZWVuKHNjZW5lLCBzY3JlZW4pO1xuICBcbiAgLy8g5Yid5aeL5YyWQ1JU5aSW5aOzXG4gIGNydFNoZWxsID0gbmV3IENSVFNoZWxsKCk7XG4gIHNjZW5lLmFkZChjcnRTaGVsbC5nZXRTaGVsbCgpKTtcbiAgXG4gIC8vIOWIneWni+WMlui/nuaOpeS9jee9rua8lOekuu+8iOS9v+WFtuWcqOWFqOWxgOWPr+eUqO+8iVxuICB3aW5kb3cuY29ubmVjdGlvbkRlbW8gPSBuZXcgQ29ubmVjdGlvblBvc2l0aW9uRGVtbyhjcnRTaGVsbCk7XG4gIFxuICAvLyDliJ3lp4vljJbotoXmpK3lnIblvaLnirbmuJDlj5jmvJTnpLrvvIjkvb/lhbblnKjlhajlsYDlj6/nlKjvvIlcbiAgd2luZG93LnRyYW5zaXRpb25EZW1vID0gbmV3IFN1cGVyZWxsaXBzZVRyYW5zaXRpb25EZW1vKGNydFNoZWxsKTtcbn1cblxuLy8gPT09PT0g5qCH562+57O757uf5Yid5aeL5YyWID09PT09XG5mdW5jdGlvbiBpbml0TGFiZWxTeXN0ZW0oKSB7XG4gIC8vIOWIm+W7uuagh+etvuezu+e7n1xuICBsYWJlbFN5c3RlbSA9IG5ldyBMYWJlbFN5c3RlbShzY2VuZSwgZG9jdW1lbnQuYm9keSk7XG4gIFxuICAvLyDkuLrlkITnu4Tku7bmt7vliqDmoIfnrb5cbiAgY29uc3QgY29tcG9uZW50TGFiZWxzID0gW1xuICAgIHsgaWQ6ICdndW4nLCB0YXJnZXQ6IGd1biwgdGV4dDogQ09ORklHLmRlc2NyaXB0aW9ucy5ndW4ubmFtZSwgb2Zmc2V0OiBuZXcgVEhSRUUuVmVjdG9yMygwLCAwLjUsIDApLCBkZXNjcmlwdGlvbjogQ09ORklHLmRlc2NyaXB0aW9ucy5ndW4uZGVzY3JpcHRpb24gfSxcbiAgICB7IGlkOiAnZ3VuSGVhZCcsIHRhcmdldDogZ3VuSGVhZCwgdGV4dDogQ09ORklHLmRlc2NyaXB0aW9ucy5ndW5IZWFkLm5hbWUsIG9mZnNldDogbmV3IFRIUkVFLlZlY3RvcjMoMCwgMC4zLCAwKSwgZGVzY3JpcHRpb246IENPTkZJRy5kZXNjcmlwdGlvbnMuZ3VuSGVhZC5kZXNjcmlwdGlvbiB9LFxuICAgIHsgaWQ6ICd2MScsIHRhcmdldDogdjEsIHRleHQ6IENPTkZJRy5kZXNjcmlwdGlvbnMudjEubmFtZSwgb2Zmc2V0OiBuZXcgVEhSRUUuVmVjdG9yMygwLCAwLjMsIDApLCBkZXNjcmlwdGlvbjogQ09ORklHLmRlc2NyaXB0aW9ucy52MS5kZXNjcmlwdGlvbiB9LFxuICAgIHsgaWQ6ICd2MicsIHRhcmdldDogdjIsIHRleHQ6IENPTkZJRy5kZXNjcmlwdGlvbnMudjIubmFtZSwgb2Zmc2V0OiBuZXcgVEhSRUUuVmVjdG9yMygwLCAtMC4zLCAwKSwgZGVzY3JpcHRpb246IENPTkZJRy5kZXNjcmlwdGlvbnMudjIuZGVzY3JpcHRpb24gfSxcbiAgICB7IGlkOiAnaDEnLCB0YXJnZXQ6IGgxLCB0ZXh0OiBDT05GSUcuZGVzY3JpcHRpb25zLmgxLm5hbWUsIG9mZnNldDogbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMC4zKSwgZGVzY3JpcHRpb246IENPTkZJRy5kZXNjcmlwdGlvbnMuaDEuZGVzY3JpcHRpb24gfSxcbiAgICB7IGlkOiAnaDInLCB0YXJnZXQ6IGgyLCB0ZXh0OiBDT05GSUcuZGVzY3JpcHRpb25zLmgyLm5hbWUsIG9mZnNldDogbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgLTAuMyksIGRlc2NyaXB0aW9uOiBDT05GSUcuZGVzY3JpcHRpb25zLmgyLmRlc2NyaXB0aW9uIH0sXG4gICAgeyBpZDogJ3NjcmVlbicsIHRhcmdldDogc2NyZWVuLCB0ZXh0OiBDT05GSUcuZGVzY3JpcHRpb25zLnNjcmVlbi5uYW1lLCBvZmZzZXQ6IG5ldyBUSFJFRS5WZWN0b3IzKDAuMSwgMC41LCAwKSwgZGVzY3JpcHRpb246IENPTkZJRy5kZXNjcmlwdGlvbnMuc2NyZWVuLmRlc2NyaXB0aW9uIH1cbiAgXTtcbiAgXG4gIC8vIOWIm+W7uuagh+etvlxuICBjb21wb25lbnRMYWJlbHMuZm9yRWFjaChsYWJlbCA9PiB7XG4gICAgbGFiZWxTeXN0ZW0uY3JlYXRlTGFiZWwobGFiZWwuaWQsIGxhYmVsLnRleHQsIGxhYmVsLnRhcmdldCwgbGFiZWwub2Zmc2V0LCBsYWJlbC5kZXNjcmlwdGlvbik7XG4gIH0pO1xufVxuXG4vLyA9PT09PSDliIbop6Pop4blm77liJ3lp4vljJYgPT09PT1cbmZ1bmN0aW9uIGluaXRFeHBsb2RlZFZpZXcoKSB7XG4gIC8vIOWIm+W7uuWIhuino+inhuWbvuaOp+WItuWZqFxuICAvLyDms6jmhI/vvJrov5nkupvnu4Tku7bkuI3lj4LkuI7liIbop6PliqjnlLvvvIzkvYbpnIDopoHlvJXnlKjku6XmlK/mjIHnm7jmnLrogZrnhKblip/og71cbiAgZXhwbG9kZWRWaWV3ID0gbmV3IEV4cGxvZGVkVmlldyh7XG4gICAgLy8g5re75Yqg5Li76KaB57uE5Lu255qE5byV55So77yM55So5LqO55u45py66IGa54Sm5Yqf6IO9XG4gICAgLy8g6L+Z5Lqb57uE5Lu25LiN5Lya5pyJ5YiG6Kej5Yqo55S777yM5L2G5Y+v5Lul6KKr6IGa54SmXG4gICAgZ3VuOiBndW4sXG4gICAgZ3VuSGVhZDogZ3VuSGVhZCwgXG4gICAgdjE6IHYxLFxuICAgIHYyOiB2MixcbiAgICBoMTogaDEsXG4gICAgaDI6IGgyLFxuICAgIHNjcmVlbjogc2NyZWVuXG4gICAgLy8gQ1JU5aSW5aOzKGNydFNoZWxsKeacieiHquW3seeahOWGhemDqOWIhuino+acuuWItu+8jOS4jeWcqOatpOWkhOeQhlxuICB9KTtcbn1cblxuLy8gPT09PT0g5ryU56S65Yqo55S75Yid5aeL5YyWID09PT09XG5mdW5jdGlvbiBpbml0RGVtb0FuaW1hdGlvbigpIHtcbiAgLy8g5Yib5bu65ryU56S65Yqo55S75o6n5Yi25ZmoXG4gIGRlbW9BbmltYXRpb24gPSBuZXcgRGVtb0FuaW1hdGlvbihcbiAgICBzY2VuZSxcbiAgICB7XG4gICAgICBndW4sXG4gICAgICBndW5IZWFkLFxuICAgICAgdjEsXG4gICAgICB2MixcbiAgICAgIGgxLFxuICAgICAgaDIsXG4gICAgICBzY3JlZW46IHNjcmVlbkNvbnRyb2xsZXIsICAvLyDkvKDpgJJTY3JlZW7nsbvlrp7kvovogIzkuI3mmK9USFJFRS5qc+e9keagvOWvueixoVxuICAgICAgZWxlY3Ryb25CZWFtLFxuICAgICAgY3J0U2hlbGwgIC8vIOa3u+WKoGNydFNoZWxs57uE5Lu2XG4gICAgfSxcbiAgICB7XG4gICAgICBjYW1lcmEsXG4gICAgICBjb250cm9scyxcbiAgICAgIHNjcmVlbkNvbnRyb2xsZXIsXG4gICAgICBndWlDb250cm9sbGVyLCAgLy8g5Lyg6YCSR1VJ5o6n5Yi25Zmo77yM55So5LqO5ryU56S65pe25oqY5Y+g6Z2i5p2/XG4gICAgICBvbkRlZmxlY3Rpb25DaGFuZ2U6IChkZWZsZWN0aW9uUGFyYW1zKSA9PiB7XG4gICAgICAgIHVwZGF0ZUVsZWN0cm9uQmVhbSgpO1xuICAgICAgfSxcbiAgICAgIG9uV2F2ZWZvcm1DaGFuZ2U6ICh3YXZlZm9ybVBhcmFtcykgPT4ge1xuICAgICAgICB1cGRhdGVFbGVjdHJvbkJlYW0oKTtcbiAgICAgICAgdXBkYXRlU2NyZWVuV2F2ZWZvcm0oKTtcbiAgICAgIH1cbiAgICB9XG4gICk7XG4gIFxuICAvLyDorr7nva7lhajlsYDlvJXnlKjkvpvms6LlvaLnlJ/miJDlmajkvb/nlKhcbiAgd2luZG93LmRlbW9BbmltYXRpb24gPSBkZW1vQW5pbWF0aW9uO1xuICBcbiAgLy8gPT09PT0g6KeG6KeS5p+l55yL5ZmoIC0g5Zyo5o6n5Yi25Y+w5p+l55yL5b2T5YmN5pGE5YOP5aS05L2N572u5ZKM55uu5qCHID09PT09XG4gIHdpbmRvdy5nZXRWaWV3ID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKCFjYW1lcmEgfHwgIWNvbnRyb2xzKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ+KaoO+4jyDmkYTlg4/lpLTmiJbmjqfliLblmajmnKrliJ3lp4vljJYnKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCB2aWV3SW5mbyA9IHtcbiAgICAgIHBvc2l0aW9uOiB7IFxuICAgICAgICB4OiBNYXRoLnJvdW5kKGNhbWVyYS5wb3NpdGlvbi54ICogMTAwKSAvIDEwMCxcbiAgICAgICAgeTogTWF0aC5yb3VuZChjYW1lcmEucG9zaXRpb24ueSAqIDEwMCkgLyAxMDAsIFxuICAgICAgICB6OiBNYXRoLnJvdW5kKGNhbWVyYS5wb3NpdGlvbi56ICogMTAwKSAvIDEwMCBcbiAgICAgIH0sXG4gICAgICB0YXJnZXQ6IHsgXG4gICAgICAgIHg6IE1hdGgucm91bmQoY29udHJvbHMudGFyZ2V0LnggKiAxMDApIC8gMTAwLFxuICAgICAgICB5OiBNYXRoLnJvdW5kKGNvbnRyb2xzLnRhcmdldC55ICogMTAwKSAvIDEwMCwgXG4gICAgICAgIHo6IE1hdGgucm91bmQoY29udHJvbHMudGFyZ2V0LnogKiAxMDApIC8gMTAwIFxuICAgICAgfVxuICAgIH07XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/Cfk7cg5b2T5YmN6KeG6KeS5L+h5oGvOicpO1xuICAgIGNvbnNvbGUubG9nKCfkvY3nva4gKHBvc2l0aW9uKTonLCB2aWV3SW5mby5wb3NpdGlvbik7XG4gICAgY29uc29sZS5sb2coJ+ebruaghyAodGFyZ2V0KTonLCB2aWV3SW5mby50YXJnZXQpO1xuICAgIGNvbnNvbGUubG9nKCctLS0nKTtcbiAgICBjb25zb2xlLmxvZygn5aSN5Yi255So5Luj56CBOicpO1xuICAgIGNvbnNvbGUubG9nKGBwb3NpdGlvbjogeyB4OiAke3ZpZXdJbmZvLnBvc2l0aW9uLnh9LCB5OiAke3ZpZXdJbmZvLnBvc2l0aW9uLnl9LCB6OiAke3ZpZXdJbmZvLnBvc2l0aW9uLnp9IH1gKTtcbiAgICBjb25zb2xlLmxvZyhgdGFyZ2V0OiB7IHg6ICR7dmlld0luZm8udGFyZ2V0Lnh9LCB5OiAke3ZpZXdJbmZvLnRhcmdldC55fSwgejogJHt2aWV3SW5mby50YXJnZXQuen0gfWApO1xuICAgIFxuICAgIHJldHVybiB2aWV3SW5mbztcbiAgfTtcbn1cblxuLy8gPT09PT0gR1VJ5Yid5aeL5YyWID09PT09XG5mdW5jdGlvbiBpbml0R3VpKCkge1xuICBndWlDb250cm9sbGVyID0gbmV3IEd1aUNvbnRyb2xsZXIoe1xuICAgIG9uQmVhbUNoYW5nZTogKGJlYW1QYXJhbXMpID0+IHtcbiAgICAgIGVsZWN0cm9uQmVhbS51cGRhdGVNYXRlcmlhbCgpO1xuICAgIH0sXG4gICAgb25EZWZsZWN0aW9uQ2hhbmdlOiAoZGVmbGVjdGlvblBhcmFtcykgPT4ge1xuICAgICAgdXBkYXRlRWxlY3Ryb25CZWFtKCk7XG4gICAgfSxcbiAgICBvbldhdmVmb3JtQ2hhbmdlOiAod2F2ZWZvcm1QYXJhbXMpID0+IHtcbiAgICAgIC8vIOazouW9ouWPguaVsOWPmOWMluaXtu+8jOmcgOimgeabtOaWsOeUteWtkOadn1xuICAgICAgdXBkYXRlRWxlY3Ryb25CZWFtKCk7XG4gICAgICAvLyDlkIzml7bmm7TmlrDojaflhYnlsY/kuIrnmoTms6LlvaLmmL7npLpcbiAgICAgIHVwZGF0ZVNjcmVlbldhdmVmb3JtKCk7XG4gICAgfSxcbiAgICBvblNjcmVlbkNoYW5nZTogKHNjcmVlblBhcmFtcykgPT4ge1xuICAgICAgc2NyZWVuQ29udHJvbGxlci51cGRhdGVNYXRlcmlhbCgpO1xuICAgIH0sXG4gICAgb25TaGVsbENoYW5nZTogKHNoZWxsUGFyYW1zKSA9PiB7XG4gICAgICBpZiAoY3J0U2hlbGwpIHtcbiAgICAgICAgY3J0U2hlbGwuc2V0VmlzaWJsZShzaGVsbFBhcmFtcy52aXNpYmxlKTtcbiAgICAgICAgY3J0U2hlbGwuc2V0T3BhY2l0eShzaGVsbFBhcmFtcy5vcGFjaXR5KTtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAvLyDlpITnkIbnrKzkuIDkuKrlnIbmn7HkvZNcbiAgICAgICAgaWYgKHNoZWxsUGFyYW1zLmN5bGluZGVyMSkge1xuICAgICAgICAgIGlmIChzaGVsbFBhcmFtcy5jeWxpbmRlcjEuaGFzT3duUHJvcGVydHkoJ3Zpc2libGUnKSkge1xuICAgICAgICAgICAgY3J0U2hlbGwuc2V0Q3lsaW5kZXIxVmlzaWJsZShzaGVsbFBhcmFtcy5jeWxpbmRlcjEudmlzaWJsZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzaGVsbFBhcmFtcy5jeWxpbmRlcjEuaGFzT3duUHJvcGVydHkoJ29wYWNpdHknKSkge1xuICAgICAgICAgICAgY3J0U2hlbGwuc2V0Q3lsaW5kZXIxT3BhY2l0eShzaGVsbFBhcmFtcy5jeWxpbmRlcjEub3BhY2l0eSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzaGVsbFBhcmFtcy5jeWxpbmRlcjEuY29sb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IGN5bGluZGVyMUNvbG9yID0gcGFyc2VDb2xvcihzaGVsbFBhcmFtcy5jeWxpbmRlcjEuY29sb3IpO1xuICAgICAgICAgICAgaWYgKGN5bGluZGVyMUNvbG9yICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgIGNydFNoZWxsLnNldEN5bGluZGVyMUNvbG9yKGN5bGluZGVyMUNvbG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHNoZWxsUGFyYW1zLmN5bGluZGVyMS5wb3NpdGlvbikge1xuICAgICAgICAgICAgY3J0U2hlbGwuc2V0Q3lsaW5kZXIxUG9zaXRpb24oXG4gICAgICAgICAgICAgIHNoZWxsUGFyYW1zLmN5bGluZGVyMS5wb3NpdGlvbi54LFxuICAgICAgICAgICAgICBzaGVsbFBhcmFtcy5jeWxpbmRlcjEucG9zaXRpb24ueSxcbiAgICAgICAgICAgICAgc2hlbGxQYXJhbXMuY3lsaW5kZXIxLnBvc2l0aW9uLnpcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzaGVsbFBhcmFtcy5jeWxpbmRlcjEucm90YXRpb24pIHtcbiAgICAgICAgICAgIGNydFNoZWxsLnNldEN5bGluZGVyMVJvdGF0aW9uKFxuICAgICAgICAgICAgICBzaGVsbFBhcmFtcy5jeWxpbmRlcjEucm90YXRpb24ueCxcbiAgICAgICAgICAgICAgc2hlbGxQYXJhbXMuY3lsaW5kZXIxLnJvdGF0aW9uLnksXG4gICAgICAgICAgICAgIHNoZWxsUGFyYW1zLmN5bGluZGVyMS5yb3RhdGlvbi56XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8g5aSE55CG56ys5LqM5Liq5ZyG5p+x5L2TXG4gICAgICAgIGlmIChzaGVsbFBhcmFtcy5jeWxpbmRlcjIpIHtcbiAgICAgICAgICBpZiAoc2hlbGxQYXJhbXMuY3lsaW5kZXIyLmhhc093blByb3BlcnR5KCd2aXNpYmxlJykpIHtcbiAgICAgICAgICAgIGNydFNoZWxsLnNldEN5bGluZGVyMlZpc2libGUoc2hlbGxQYXJhbXMuY3lsaW5kZXIyLnZpc2libGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc2hlbGxQYXJhbXMuY3lsaW5kZXIyLmhhc093blByb3BlcnR5KCdvcGFjaXR5JykpIHtcbiAgICAgICAgICAgIGNydFNoZWxsLnNldEN5bGluZGVyMk9wYWNpdHkoc2hlbGxQYXJhbXMuY3lsaW5kZXIyLm9wYWNpdHkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc2hlbGxQYXJhbXMuY3lsaW5kZXIyLmNvbG9yKSB7XG4gICAgICAgICAgICBjb25zdCBjeWxpbmRlcjJDb2xvciA9IHBhcnNlQ29sb3Ioc2hlbGxQYXJhbXMuY3lsaW5kZXIyLmNvbG9yKTtcbiAgICAgICAgICAgIGlmIChjeWxpbmRlcjJDb2xvciAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICBjcnRTaGVsbC5zZXRDeWxpbmRlcjJDb2xvcihjeWxpbmRlcjJDb2xvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzaGVsbFBhcmFtcy5jeWxpbmRlcjIucG9zaXRpb24pIHtcbiAgICAgICAgICAgIGNydFNoZWxsLnNldEN5bGluZGVyMlBvc2l0aW9uKFxuICAgICAgICAgICAgICBzaGVsbFBhcmFtcy5jeWxpbmRlcjIucG9zaXRpb24ueCxcbiAgICAgICAgICAgICAgc2hlbGxQYXJhbXMuY3lsaW5kZXIyLnBvc2l0aW9uLnksXG4gICAgICAgICAgICAgIHNoZWxsUGFyYW1zLmN5bGluZGVyMi5wb3NpdGlvbi56XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc2hlbGxQYXJhbXMuY3lsaW5kZXIyLnJvdGF0aW9uKSB7XG4gICAgICAgICAgICBjcnRTaGVsbC5zZXRDeWxpbmRlcjJSb3RhdGlvbihcbiAgICAgICAgICAgICAgc2hlbGxQYXJhbXMuY3lsaW5kZXIyLnJvdGF0aW9uLngsXG4gICAgICAgICAgICAgIHNoZWxsUGFyYW1zLmN5bGluZGVyMi5yb3RhdGlvbi55LFxuICAgICAgICAgICAgICBzaGVsbFBhcmFtcy5jeWxpbmRlcjIucm90YXRpb24uelxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIOazqOaEj++8mui/memHjOS4jemcgOimgeiwg+eUqHVwZGF0ZUNvbmZpZygp77yM5Zug5Li65LiK6Z2i55qEc2V05pa55rOV5bey57uP5pu05paw5LqG55u45bqU55qE54q25oCBXG4gICAgICAgIC8vIOiwg+eUqHVwZGF0ZUNvbmZpZygp5Lya5a+86Ie06YeN5aSN5Yib5bu657uE5Lu277yM6YCg5oiQ6YeN5aSN5qih5Z6L6Zeu6aKYXG4gICAgICAgIC8vIGNydFNoZWxsLnVwZGF0ZUNvbmZpZygpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG5cbi8vID09PT09IFVJ5o6n5Yi25Zmo5Yid5aeL5YyWID09PT09XG5mdW5jdGlvbiBpbml0VUlDb250cm9sbGVyKCkge1xuICAvLyDliJvlu7pVSeaOp+WItuWZqFxuICB1aUNvbnRyb2xsZXIgPSBuZXcgVUlDb250cm9sbGVyKHtcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICBndW4sXG4gICAgICBndW5IZWFkLFxuICAgICAgdjEsXG4gICAgICB2MixcbiAgICAgIGgxLFxuICAgICAgaDIsXG4gICAgICBzY3JlZW4sXG4gICAgICBjcnRTaGVsbFxuICAgIH0sXG4gICAgY29udHJvbGxlcnM6IHtcbiAgICAgIGNhbWVyYSxcbiAgICAgIGNvbnRyb2xzLFxuICAgICAgbGFiZWxTeXN0ZW0sXG4gICAgICBleHBsb2RlZFZpZXcsXG4gICAgICBkZW1vQW5pbWF0aW9uLFxuICAgICAgc2NyZWVuQ29udHJvbGxlcixcbiAgICAgIG9uRGVmbGVjdGlvbkNoYW5nZTogKGRlZmxlY3Rpb25QYXJhbXMpID0+IHtcbiAgICAgICAgdXBkYXRlRWxlY3Ryb25CZWFtKCk7XG4gICAgICB9LFxuICAgICAgb25XYXZlZm9ybUNoYW5nZTogKHdhdmVmb3JtUGFyYW1zKSA9PiB7XG4gICAgICAgIHVwZGF0ZUVsZWN0cm9uQmVhbSgpO1xuICAgICAgICB1cGRhdGVTY3JlZW5XYXZlZm9ybSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG5cbi8vID09PT09IOabtOaWsOeUteWtkOadnyA9PT09PVxuZnVuY3Rpb24gdXBkYXRlRWxlY3Ryb25CZWFtKCkge1xuICBsZXQgZGVmbGVjdGlvblBhcmFtcztcbiAgXG4gIC8vIOWmguaenOazouW9ouWQr+eUqO+8jOiuoeeul+azouW9ouS6p+eUn+eahOWBj+i9rOeUteWOi1xuICBpZiAoQ09ORklHLndhdmVmb3JtLmVuYWJsZWQpIHtcbiAgICBjb25zdCBkZWZsZWN0aW9uVm9sdGFnZSA9IHdhdmVmb3JtR2VuZXJhdG9yLmNhbGN1bGF0ZURlZmxlY3Rpb25Wb2x0YWdlKFxuICAgICAgQ09ORklHLndhdmVmb3JtLFxuICAgICAgQ09ORklHLmRlZmxlY3Rpb25cbiAgICApO1xuICAgIGRlZmxlY3Rpb25QYXJhbXMgPSB7XG4gICAgICBob3Jpem9udGFsOiB7IHZvbHRhZ2U6IGRlZmxlY3Rpb25Wb2x0YWdlLmhvcml6b250YWwgfSxcbiAgICAgIHZlcnRpY2FsOiB7IHZvbHRhZ2U6IGRlZmxlY3Rpb25Wb2x0YWdlLnZlcnRpY2FsIH1cbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIC8vIOebtOaOpeS9v+eUqOaOp+WItumdouadv+S4iueahOeUteWOi+WAvFxuICAgIGRlZmxlY3Rpb25QYXJhbXMgPSBDT05GSUcuZGVmbGVjdGlvbjtcbiAgfVxuICBcbiAgLy8g5pu05paw55S15a2Q5p2f6Lev5b6EXG4gIGVsZWN0cm9uQmVhbS51cGRhdGVCZWFtUGF0aChkZWZsZWN0aW9uUGFyYW1zKTtcbiAgXG4gIC8vIOabtOaWsOiNp+WFieWxj+WSjOWKqOaAgeWFieeCuVxuICB1cGRhdGVTY3JlZW5BbmRHbG93UG9pbnQoKTtcbn1cblxuLyoqXG4gKiDmm7TmlrDojaflhYnlsY/ms6LlvaLmmL7npLpcbiAqIOWcqOazouW9ouWPguaVsOaUueWPmOaXtua4hemZpOaXp+eahOaYvuekuuWGheWuuVxuICovXG5mdW5jdGlvbiB1cGRhdGVTY3JlZW5XYXZlZm9ybSgpIHtcbiAgLy8g5riF6Zmk6I2n5YWJ5bGP5LiK55qE5omA5pyJ6I2n5YWJ54K5XG4gIGlmIChzY3JlZW5Db250cm9sbGVyKSB7XG4gICAgc2NyZWVuQ29udHJvbGxlci5jbGVhckFsbEdsb3dQb2ludHMoKTtcbiAgfVxuICBcbiAgLy8g5riF6Zmk55S15a2Q5p2f55qE6L2o6L+554K5XG4gIGlmIChlbGVjdHJvbkJlYW0pIHtcbiAgICBlbGVjdHJvbkJlYW0uY2xlYXJBbGxUcmFjZXMoKTtcbiAgfVxuICBcbiAgLy8g6YeN572u5rOi5b2i55Sf5oiQ5Zmo55qE5pe26Ze077yM6YG/5YWN5rOi5b2i5LiN6L+e57utXG4gIC8vIOi/meehruS/neaWsOeahOazouW9ouWPguaVsOiDveS7juW5suWHgOeahOeKtuaAgeW8gOWni+aYvuekulxuICBpZiAod2F2ZWZvcm1HZW5lcmF0b3IpIHtcbiAgICB3YXZlZm9ybUdlbmVyYXRvci5yZXNldFRpbWUoKTtcbiAgfVxuICBcbiAgY29uc29sZS5sb2coJ+azouW9ouWPguaVsOWPmOWMlu+8muW3sua4hemZpOaXp+eahOazouW9ouaYvuekuu+8jOWHhuWkh+aYvuekuuaWsOazouW9oicpO1xufVxuXG4vKipcbiAqIOabtOaWsOiNp+WFieWxj+WSjOWKqOaAgeWFieeCuVxuICovXG5mdW5jdGlvbiB1cGRhdGVTY3JlZW5BbmRHbG93UG9pbnQoKSB7XG4gIGNvbnN0IGxhc3RCZWFtUG9pbnQgPSBlbGVjdHJvbkJlYW0uYmVhbVBvaW50c1tlbGVjdHJvbkJlYW0uYmVhbVBvaW50cy5sZW5ndGggLSAxXTtcbiAgXG4gIC8vIOabtOaWsOiNp+WFieWxj+S4iueahOeCuVxuICBzY3JlZW5Db250cm9sbGVyLmFkZEdsb3dQb2ludChsYXN0QmVhbVBvaW50KTtcbiAgXG59XG5cbi8vID09PT09IOeql+WPo+Wkp+Wwj+iwg+aVtCA9PT09PVxuZnVuY3Rpb24gb25XaW5kb3dSZXNpemUoKSB7XG4gIC8vIOiOt+WPluWunumZheaYvuekuuWwuuWvuO+8jOiAg+iZkURQSee8qeaUvlxuICBjb25zdCBkZXZpY2VQaXhlbFJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMTtcbiAgY29uc3Qgd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgY29uc3QgaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuICBcbiAgY2FtZXJhLmFzcGVjdCA9IHdpZHRoIC8gaGVpZ2h0O1xuICBjYW1lcmEudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpO1xuICBcbiAgLy8g6K6+572u5riy5p+T5Zmo5bC65a+477yM6ICD6JmR6auYRFBJXG4gIHJlbmRlcmVyLnNldFNpemUod2lkdGgsIGhlaWdodCk7XG4gIHJlbmRlcmVyLnNldFBpeGVsUmF0aW8oTWF0aC5taW4oZGV2aWNlUGl4ZWxSYXRpbywgMikpOyAvLyDpmZDliLbmnIDlpKdEUEnmr5TnjofkuLoyXG4gIFxuICAvLyDmm7TmlrDmoIfnrb7ns7vnu59cbiAgaWYgKGxhYmVsU3lzdGVtKSB7XG4gICAgbGFiZWxTeXN0ZW0ucmVzaXplKHdpZHRoLCBoZWlnaHQpO1xuICB9XG4gIFxuICAvLyDmm7TmlrBVSeaOp+WItuWZqFxuICBpZiAodWlDb250cm9sbGVyKSB7XG4gICAgdWlDb250cm9sbGVyLnJlc2l6ZSh3aWR0aCwgaGVpZ2h0KTtcbiAgfVxufVxuXG4vLyA9PT09PSDliqjnlLvlvqrnjq8gPT09PT1cbmZ1bmN0aW9uIGFuaW1hdGUodGltZXN0YW1wKSB7XG4gIHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlKTtcbiAgXG4gIC8vIOabtOaWsOaOp+WItuWZqFxuICBjb250cm9scy51cGRhdGUoKTtcbiAgXG4gIC8vIOabtOaWsOazouW9oueUn+aIkOWZqFxuICB3YXZlZm9ybUdlbmVyYXRvci51cGRhdGUodGltZXN0YW1wKTtcbiAgXG4gIC8vIOaMgee7reabtOaWsOeUteWtkOadn++8iOaXoOiuuuazouW9ouaYr+WQpuWQr+eUqOmDveimgeabtOaWsO+8iVxuICAvLyDov5nnoa7kv53kuobnlLXlrZDmnZ/lp4vnu4jlj6/op4Hlubblk43lupTlj4LmlbDlj5jljJZcbiAgdXBkYXRlRWxlY3Ryb25CZWFtKCk7XG4gIFxuICAvLyDmm7TmlrDojaflhYnlsY/mlYjmnpxcbiAgc2NyZWVuQ29udHJvbGxlci51cGRhdGUoKTtcbiAgXG4gIC8vIOabtOaWsENSVOWkluWjs1xuICBpZiAoY3J0U2hlbGwpIHtcbiAgICBjcnRTaGVsbC51cGRhdGUodGltZXN0YW1wKTtcbiAgfVxuICBcbiAgLy8g5pu05paw5YiG6Kej6KeG5Zu+XG4gIGlmIChleHBsb2RlZFZpZXcpIHtcbiAgICBleHBsb2RlZFZpZXcudXBkYXRlKCk7XG4gIH1cbiAgXG4gIC8vIOabtOaWsOa8lOekuuWKqOeUu1xuICBpZiAoZGVtb0FuaW1hdGlvbikge1xuICAgIGRlbW9BbmltYXRpb24udXBkYXRlKCk7XG4gIH1cbiAgXG4gIC8vIOabtOaWsOagh+etvuezu+e7n1xuICBpZiAobGFiZWxTeXN0ZW0pIHtcbiAgICBsYWJlbFN5c3RlbS51cGRhdGUoY2FtZXJhKTtcbiAgfVxuICBcbiAgLy8g5pu05pawVFdFRU7vvIjkvb/nlKjmlrDnmoQgR3JvdXAgQVBJ77yJXG4gIHR3ZWVuR3JvdXAudXBkYXRlKCk7XG4gIFxuICAvLyDmuLLmn5PlnLrmma9cbiAgcmVuZGVyZXIucmVuZGVyKHNjZW5lLCBjYW1lcmEpO1xufVxuXG4vLyA9PT09PSDlkK/liqjlupTnlKggPT09PT1cbmluaXQoKS5jYXRjaChlcnJvciA9PiB7XG4gIGNvbnNvbGUuZXJyb3IoJ+W6lOeUqOWIneWni+WMluWksei0pTonLCBlcnJvcik7XG59KTtcblxuLy8gPT09PT0g5Yid5aeL5YyW5Y+z5LiK6KeS5YiH5o2i5o6n5Lu277yI5YaF6YOo6aG177yJID09PT09XG5jb25zdCBib290SW50ZXJuYWxTd2l0Y2hlciA9ICgpID0+IHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZW5kZXJTd2l0Y2hlcignaW50ZXJuYWwnKTtcbiAgfVxufTtcbmlmICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdsb2FkaW5nJykge1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgYm9vdEludGVybmFsU3dpdGNoZXIpO1xufSBlbHNlIHtcbiAgYm9vdEludGVybmFsU3dpdGNoZXIoKTtcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///962\n")}},__webpack_module_cache__={},deferred;function __webpack_require__(n){var g=__webpack_module_cache__[n];if(void 0!==g)return g.exports;var e=__webpack_module_cache__[n]={id:n,exports:{}};return __webpack_modules__[n](e,e.exports,__webpack_require__),e.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(n,g,e,I)=>{if(!g){var t=1/0;for(C=0;C<deferred.length;C++){for(var[g,e,I]=deferred[C],l=!0,i=0;i<g.length;i++)(!1&I||t>=I)&&Object.keys(__webpack_require__.O).every((n=>__webpack_require__.O[n](g[i])))?g.splice(i--,1):(l=!1,I<t&&(t=I));if(l){deferred.splice(C--,1);var c=e();void 0!==c&&(n=c)}}return n}I=I||0;for(var C=deferred.length;C>0&&deferred[C-1][2]>I;C--)deferred[C]=deferred[C-1];deferred[C]=[g,e,I]},__webpack_require__.n=n=>{var g=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(g,{a:g}),g},__webpack_require__.d=(n,g)=>{for(var e in g)__webpack_require__.o(g,e)&&!__webpack_require__.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:g[e]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),__webpack_require__.o=(n,g)=>Object.prototype.hasOwnProperty.call(n,g),(()=>{var n={456:0};__webpack_require__.O.j=g=>0===n[g];var g=(g,e)=>{var I,t,[l,i,c]=e,C=0;if(l.some((g=>0!==n[g]))){for(I in i)__webpack_require__.o(i,I)&&(__webpack_require__.m[I]=i[I]);if(c)var o=c(__webpack_require__)}for(g&&g(e);C<l.length;C++)t=l[C],__webpack_require__.o(n,t)&&n[t]&&n[t][0](),n[t]=0;return __webpack_require__.O(o)},e=self.webpackChunkoscilloscope_simulator=self.webpackChunkoscilloscope_simulator||[];e.forEach(g.bind(null,0)),e.push=g.bind(null,e.push.bind(e))})(),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__.O(void 0,[233,96],(()=>__webpack_require__(962)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();